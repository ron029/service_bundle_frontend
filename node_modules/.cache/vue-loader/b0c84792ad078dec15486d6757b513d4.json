{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/ServiceListCustomer.vue?vue&type=style&index=0&id=c7b4811e&lang=css&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/ServiceListCustomer.vue","mtime":1695241256792},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/css-loader/dist/cjs.js","mtime":1692833962858},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js","mtime":1692833962314},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/postcss-loader/dist/cjs.js","mtime":1692833963133},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRlX2xpbmsgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoKLmRhdGVfbnVtIHsKICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7ICovCiAgcGFkZGluZzogNnB4Owp9CgpoNSB7CiAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmOwogIGZvbnQtd2VpZ2h0OiBib2xkZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG1hcmdpbi1ib3R0b206IDIzMHB4OwogIHotaW5kZXg6IDI7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOwp9Cgouc2VydmljZV9saW5rewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBjb2xvcjogYmxhY2s7Cn0KCi5zZXJ2aWNlX2l0ZW0gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAwOwp9Cgouc2VydmljZV9pdGVtIHAgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgouc2VydmljZV9kZXRhaWxzIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogMjsKfQoKLnNlcnZpY2VfaW1hZ2UgewogIHRvcDogMTBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogNTAlOyAvKiBNb3ZlIHRoZSBlbGVtZW50IGhhbGZ3YXkgYWNyb3NzIHRoZSB2aWV3cG9ydCBob3Jpem9udGFsbHkgKi8KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IC8qIENlbnRlciB0aGUgZWxlbWVudCAqLwogIHotaW5kZXg6IDE7Cn0K"},{"version":3,"sources":["ServiceListCustomer.vue"],"names":[],"mappings":";AAoJA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ServiceListCustomer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Services</h1>\n    <div class=\"row\">\n      <div v-for=\"(item, index) in service_by_category\" :key=\"index\" class=\"col-md-4 mb-3\">\n        <div class=\"card\">\n          <div class=\"card-body service_item\">\n            <a class=\"service_link\" :href=\"generate_service_link(item.id)\">\n              <h5>{{ item.name }}</h5>\n              <img class=\"service_image\" :src=\"item.image\" width=\"250px\" height=\"250px\">\n              <p class=\"service_details\">{{ item.description }}</p>\n              <p class=\"service_details\">{{ formatToPHP(item.price) }}</p>\n            </a>\n            <table class=\"table service_details\">\n              <thead>\n                <tr>\n                  <th>Schedule</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <div class=\"time\">\n                    <datepicker\n                    :disabled-dates=\"getDisabledDates(item.timeSlot)\"\n                    :day-cell-content=\"params => format_date(params, item)\"\n                    :inline=\"true\">\n                    </datepicker>\n                  </div>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Datepicker from 'vuejs-datepicker';\nexport default {\n  name: 'ServiceListCustomer',\n  data() {\n    return {\n      service_by_category: [],\n    }\n  },\n  components: { Datepicker, },\n  methods: { \n    generate_service_link(service_id) {\n      return `/service_categories/${this.$route.params.categoryId}/services/${service_id}`;\n    },\n    formatToPHP(number) {\n      // Convert the number to a string with two decimal places\n      const formattedNumber = Number(number).toFixed(2);\n\n      // Add \"PHP \" to the formatted number and use commas as a thousands separator\n      const result = `PHP ${formattedNumber.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ', ')}`;\n\n      return result;\n    },\n    timestampTodate(timestamp) {\n      const date = new Date(timestamp);\n\n      // Extract the components (month, day, year)\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Add 1 because months are zero-indexed\n      const day = date.getDate().toString().padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Format the date as MM-DD-YYYY\n      return `${year}-${month}-${day}`;\n    },\n    findDateRangeIndex(dateRanges, targetDate) {\n      for (let i = 0; i < dateRanges.length; i++) {\n        const { startDate, endDate } = dateRanges[i];\n        const date = new Date(targetDate);\n\n        if (date >= new Date(startDate) && date <= new Date(endDate)) {\n          return i; // Return the index if the date is within the range\n        }\n      }\n      return -1; // Return -1 if the date is not found in any range\n    },\n    format_date(params, item) {\n      if (params.isDisabled == false) {\n        console.log('item var: ', item.timeSlot, params)\n        console.log('the time is: ', this.timestampTodate(params.timestamp));\n        let range = item.timeSlot[this.findDateRangeIndex(item.timeSlot, this.timestampTodate(params.timestamp))];\n        console.log('timeslot info is: ', range);\n        return `<span class=\"date_num\" onclick=\"window.location.href='/service_categories/${this.$route.params.categoryId}/services/${item.id}/time_slots/${range.id}?date=${this.timestampTodate(params.timestamp)}'\">${params.date}</span>`;\n      } else {\n        return params.date\n      }\n    },\n    getDisabledDates(dates) {\n      let enabledDates = [];\n\n      for (const date of dates) {\n        const from = this.formatDate(date.startDate);\n        const to = this.formatDate(date.endDate);\n\n        // Create an array of dates between 'from' and 'to'\n        const currentDate = new Date(from);\n        while (currentDate <= new Date(to)) {\n          enabledDates.push(currentDate.toISOString().split('T')[0]);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      return {\n        customPredictor: date => {\n          const formattedDate = `${date.toISOString().split('T')[0]}`;\n          return !enabledDates.includes(formattedDate);\n        },\n      };\n    },\n    formatDate(dateToParse) {\n      const dateComponents = dateToParse.split('-');\n      const year = parseInt(dateComponents[0]);\n      const month = parseInt(dateComponents[1]) - 1;\n      const day = parseInt(dateComponents[2]);\n      const jsDate = new Date(year, month, day);\n      return jsDate;\n    },\n    async get_service_by_category() {\n      console.log('service category id is now', this.serviceCategoryId)\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/ServiceByCategory.gql'),\n          variables: { id: parseInt(this.$route.params.categoryId)}\n        });\n        this.service_by_category = response.data.serviceByCategory;\n        console.log(this.service_by_category);\n      } catch (error) { \n          console.error('Error creating like:', error);\n      }\n    },\n    getServiceCategoryURL(item, ite) {\n      return `/service_categories/${this.$route.params.categoryId}/services/${item.id}/time_slots/${ite.id}`;\n    }    \n  },\n  mounted() {\n    this.get_service_by_category()\n  } \n}\n</script>\n\n<style>\n.date_link {\n  text-decoration: none;\n}\n\n.date_num {\n  /* background-color: red; */\n  padding: 6px;\n}\n\nh5 {\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-weight: bolder;\n  position: relative;\n  margin-bottom: 230px;\n  z-index: 2;\n  background-color: rgba(255, 255, 255, 0.7);\n}\n\n.service_link{\n  text-decoration: none;\n  color: black;\n}\n\n.service_item {\n  position: relative;\n  z-index: 0;\n}\n\n.service_item p {\n  font-weight: bold;\n}\n\n.service_details {\n  position: relative;\n  z-index: 2;\n}\n\n.service_image {\n  top: 10px;\n  position: absolute;\n  left: 50%; /* Move the element halfway across the viewport horizontally */\n  transform: translateX(-50%); /* Center the element */\n  z-index: 1;\n}\n</style>\n"]}]}