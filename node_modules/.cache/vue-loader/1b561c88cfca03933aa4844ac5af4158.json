{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue?vue&type=style&index=0&id=ef618586&lang=css&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue","mtime":1695241256782},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/css-loader/dist/cjs.js","mtime":1692833962858},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js","mtime":1692833962314},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/postcss-loader/dist/cjs.js","mtime":1692833963133},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zZXJ2aWNlX2NhdGVnb3J5X2hlYWRlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9Cgouc2VydmljZV9jYXRlZ29yeV9saW5rIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgYm9yZGVyOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7IC8qIFN0YXJ0IHdpdGggYSB0cmFuc3BhcmVudCBib3JkZXIgKi8KICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlOyAvKiBBZGQgYSB0cmFuc2l0aW9uIGVmZmVjdCBmb3IgYm9yZGVyLWNvbG9yICovCn0KCi5jYXJkOmhvdmVyIHsKICBib3JkZXItY29sb3I6IHBvd2RlcmJsdWU7Cn0K"},{"version":3,"sources":["CustomerPage.vue"],"names":[],"mappings":";AAgDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CustomerPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Service Category</h1>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div v-for=\"(item, index) in this.service_categories\" :key=\"index\" class=\"col-md-4 mb-3\">\n          <a class=\"service_category_link\" :href=\"getServiceCategoryURL(item)\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <!-- Display the content of each box here -->\n                <h1 class=\"service_category_header\">{{ item.name }}</h1>\n                <p>{{ item.description }}</p>\n                <img :src=\"item.image\" width=\"200px\" height=\"200px\">\n              </div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerPage',\n  data(){\n    return {\n      service_categories: [],\n    }\n  },\n  methods: {\n    async get_service_categories() {\n      try {\n        const response = await this.$apollo.query({ query: require('@/graphql/Category.gql'), });\n        this.service_categories = response.data.categories;\n      } catch (error) {\n        console.error('Error creating like:', error);\n      }\n    },\n    getServiceCategoryURL(item) { return `/service_categories/${item.id}`; }\n  }, \n  mounted(){\n    this.get_service_categories(this.$route.params.id)\n  }\n}\n</script>\n\n<style>\n.service_category_header {\n  text-decoration: none;\n}\n\n.service_category_link {\n  text-decoration: none;\n  border: 5px solid transparent; /* Start with a transparent border */\n  transition: border-color 0.3s ease; /* Add a transition effect for border-color */\n}\n\n.card:hover {\n  border-color: powderblue;\n}\n</style>\n"]}]}