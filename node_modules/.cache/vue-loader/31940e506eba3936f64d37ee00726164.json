{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue","mtime":1695241256782},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3VzdG9tZXJQYWdlJywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzZXJ2aWNlX2NhdGVnb3JpZXM6IFtdLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0X3NlcnZpY2VfY2F0ZWdvcmllcygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7IHF1ZXJ5OiByZXF1aXJlKCdAL2dyYXBocWwvQ2F0ZWdvcnkuZ3FsJyksIH0pOwogICAgICAgIHRoaXMuc2VydmljZV9jYXRlZ29yaWVzID0gcmVzcG9uc2UuZGF0YS5jYXRlZ29yaWVzOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGxpa2U6JywgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgZ2V0U2VydmljZUNhdGVnb3J5VVJMKGl0ZW0pIHsgcmV0dXJuIGAvc2VydmljZV9jYXRlZ29yaWVzLyR7aXRlbS5pZH1gOyB9CiAgfSwgCiAgbW91bnRlZCgpewogICAgdGhpcy5nZXRfc2VydmljZV9jYXRlZ29yaWVzKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICB9Cn0K"},{"version":3,"sources":["CustomerPage.vue"],"names":[],"mappings":";AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CustomerPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Service Category</h1>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div v-for=\"(item, index) in this.service_categories\" :key=\"index\" class=\"col-md-4 mb-3\">\n          <a class=\"service_category_link\" :href=\"getServiceCategoryURL(item)\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <!-- Display the content of each box here -->\n                <h1 class=\"service_category_header\">{{ item.name }}</h1>\n                <p>{{ item.description }}</p>\n                <img :src=\"item.image\" width=\"200px\" height=\"200px\">\n              </div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerPage',\n  data(){\n    return {\n      service_categories: [],\n    }\n  },\n  methods: {\n    async get_service_categories() {\n      try {\n        const response = await this.$apollo.query({ query: require('@/graphql/Category.gql'), });\n        this.service_categories = response.data.categories;\n      } catch (error) {\n        console.error('Error creating like:', error);\n      }\n    },\n    getServiceCategoryURL(item) { return `/service_categories/${item.id}`; }\n  }, \n  mounted(){\n    this.get_service_categories(this.$route.params.id)\n  }\n}\n</script>\n\n<style>\n.service_category_header {\n  text-decoration: none;\n}\n\n.service_category_link {\n  text-decoration: none;\n  border: 5px solid transparent; /* Start with a transparent border */\n  transition: border-color 0.3s ease; /* Add a transition effect for border-color */\n}\n\n.card:hover {\n  border-color: powderblue;\n}\n</style>\n"]}]}