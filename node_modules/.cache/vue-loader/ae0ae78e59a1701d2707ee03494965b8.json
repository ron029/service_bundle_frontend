{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/CustomerBookingPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/CustomerBookingPage.vue","mtime":1695803441494},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3VzdG9tZXJCb29raW5nJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxsOiAnJywKICAgICAgcGVuZGluZzogJycsCiAgICAgIHBhaWQ6ICcnLAogICAgICBjb25maXJtZWQ6ICcnLAogICAgICBjYW5jZWxsZWQ6ICcnLAogICAgICBjb21wbGV0ZWQ6ICcnCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXREYXRlKGlucHV0RGF0ZSkgewogICAgICBjb25zdCBvcHRpb25zID0geyB5ZWFyOiAnbnVtZXJpYycsIG1vbnRoOiAnbG9uZycsIGRheTogJ251bWVyaWMnIH07CiAgICAgIHJldHVybiBuZXcgRGF0ZShpbnB1dERhdGUpLnRvTG9jYWxlRGF0ZVN0cmluZyh1bmRlZmluZWQsIG9wdGlvbnMpOwogICAgfSwKICAgIGNvbnZlcnRUaW1lVG9BTVBNKHRpbWVTdHJpbmcpIHsKICAgICAgY29uc3QgZGF0ZVRpbWUgPSBuZXcgRGF0ZSh0aW1lU3RyaW5nKTsKICAgICAgY29uc3QgaG91cnMgPSBkYXRlVGltZS5nZXRVVENIb3VycygpOwogICAgICBjb25zdCBtaW51dGVzID0gZGF0ZVRpbWUuZ2V0VVRDTWludXRlcygpOwogICAgICBjb25zdCBhbXBtID0gaG91cnMgPj0gMTIgPyAnUE0nIDogJ0FNJzsKICAgICAgY29uc3QgZm9ybWF0dGVkSG91cnMgPSBob3VycyAlIDEyIHx8IDEyOyAvLyBDb252ZXJ0IDAgdG8gMTIgZm9yIDEyLWhvdXIgZm9ybWF0CgogICAgICBjb25zdCBmb3JtYXR0ZWRUaW1lID0gYCR7Zm9ybWF0dGVkSG91cnMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfToke21pbnV0ZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfSAke2FtcG19YDsKCiAgICAgIHJldHVybiBmb3JtYXR0ZWRUaW1lOwogICAgfSwKICAgIGxvYWRfdGFibGUoKSB7CiAgICAgIGNvbnN0IHJhZGlvQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idG4tY2hlY2snKTsKICAgICAgY29uc3QgdGFiQ29udGVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFiLXBhbmUnKTsKCiAgICAgIHJhZGlvQnV0dG9ucy5mb3JFYWNoKChyYWRpb0J1dHRvbiwgaW5kZXgpID0+IHsKICAgICAgICByYWRpb0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7CiAgICAgICAgICB0YWJDb250ZW50cy5mb3JFYWNoKCh0YWJDb250ZW50KSA9PiB7CiAgICAgICAgICAgIHRhYkNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycsICdhY3RpdmUnKTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGFiQ29udGVudHNbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ3Nob3cnLCAnYWN0aXZlJyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGFzeW5jIGNhcnRfaXRlbV9jYXRlZ29yeSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgICBxdWVyeTogcmVxdWlyZSgnQC9ncmFwaHFsL0NhcnRJdGVtQ2F0ZWdvcnlDdXN0b21lci5ncWwnKSwKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgICB0aGlzLmFsbCA9IHJlc3BvbnNlLmRhdGEuYWxsOwogICAgICAgIHRoaXMucGVuZGluZyA9IHJlc3BvbnNlLmRhdGEucGVuZGluZzsKICAgICAgICB0aGlzLnBhaWQgPSByZXNwb25zZS5kYXRhLnBhaWQ7CiAgICAgICAgdGhpcy5jb25maXJtZWQgPSByZXNwb25zZS5kYXRhLmNvbmZpcm1lZDsKICAgICAgICB0aGlzLmNhbmNlbGxlZCA9IHJlc3BvbnNlLmRhdGEuY2FuY2VsbGVkOwogICAgICAgIHRoaXMuY29tcGxldGVkID0gcmVzcG9uc2UuZGF0YS5jb21wbGV0ZWQ7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7IAogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGxpa2U6JywgZXJyb3IpOwogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuY2FydF9pdGVtX2NhdGVnb3J5KCk7CiAgICB0aGlzLmxvYWRfdGFibGUoKTsKICB9Cn0K"},{"version":3,"sources":["CustomerBookingPage.vue"],"names":[],"mappings":";AAiNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CustomerBookingPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"service_category_header\">\n      <h2 class=\"service_category_title\">My <span class=\"service_category_title_name\">Bookings</span></h2>\n      <div class=\"btn-group booking_option\" role=\"group\" aria-label=\"Navigation\">\n        <input type=\"radio\" class=\"btn-check\" name=\"nav\" id=\"all-tab\" autocomplete=\"off\" checked>\n        <label class=\"btn btn-outline-primary\" for=\"all-tab\">All</label>\n        <!-- <input type=\"radio\" class=\"btn-check\" name=\"nav\" id=\"pending-tab\" autocomplete=\"off\">\n        <label class=\"btn btn-outline-primary\" for=\"pending-tab\">Pending</label> -->\n        <input type=\"radio\" class=\"btn-check\" name=\"nav\" id=\"upcoming-tab\" autocomplete=\"off\">\n        <label class=\"btn btn-outline-primary\" for=\"upcoming-tab\">Upcoming</label>\n        <input type=\"radio\" class=\"btn-check\" name=\"nav\" id=\"completed-tab\" autocomplete=\"off\">\n        <label class=\"btn btn-outline-primary\" for=\"completed-tab\">Completed</label>\n        <input type=\"radio\" class=\"btn-check\" name=\"nav\" id=\"cancelled-tab\" autocomplete=\"off\">\n        <label class=\"btn btn-outline-primary\" for=\"cancelled-tab\">Cancelled</label>\n      </div>\n    </div>\n    <div class=\"tab-content\" id=\"myTabContent\">\n      <!-- Content for each radio button goes here -->\n      <div class=\"tab-pane fade show active\" id=\"all-tab-pane\" role=\"tabpanel\" aria-labelledby=\"all-tab\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"this.all.length > 0\">\n            <tr v-for=\"(item, index) in this.all\" :key=\"item.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ item.service.name }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>{{ convertTimeToAMPM(item.time) }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr>\n              <td colspan=\"5\">There is nothing to show in this table.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <!-- <div class=\"tab-pane fade show\" id=\"pending-tab-pane\" role=\"tabpanel\" aria-labelledby=\"pending-tab\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in this.pending\" :key=\"index\">\n              <td>{{ item.service.name }}</td>\n              <td>{{ item.date }}</td>\n              <td>{{ item.time }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div> -->\n      <div class=\"tab-pane fade\" id=\"upcoming-tab-pane\" role=\"tabpanel\" aria-labelledby=\"upcoming-tab\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"this.paid.length > 0\">\n            <tr v-for=\"(item, index) in this.paid\" :key=\"item.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ item.service.name }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>{{ convertTimeToAMPM(item.time) }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr>\n              <td colspan=\"5\">There is nothing to show in this table.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"tab-pane fade\" id=\"completed-tab-pane\" role=\"tabpanel\" aria-labelledby=\"completed-tab\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"this.completed.length > 0\">\n            <tr v-for=\"(item, index) in this.completed\" :key=\"item.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ item.service.name }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>{{ convertTimeToAMPM(item.time) }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr>\n              <td colspan=\"5\">There is nothing to show in this table.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"tab-pane fade\" id=\"cancelled-tab-pane\" role=\"tabpanel\" aria-labelledby=\"cancelled-tab\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"this.cancelled.length > 0\">\n            <tr v-for=\"(item, index) in this.cancelled\" :key=\"item.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ item.service.name }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>{{ convertTimeToAMPM(item.time) }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr>\n              <td colspan=\"5\">There is nothing to show in this table.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"tab-pane fade\" id=\"mostbook-tab-pane\" role=\"tabpanel\" aria-labelledby=\"mostbook-tab\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Service Name</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"this.completed.length > 0\">\n            <tr v-for=\"(item, index) in this.completed\" :key=\"item.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ item.service.name }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>{{ convertTimeToAMPM(item.time) }}</td>\n              <td class=\"no-wrap booking_status\">\n                <svg :class=\"item.status\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 13 13\">\n                  <circle cx=\"8\" cy=\"5\" r=\"5\"/>\n                </svg>\n                {{ item.status }}\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr>\n              <td colspan=\"5\">There is nothing to show in this table.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerBooking',\n  data() {\n    return {\n      all: '',\n      pending: '',\n      paid: '',\n      confirmed: '',\n      cancelled: '',\n      completed: ''\n    }\n  },\n  methods: {\n    formatDate(inputDate) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(inputDate).toLocaleDateString(undefined, options);\n    },\n    convertTimeToAMPM(timeString) {\n      const dateTime = new Date(timeString);\n      const hours = dateTime.getUTCHours();\n      const minutes = dateTime.getUTCMinutes();\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12-hour format\n\n      const formattedTime = `${formattedHours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')} ${ampm}`;\n\n      return formattedTime;\n    },\n    load_table() {\n      const radioButtons = document.querySelectorAll('.btn-check');\n      const tabContents = document.querySelectorAll('.tab-pane');\n\n      radioButtons.forEach((radioButton, index) => {\n        radioButton.addEventListener('change', () => {\n          tabContents.forEach((tabContent) => {\n            tabContent.classList.remove('show', 'active');\n          });\n          tabContents[index].classList.add('show', 'active');\n        });\n      });\n    },\n    async cart_item_category() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/CartItemCategoryCustomer.gql'),\n        });\n        console.log(response)\n        this.all = response.data.all;\n        this.pending = response.data.pending;\n        this.paid = response.data.paid;\n        this.confirmed = response.data.confirmed;\n        this.cancelled = response.data.cancelled;\n        this.completed = response.data.completed;\n      } catch (error) { \n        console.error('Error creating like:', error);\n      }\n    },\n  },\n  mounted() {\n    this.cart_item_category();\n    this.load_table();\n  }\n}\n</script>\n\n<style>\n\n</style>\n\n"]}]}