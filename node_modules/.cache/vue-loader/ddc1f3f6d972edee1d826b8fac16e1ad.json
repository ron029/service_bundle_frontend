{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/ServiceListCustomer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/ServiceListCustomer.vue","mtime":1697850877698},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ServiceListCustomer.vue"],"names":[],"mappings":";AAifile":"ServiceListCustomer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- <div class=\"tooltip_custom\">Hover over me\n      <span class=\"tooltiptext_custom\">Tooltip text</span>\n    </div> -->\n    <!-- <h1>Services</h1> -->\n    <!-- <button @click=\"openModal\">Open Modal</button>\n    <button id=\"toggleButton\">Toggle Offcanvas</button> -->\n    <!-- Use the Modal component -->\n    <ModalTest :modalId=\"modalId\">\n      <!-- Customize the content using slots -->\n      <template v-slot:header>Custom Modal Header</template>\n      <template v-slot:body>Custom Modal Body</template>\n      <template v-slot:footer>\n        <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n      </template>\n    </ModalTest>\n    <div v-if=\"err_notif\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      {{ err_message }} <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n    <div class=\"row service_list_customer\">\n      <div class=\"col-md-6 service_list_customer_services\">\n        <div v-for=\"(item,index) in service_by_category\" :key=\"index\" class=\"\">\n          <div class=\"card service_box\">\n            <div class=\"row card-body service_item\" @click=\"showService(item)\">\n              <!-- <a class=\"service_link\" :href=\"generate_service_link(item.id)\"> -->\n              <h5>{{ item.name }}</h5>\n              <div class=\"col-md-4\">\n                <img v-if=\"calendar\" class=\"service_image\" :src=\"item.image\">\n                <img v-else class=\"service_image_whole\" :src=\"item.image\">\n                <!-- <p class=\"service_details\" v-if=\"!calendar\">{{ item.description }}</p> -->\n                <p class=\"service_details\" v-if=\"!calendar\">{{ formatToPHP(item.price) }}</p>\n              </div>\n              <!-- </a> -->\n              <div class=\"col-md-8\" v-if=\"calendar\">\n                <!-- :style=\"showTimeslotIndex === index ? 'display: block;' : 'display: none;'\" -->\n                <datepicker\n                  class=\"time\"\n                  :use-utc=\"true\"\n                  :disabled-dates=\"getDisabledDates(item.timeSlot)\"\n                  :day-cell-content=\"params => format_date(params)\"\n                  :inline=\"true\"\n                  @selected=\"params => handleDateSelected(params, item)\"\n                ></datepicker>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 hidden-sm hidden-xs service_list_customer_timeslot\">\n        <div class=\"offcanvas_timeslot_info\">\n          <h1 v-if=\"displayService != ''\">{{ displayService }}</h1>\n          <form @submit.prevent=\"submitForm\">\n            <div v-if=\"open_time == false\">\n              <p>Duration: {{ duration }}</p>\n              <p>Available Slot: {{ slot }}</p>  \n              <div v-if=\"time == '' && available_timeslot.length > 0\">\n                <p>Available timeslot:</p>\n                <div class=\"scrollable-container\">\n                  <div class=\"scrollable-list\">\n                    <div v-for=\"(timeOption, index) in available_timeslot\" :key=\"index\">\n                      <label class=\"radio-label\">\n                        <input\n                          type=\"radio\"\n                          :value=\"timeOption.value\"\n                          v-model=\"time\"\n                          name=\"timeOption\"\n                          class=\"radio-input\"\n                        />\n                        {{ timeOption.label }}\n                      </label>\n                    </div>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                    <p>test paragraph</p>\n                  </div>\n                </div>\n              </div>\n              <div v-else-if=\"time == '' && available_timeslot.length <= 0\">\n                <p v-if=\"maxTime != ''\">No open time slots on this day.</p>\n                <p v-else>Select a date for your appointment.</p>\n              </div>\n              <div v-else>\n                <p @click.prevent=\"changeTime\">Selected Time: {{ time }}</p>\n              </div>\n            </div>\n            <div v-else>\n              <vue2-timepicker \n                v-model=\"time\"\n                :hour-range=\"[[startHour(),endHour()]]\"\n                lazy\n                hide-clear-button\n                @change=\"onTimeSelected()\"\n              />\n              <p v-if=\"time != ''\">Selected Time: {{ time }}</p>\n            </div>\n            <input v-if=\"time != ''\" type=\"submit\" value=\"submit\">\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, helpers } from '@vuelidate/validators';\nimport { useVuelidate } from '@vuelidate/core'\nimport ModalTest from '@/components/ModalTest.vue';\nimport Datepicker from 'vuejs-datepicker';\nimport Vue2Timepicker from 'vue2-timepicker';\nexport default {\n  name: 'ServiceListCustomer',\n  setup () { return { v$: useVuelidate() } },\n  data() {\n    return {\n      service_by_category: [],\n      modalId: 'customModal',\n      available_timeslot: [],\n      duration: 0,\n      date: '',\n      open_time: false,\n      minTime: 0,\n      maxTime: 0,\n      time: '',\n      convertedTime: '',\n      service_id: '',\n      service: [],\n      slot: 0,\n      err_message: '',\n      err_notif: false,\n      date_checked: false,\n      calendar: true,\n      showCalendarIndex: 0,\n      displayService: '',\n    }\n  },\n  validations() {\n    const min_time = value => {\n      const selectedTime = new Date(`1970-01-01T${this.convertTo24HourFormat(value)}`);\n      console.log('min_time val: ', value, this.minTime)\n      const mintime = new Date(`1970-01-01T${this.convertTo24HourFormat(this.minTime)}`);\n      console.log('min_time result: ', selectedTime >= mintime)\n      return selectedTime >= mintime;\n    };\n    const max_time = value => {\n      const selectedTime = new Date(`1970-01-01T${this.convertTo24HourFormat(value)}`);\n      console.log('max_time val: ', value, this.maxTime)\n      const maxtime = new Date(`1970-01-01T${this.convertTo24HourFormat(this.maxTime)}`);\n      console.log('max_time result: ', selectedTime <= maxtime)\n      return selectedTime <= maxtime;\n    };\n    return {\n      time: {\n        required,\n        // validTime(value) {\n        //   const timePattern = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n        //   return timePattern.test(value);\n        // },\n        min_time: helpers.withMessage('The min time must be ' + this.minTime, min_time) ,     \n        max_time: helpers.withMessage('The max time must be ' + this.maxTime, max_time) ,     \n      },\n    }\n  },\n  components: {\n    Datepicker,\n    ModalTest,\n    Vue2Timepicker,\n  },\n  methods: {\n    showService(item) {\n      this.displayService = item.name\n      history.pushState(\n        {},\n        null,\n        this.$route.path + '/services/' + encodeURIComponent(item.id)\n      )\n    },\n    showCalendar(index) {\n      this.calendar = true;\n      this.showCalendarIndex = index;\n      console.log('showCalendar', index);\n    },\n    hideCalendar() {\n      this.calendar = false;\n      console.log('hide calendar')\n    },\n    isTimeInFormat() {\n      const timePattern = /^(0[1-9]|1[0-2]):[0-5][0-9]:[0-5][0-9] (AM|PM)$/;\n      return timePattern.test(this.time);\n    },\n    async create_cart_item() {\n      try {\n        const date = this.date;\n        const service_id = this.service.id;\n        const time = this.time;\n        console.log('serviceid is ', service_id)\n        console.log('date ', date);\n        console.log('time ', time)\n\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/CartItemCreate.gql'),\n          variables: {\n            serviceId: service_id,\n            date: date,\n            time: time,\n          },\n        });\n        console.log('response from server create cart item',response);\n        if (response.data.createCartItem.errors.length < 1) {\n          alert('SUCCESS !')\n          // this.$router.push('/cart')\n        } else {\n          this.handleError(response.data.createCartItem.errors[0]);\n        }\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n        // Handle the error here, e.g., show an error message to the user.\n      }\n    },\n    handleError(errMsg) {\n      this.err_message = errMsg;\n      this.err_notif = true;\n      setTimeout(() => this.err_notif = false, 10000);\n    },\n    onTimeSelected() {\n      this.time = this.convertTo12HourFormat(this.time);\n    },\n    changeTime() { this.time = '' },\n    convertTo24HourFormat(time12) {\n      // Split the input time into hours, minutes, and AM/PM parts\n      const [timePart, ampm] = time12.split(' ');\n      const [hours, minutes, seconds] = timePart.split(':');\n\n      // Parse the hours as an integer\n      let convertedHours = parseInt(hours, 10);\n\n      // Adjust the hours based on AM or PM\n      if (ampm.toUpperCase() === 'PM' && convertedHours !== 12) {\n        convertedHours += 12;\n      } else if (ampm.toUpperCase() === 'AM' && convertedHours === 12) {\n        convertedHours = 0;\n      }\n      // Create the 24-hour format time string\n      const convertedTime = `${String(convertedHours).padStart(2, '0')}:${minutes}:${seconds}`;\n\n      return convertedTime;\n    },\n    convertTo12HourFormat(time24) {\n      const [hours, minutes] = time24.split(\":\");\n      let ampm = \"AM\";\n      let convertedHours = parseInt(hours, 10);\n      if (convertedHours >= 12) {\n        ampm = \"PM\";\n        if (convertedHours > 12) {\n          convertedHours -= 12;\n        }\n      } else if (convertedHours === 0) {\n        convertedHours = 12; // Midnight in 12-hour format is 12:00 AM\n      }\n      const new_time = `${String(convertedHours).padStart(2, \"0\")}:${minutes}:00 ${ampm}`;\n      return new_time;\n    },\n    getCurrentHour() {\n      const currentDate = new Date();\n      const currentHour = currentDate.getHours();\n\n      return parseInt(currentHour);\n    },\n    startHour(){\n      if (this.date == this.dateToday()) {\n        const hour = this.getCurrentHour();\n        if (hour >= parseInt(this.minTime.split(\":\")[0], 10)) return hour + 1;\n      } else {\n        return parseInt(this.minTime.split(\":\")[0], 10);\n      }\n    },\n    endHour(){\n      return parseInt(this.maxTime.split(\":\")[0], 10);\n    },\n    async submitForm() {\n      this.minTime = this.convertTo12HourFormat(this.minTime);\n      this.maxTime = this.convertTo12HourFormat(this.maxTime);\n      this.v$.time.$touch();\n      if (this.v$.$error) {\n        console.log('error');\n        console.log('error time: ', this.time);\n        console.log('errormsg: ', this.v$.$errors);\n      } else {\n        await this.create_cart_item();\n      }\n      this.minTime = this.convertTo24HourFormat(this.minTime);\n      this.maxTime = this.convertTo24HourFormat(this.maxTime);\n      const time24 = this.time.trim();\n      if (time24.match(/^\\d{2}:\\d{2}$/)) {\n        this.convertedTime = this.convertTo12HourFormat(time24);\n      }\n      console.log('UPDATED TIME: ',this.convertedTime);\n    },\n    handleDateSelected(params, item) {\n      let range = item.timeSlot[this.findDateRangeIndex(item.timeSlot, params)];\n        // console.log('timeslot info is: ', range);\n      this.minTime = range.startTime;\n      this.maxTime = range.endTime;\n      this.duration = range.duration;\n      console.log('range: ',range);\n      if (range.duration !== null) {\n        this.open_time = false;\n        this.time = '';\n        this.available_timeslot = this.createAvailableTimeSlot(range.startTime, range.endTime, range.duration, range.interval, params, item.cartItem)\n      } else {\n        this.open_time = true;\n      }\n      // This method will be called when a date is selected\n      this.date = params;\n      this.service = item;\n      console.log('Selected date:', params, item);\n    },\n    findDateRangeIndex(dateRanges, targetDate) {\n      const date = new Date(targetDate); // Convert targetDate to a Date object\n      for (let i = 0; i < dateRanges.length; i++) {\n        const { startDate, endDate } = dateRanges[i];\n\n        if (date >= new Date(startDate) && date <= new Date(endDate)) {\n          return i; // Return the index if the date is within the range\n        }\n      }\n      return -1; // Return -1 if the date is not found in any range\n    },\n    dateToday() {\n      // Create a Date object with the desired date (e.g., the current date)\n      const currentDate = new Date();\n\n      // Get the day, month, and year components\n      const day = currentDate.getDate(); // 1-31\n      const month = currentDate.getMonth() + 1; // 0-11 (January is 0, so add 1)\n      const year = currentDate.getFullYear(); // 4-digit year\n      const formattedDay = String(day).padStart(2, '0');\n      const formattedMonth = String(month).padStart(2, '0');\n      return `${year}-${formattedMonth}-${formattedDay}`;\n    },\n    format_date(params) {\n      return params.date\n    },\n    createAvailableTimeSlot(start_time_str, end_time_str, duration, interval, date_selected, item) {\n      const date_selected_formatted = this.formatLongDate(date_selected);\n      const hour = this.getCurrentHour();\n      let edited_start_time = 0;\n      if (this.dateToday() == date_selected_formatted) {\n        const timeComponents = start_time_str.split(\":\");\n        // Extract the hour component (the first element after splitting)\n        const selectedHour = parseInt(timeComponents[0], 10);\n        if (hour >= selectedHour) {\n          console.log(hour >= start_time_str, 'HOUR')\n          edited_start_time = `${hour + 1}:00:00`;\n        }\n      }\n      console.log('edited_start_time',edited_start_time)\n      console.log(this.dateToday() == date_selected_formatted,this.dateToday(),date_selected_formatted)\n      if (duration == null) duration = 0;\n      const availableTimeSlots = [];\n      const startTime = edited_start_time == 0 ? this.parseTime(start_time_str) : this.parseTime(edited_start_time);\n      console.log('startTime: ', startTime, 'this.parseTime(start_time_str): ', this.parseTime(start_time_str))\n      const endTime = this.parseTime(end_time_str);\n\n      let currentTime = new Date(startTime);\n\n      while (currentTime <= endTime) {\n        availableTimeSlots.push({value: this.formatTime(currentTime), label: this.formatTime(currentTime)});\n        currentTime = this.addMinutes(currentTime, duration); // Increment by duration, not interval\n        currentTime = this.addMinutes(currentTime, interval); // Add the remaining interval\n      }\n      \n      const dateObject = new Date(date_selected);\n      let new_timeslot = [];\n      // Format it as a date string\n      const formattedDate = dateObject.toISOString().split('T')[0];\n      for (let i=0; i<item.length; i++) {\n        if (item[i].date == formattedDate) {\n          const dateObject = new Date(item[i].time);\n\n          // Format it as a time string\n          // Create an Intl.DateTimeFormat object with the desired time zone\n          const formatter = new Intl.DateTimeFormat('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZone: 'UTC' // Set the desired time zone\n          });\n\n          // Format the date object\n          const timeString = formatter.format(dateObject);\n          new_timeslot = availableTimeSlots.filter(item => item.value !== timeString);\n        }\n      }\n      console.log('available timeslot: ', availableTimeSlots);      \n      console.log('new_timeslot',new_timeslot)\n      return new_timeslot.length > 0 ? new_timeslot : availableTimeSlots;\n    },\n    parseTime(timeStr) {\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      const date = new Date();\n      date.setHours(hours, minutes, 0, 0);\n      return date;\n    },\n    formatTime(time) {\n      return time.toLocaleTimeString('en-US', { hour12: true });\n    },\n    addMinutes(time, minutes) {\n      return new Date(time.getTime() + minutes * 60000);\n    },\n    handleScroll(event) {\n      const element = event.target;\n      const scrollSpeed = 100; // Adjust this value to control scrolling speed\n\n      if (event.deltaY !== 0) {\n        // Prevent vertical scrolling\n        event.preventDefault();\n\n        // Calculate the horizontal scroll amount based on scroll speed and scroll direction\n        const scrollAmount = event.deltaY > 0 ? scrollSpeed : -scrollSpeed;\n\n        // Scroll horizontally\n        element.scrollLeft += scrollAmount;\n      }\n    },\n    openModal() {\n      // Use JavaScript to open the modal\n      const modal = document.getElementById(this.modalId);\n      modal.classList.add('show');\n      modal.style.display = 'block';\n      modal.setAttribute('aria-hidden', 'false');\n\n      const modalBackdrop = document.createElement('div');\n      modalBackdrop.classList.add('modal-backdrop', 'fade', 'show');\n      document.body.appendChild(modalBackdrop);\n    },\n    closeModal() {\n      const modal = document.getElementById(this.modalId);\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      modal.setAttribute('aria-hidden', 'true');\n\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      modalBackdrop.remove();\n    },\n    generate_service_link(service_id) {\n      return `/service_categories/${this.$route.params.categoryId}/services/${service_id}`;\n    },\n    formatToPHP(number) {\n      // Convert the number to a string with two decimal places\n      const formattedNumber = Number(number).toFixed(2);\n\n      // Add \"PHP \" to the formatted number and use commas as a thousands separator\n      const result = `PHP ${formattedNumber.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ', ')}`;\n\n      return result;\n    },\n    timestampTodate(timestamp) {\n      const date = new Date(timestamp);\n      // Extract the components (month, day, year)\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Add 1 because months are zero-indexed\n      const day = date.getDate().toString().padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Format the date as MM-DD-YYYY\n      return `${year}-${month}-${day}`;\n    }, \n    getDisabledDates(dates) {\n      let enabledDates = [];\n      const today = new Date(); // Get today's date as a Date object\n\n      for (const date of dates) {\n        const from = new Date(date.startDate); // Convert to Date object\n        const to = new Date(date.endDate); // Convert to Date object\n\n        // Create an array of dates within the 'from' and 'to' range\n        const currentDate = new Date(from);\n        while (currentDate <= to) {\n          enabledDates.push(currentDate.toISOString().split('T')[0]);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      const disable_date_by_slot = this.disable_date_by_slot_func();\n\n      return {\n        customPredictor: date => {\n          const formattedDate = date.toISOString().split('T')[0]; // Convert date to a string\n          // Disable past days\n          if (date < today) return true;\n          if (this.date_checked == false) {\n            if (disable_date_by_slot.includes(formattedDate)) {\n              this.date_checked == true;\n              return true;\n            }\n          }\n\n          // Enable today's date and dates within the specified date range\n          return !enabledDates.includes(formattedDate);\n        },\n      };\n    },\n    disable_date_by_slot_func() {\n      // console.log('DISABLE DATE BY SLOT FUNC ')\n      const service_category = this.service_by_category;\n      let disable_date_by_slot = [];\n\n      for (let i = 0; i < service_category.length; i++) {\n        for (let j = 0; j < service_category[i].cartItemTally.length; j++) {\n          // Use findDateRangeIndex to check if the date is in the range\n          let index = this.findDateRangeIndex(service_category[i].timeSlot, service_category[i].cartItemTally[j].date);\n          if (index !== -1) {\n            // console.log('the date: ', service_category[i].cartItemTally[j].date, ' found in ', service_category[i].timeSlot[index].startDate,service_category[i].timeSlot[index].endDate)\n            let capacity = service_category[i].timeSlot[index].capacity;\n            // console.log('capacity >= service_category[i].cartItemTally[j].count',capacity >= service_category[i].cartItemTally[j].count,capacity,service_category[i].cartItemTally[j].count)\n            if (service_category[i].cartItemTally[j].count >= capacity) disable_date_by_slot.push(service_category[i].cartItemTally[j].date);\n          }\n        }\n      }\n      // console.log('disable_date_by_slot: ',disable_date_by_slot)\n      return disable_date_by_slot;\n    },\n    formatDate(dateToParse) {\n      const dateComponents = dateToParse.split('-');\n      const year = parseInt(dateComponents[0]);\n      const month = parseInt(dateComponents[1]) - 1;\n      const day = parseInt(dateComponents[2]);\n      const jsDate = new Date(year, month, day + 1);\n      return jsDate;\n    },\n    formatLongDate(dateString) {\n      const dateObject = new Date(dateString);\n\n      // Get the year, month, and day components\n      const year = dateObject.getFullYear();\n      const month = (dateObject.getMonth() + 1).toString().padStart(2, \"0\"); // Adding 1 because months are 0-based\n      const day = dateObject.getDate().toString().padStart(2, \"0\");\n\n      // Create the \"YYYY-MM-DD\" formatted date string\n      return `${year}-${month}-${day}`;\n    },\n    async get_service_by_category() {\n      console.log('service category id is now', this.serviceCategoryId)\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/ServiceByCategory.gql'),\n          variables: { id: parseInt(this.$route.params.categoryId)}\n        });\n        this.service_by_category = response.data.serviceByCategory;\n        console.log('list of service by category',this.service_by_category);\n      } catch (error) {\n        console.error('Error creating like:', error);\n      }\n    },\n    getServiceCategoryURL(item, ite) {\n      return `/service_categories/${this.$route.params.categoryId}/services/${item.id}/time_slots/${ite.id}`;\n    },\n    logCurrentTime() {\n      const currentTime = new Date().toLocaleTimeString();\n      console.log(`Current time is: ${currentTime}`);\n    },\n    timeslot_info_event() {\n      document.addEventListener('DOMContentLoaded', function() {\n      const offcanvas = document.querySelector('.offcanvas_timeslot_info');\n      const toggleButton = document.getElementById('toggleButton');\n\n      toggleButton.addEventListener('click', function() {\n        offcanvas.classList.toggle('active');\n      });\n});\n    }\n  },\n  mounted() {\n    this.logCurrentTime();\n    this.get_service_by_category();\n    this.timeslot_info_event();\n  } \n}\n</script>\n\n<style>\n.date_link {\n  text-decoration: none;\n}\n\n.date_num {\n  /* background-color: red; */\n  padding: 5px;\n}\n\nh5 {\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-weight: bolder;\n  position: relative;\n  /* margin-bottom: 230px; */\n  /* margin-top: 220px; */\n  z-index: 2;\n  /* background-color: rgba(255, 255, 255, 0.5);  */\n}\n\n.service_list_customer {\n  /* border: 1px solid gray; */\n}\n\n.service_list_customer_timeslot {\n  position: sticky;\n  top: 0; /* Stick to the top of the parent container */ /* Occupy the full viewport height */\n  height: 100vh;\n}\n\n\n\n.test_customer_service {\n  display: inline-block;\n  white-space: nowrap !important;\n  margin-right: 40px;\n}\n\n/* Add your CSS styles for .service_list_customer_services here */\n.service_list_customer_services {\n  padding-bottom: 17px; /* Adjust for scrollbar height */\n  max-width: 100%; /* Ensure it takes up the available width */\n  height: 100%; /* Optionally, set a fixed height or use flexbox for layout */\n}\n\n.service_link {\n  text-decoration: none;\n  color:rgb(14, 12, 12);\n}\n\n.service_box, .service_item {\n  margin: 20px 0 0 auto;\n  width: 100%;\n}\n\n.service_item p {\n  font-weight: bold;\n  white-space: wrap;\n}\n\n.service_details {\n  z-index: 2;\n}\n\n.service_image {\n  opacity: .65;\n  z-index: 1;\n  border-radius: 5px 5px 0 0;\n  max-width: 100%; /* Ensure the image scales down proportionally */\n  height: 50%;    /* Maintain the aspect ratio */\n  width: 100%;    /* Set a maximum width if needed */\n  max-height: 300px;\n}\n\n.service_image_whole {\n  height: 200px;\n  top: 0;\n  opacity: .65;\n  z-index: 1;\n  border-radius: 5px 5px 0 0;\n  max-width: 100%; /* Ensure the image scales down proportionally */    /* Maintain the aspect ratio */\n  width: 100%;    /* Set a maximum width if needed */\n}\n\n.scrollable-list {\n  max-height: 100%; /* Allow the list to take the full height of the container */\n  overflow-y: auto;\n  border: 1px solid #ccc; /* Optional: Add a border for styling */\n  padding: 10px; /* Optional: Add padding for spacing */\n}\n\n.scrollable-container {\n  /* Hide any overflow outside of the container */\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.offcanvas_timeslot_info {\n  max-height: 100%; /* Allow the container to take the full height of the parent */\n  margin-top: 20px;\n  /* width: 250px; */\n  width: 100%;\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  transition: left 0.3s;\n  z-index: 1;\n  overflow-y: auto;\n}\n\n.offcanvas_timeslot_info.active {\n  left: 0; /* Slide in from left */\n}\n\n/* Style for the radio label */\n.radio-label {\n  position: relative;\n  padding-left: 30px; /* Adjust the padding to your preference */\n  padding-bottom: 10px; /* Add margin between options */\n  cursor: pointer;\n}\n\n/* Style for the radio input (hide the default radio button) */\n.radio-input {\n  opacity: 0;\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n\n/* Style for the border when the radio input is checked */\n.radio-label::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n  width: 20px; /* Adjust the border width */\n  height: 20px; /* Adjust the border height */\n  border: 2px solid transparent; /* Define the border color and thickness */\n  border-radius: 50%; /* Create a circle border */\n  background-color: transparent; /* Remove background color */\n}\n\n/* Style for the border when the radio input is checked */\n.radio-input:checked + .radio-label::before {\n  border-color: #007bff; /* Define the border color when checked */\n}\n\n/* Increase font size by 5px on hover */\n.radio-label:hover {\n  font-size: calc(1em + 5px); /* Increase font size by 5px */\n}\n\n.tooltip_custom {\n  position: relative;\n}\n\n.tooltiptext_custom {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n}\n\n.tooltip_custom:hover .tooltiptext_custom {\n  visibility: visible;\n}\n</style>\n"]}]}