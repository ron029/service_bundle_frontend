{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/views/ServiceCategoryPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/views/ServiceCategoryPage.vue","mtime":1697860475960},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ServiceCategoryPage.vue"],"names":[],"mappingsfile":"ServiceCategoryPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\n      <div class=\"offcanvas-header\">\n        <h5 class=\"offcanvas-title\" id=\"offcanvasRightLabel\">{{ service_action }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"offcanvas-body\">\n        <div v-if=\"UpdateServiceCategory\">\n          <div class=\"card-body\">\n            <form class=\"unique-vertical-form\">\n              <div class=\"unique-form-group\">\n                <label for=\"categoryName\">Name</label>\n                <input id=\"categoryName\" v-model=\"update.name\" type=\"text\" placeholder=\"Enter Category Name\" ref=\"service_category_name\" class=\"unique-input\">\n              </div>\n              <div class=\"unique-form-group\">\n                <label for=\"categoryDescription\">Description</label>\n                <textarea id=\"categoryDescription\" v-model=\"update.description\" type=\"text\" placeholder=\"Enter Description\" class=\"unique-input\"></textarea>\n              </div>\n              <div class=\"unique-form-group\">\n                <label>Image</label>\n                <div id=\"image-preview\" class=\"mt-3\"></div>\n                <button id=\"upload_widget\" @click.prevent=\"\" class=\"unique-cloudinary-button\">Upload files</button>\n              </div>\n              <div class=\"unique-form-group\">\n                <span @click=\"create_service_category\" v-if=\"createNewServiceCategory\" class=\"unique-btn unique-btn-success\">CREATE</span>\n                <span @click=\"update_service_category\" v-if=\"updateNewServiceCategory\" class=\"unique-btn unique-btn-warning\" ref=\"save_edit\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">SUBMIT</span>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"service_category_header\">\n      <h2 class=\"service_category_title\">Manage <span class=\"service_category_title_name\">Service Categories</span></h2>\n      <span @click=\"toggleUpdateServiceCategory\" class=\"btn btn-success service_category_add_btn\"  data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-circle-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\n        </svg>\n        Add New Service Category\n      </span>\n    </div>\n    <div class=\"table-responsive table-container\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Image</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in this.services.service_categories\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td><img :src=\"item.image\" style=\"width: 200px; height: 150px;\"></td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.description }}</td>\n            <td class=\"no-wrap\">\n              <span @click=\"show_category_one(item, index)\" class=\"btn btn-warning service_category_edit_btn\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-pen-fill\" viewBox=\"0 0 16 16\">\n                  <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\"/>\n                </svg>\n              </span>\n              <span @click=\"delete_category(item, index)\" class=\"btn btn-danger service_category_delete_btn\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                  <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n                </svg>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n      return {\n        service_action: '',\n        services: {\n          service_categories: null\n        },\n        UpdateServiceCategory: true,\n        update: {\n          name: '',\n          description: '',\n          id: '',\n          image: ''\n        },\n        createNewServiceCategory: true,\n        updateNewServiceCategory: false,\n        update_category_index: 0,\n        delete_category_index: 0\n      }\n  }, \n  props: ['serviceCategoryId'],\n  name: 'ServiceCategoryPage',\n  methods: {\n    upload(){\n        console.log('upload')\n        var myWidget = window.cloudinary.createUploadWidget({\n            cloudName: 'dovxq5gn9', \n            processQueue: false,\n            uploadPreset: 'uhjevesg'}, (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                console.log('Done! Here is the image info: ', result.info); \n                    const imageUrl = result.info.secure_url;\n                    this.update.image = imageUrl;\n                    this.displayImage(imageUrl);\n                }\n            }\n        )\n        document.getElementById(\"upload_widget\").addEventListener(\"click\", function(){\n            myWidget.open();\n        }, false);  \n    },\n    // Function to display the uploaded image\n    displayImage(imageUrl) {\n        // this.show_old_image = false;\n        const imagePreviewDiv = document.getElementById('image-preview');\n        const image = document.createElement('img');\n        image.src = imageUrl;\n        image.classList.add('uploaded-image'); // Add CSS class for styling\n        imagePreviewDiv.innerHTML = ''; // Clear any existing content\n        imagePreviewDiv.appendChild(image);\n    },\n    toggleUpdateServiceCategory(){\n      const imagePreviewDiv = document.getElementById('image-preview');\n      imagePreviewDiv.innerHTML = '';\n\n      this.service_action = 'New Service Category';\n      // Wait for 1 second (1000 milliseconds) before focusing on the input element\n      setTimeout(() => {\n        this.$refs.service_category_name.focus();\n      }, 400);\n      this.update.name = '';\n      this.update.description = '';\n      this.update.image = '';\n      this.update.id = '';\n      if (this.UpdateServiceCategory == false) this.UpdateServiceCategory = true;\n\n      this.createNewServiceCategory = true;\n      this.updateNewServiceCategory = false;\n    },\n    async create_service_category() {\n      console.log('begin remove form');\n      const offcanvasElement = document.getElementById('offcanvasRight');\n      offcanvasElement.addEventListener('click', async () => {\n        // Toggle the \"hiding\" class on the offcanvasElement\n        try {\n          const response = await this.$apollo.mutate({\n            mutation: require('@/graphql/ServiceCategoryCreate.gql'),\n            variables: {\n              name: this.update.name,\n              description: this.update.description,\n              image: this.update.image\n            },\n          });\n          if (response.data.createServiceCategory.errors.length < 1) {\n            // alert('New Product named \"' + response.data.name + '\" has been added.');\n            offcanvasElement.classList.add('hiding');\n          \n            setTimeout(() => {\n              // Remove the \"hiding\" class and set the \"offcanvas\" and \"offcanvas-end\" classes explicitly\n              offcanvasElement.classList.remove('hiding');\n              offcanvasElement.classList.remove('show');\n\n              document.body.removeAttribute('data-bs-overflow');\n              document.body.removeAttribute('style');\n\n              const backdropElement = document.querySelector('.offcanvas-backdrop.fade.show');\n              if (backdropElement) backdropElement.remove();\n              \n              offcanvasElement.removeAttribute('aria-modal');\n              offcanvasElement.removeAttribute('role');\n            }, 500);\n\n            let data = response.data.createServiceCategory.serviceCategory;\n            this.services.service_categories.push(data);\n            console.log('the details for new product is: ', response);\n          }\n        } catch (error) {\n          console.error('GraphQL Error:', error);\n        }\n      });\n      console.log('end remove form');\n      const imagePreviewDiv = document.getElementById('image-preview');\n      imagePreviewDiv.innerHTML = '';\n    },\n    async show_categories() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/Category.gql'),\n        });\n        this.services.service_categories = response.data.categories;\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    },\n    async update_service_category() {\n      console.log('id of file to edit', this.update.id);\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/ServiceCategoryUpdate.gql'),\n          variables: {\n            \"id\": parseInt(this.update.id),\n            \"name\": this.update.name,\n            \"description\": this.update.description,\n            \"image\": this.update.image\n          },\n        });\n        if (response) {\n          let edit = this.services.service_categories[this.update_category_index];\n          edit.name = this.update.name;\n          edit.description = this.update.description;\n          edit.image = this.update.image;\n          console.log('this is the thing that we need to edit: ', edit);\n          console.log('the new data is now: ', edit)\n          alert('YOUR SERVICE CATEGORY HAS BEEN UPDATE');\n          // this.reloadPage()\n        }\n      } catch (error) { console.error(\"Graphql Error:\", error); }\n    },\n    async show_category_one(item, index) {\n      this.service_action = 'Modify Service Category (' + item.name + ')';\n      console.log('modifying service category with index: ', index)\n      this.update_category_index = index;\n      this.createNewServiceCategory = false;\n      this.updateNewServiceCategory = true;\n      console.log('the category to edit is ',item.id)\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/ServiceCategoryFind.gql'),\n          variables: {\n            \"id\": parseInt(item.id)\n          },\n        });\n        this.$refs.save_edit.focus();\n        this.update.name = response.data.serviceCategory[0].name;\n        this.update.description = response.data.serviceCategory[0].description\n        this.update.id = response.data.serviceCategory[0].id\n        this.UpdateServiceCategory = true;\n        this.update.image = response.data.serviceCategory[0].image;\n        this.displayImage(this.update.image);\n        console.log('File to edit', this.update)\n      } catch (error) { console.error(\"Graphql Error:\", error); }\n    },\n    async delete_category(item, index){\n      const userConfirmed = window.confirm(\"Do you want to delete \" + item.name + \" category?\");\n      if (userConfirmed) {\n        console.log('deleting service category with index: ', index);\n        this.delete_category_index = index;\n        try {\n          const response = await this.$apollo.mutate({\n            mutation: require('@/graphql/ServiceCategoryDelete.gql'),\n            variables: {\n              \"id\": parseInt(item.id)\n            },\n          });\n          console.log(response)\n          alert('DELETION COMPLETE!')\n          console.log('the item to delete is ');\n          this.services.service_categories.splice(this.delete_category_index, 1);\n          console.log('File to edit', this.update)\n        } catch (error) { console.error(\"Graphql Error:\", error); }\n      }\n    },\n  },\n  components: {\n\n  },\n  mounted(){\n    this.show_categories();\n    this.upload()\n  }\n}\n</script>\n\n<style>\n.service_category_header {\n  height: 80px;\n  background-color: #435D7D;\n  position: relative;\n}\n\n.table-responsive {\n  margin-top: -20px;\n}\n\n.service_category_title, .service_category_add_btn {\n  top: 20px;\n  position: absolute;\n  display: inline-block;\n}\n\n.service_category_title_name {\n  font-weight: bolder;\n}\n\n.service_category_title {\n  left: 20px;\n  color: white;\n}\n\n.service_category_add_btn {\n  right: 20px;\n}\n\n.btn-success.service_category_add_btn {\n  border-radius: 0;\n}\n\n.service_category_edit_btn, .service_category_delete_btn {\n  background-color: #f6f6f6;\n  border: none;\n  border-radius: 0;\n}\n\n.service_category_edit_btn:hover, .service_category_delete_btn {\n  color: white;\n}\n\n.service_category_edit_btn {\n  color: #FEC61E;\n}\n\n.service_category_delete_btn {\n  color: red;\n}\n\n#offcanvasRight {\n  width: 700px;\n}\n\n/* form */\n/* Unique styles for the form container */\n.unique-vertical-form {\n  display: flex;\n  flex-direction: column;\n  max-width: 400px; /* Adjust the maximum width as needed */\n  margin: 0 auto; /* Center the form horizontally */\n  padding: 20px;\n  background-color: #f4f4f4;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Unique styles for form groups */\n.unique-form-group {\n  margin-bottom: 20px;\n}\n\n/* Unique styles for labels */\n.unique-form-group label {\n  font-weight: bold;\n  color: #333;\n}\n\n/* Unique styles for input fields */\n.unique-input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n/* Unique styles for the \"Upload\" button */\n.unique-cloudinary-button {\n  display: block;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 4px;\n  width: 100%;\n}\n\n/* Unique styles for buttons */\n.unique-btn {\n  cursor: pointer;\n  padding: 10px 20px;\n  border-radius: 4px;\n}\n\n/* Unique styles for the \"CREATE\" button */\n.unique-btn-success {\n  background-color: #28a745;\n  color: white;\n}\n\n/* Unique styles for the \"SUBMIT\" button */\n.unique-btn-warning {\n  background-color: #ffc107;\n  color: #333;\n}\n\n.table td {\n  color: rgb(100, 99, 99);\n}\n\n.cloudinary-button {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n}\n\n.cloudinary-button:hover {\n    background-color: #0056b3;\n}\n\n/* Style the uploaded image */\n.uploaded-image {\n    max-width: 100%;\n    height: auto;\n    margin-top: 10px;\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.link_text {\n    display: inline-block;\n}\n\n.edit-time {\n  margin-top: -100px;\n}\n</style>\n"]}]}