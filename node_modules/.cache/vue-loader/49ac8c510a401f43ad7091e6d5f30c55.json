{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/ServiceDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/ServiceDetails.vue","mtime":1698026475354},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ServiceDetails.vue"],"names":[],"mappings":";AAkfile":"ServiceDetails.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"jumbotron\">\n      <img class=\"service-image-one\" :src=\"data.image\" />\n\n      <div class=\"text-content-service-details\">\n        <h1 class=\"display-4 service_category_title_home\">{{ data.name}}</h1>\n        <hr class=\"my-4\">\n        <p>{{ data.description }}</p>\n      </div>\n    </div>\n    <div v-if=\"err_notif\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      {{ err_message }} <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <p class=\"pick-date-msg\">Pick the Date That Works for You</p>\n        <datepicker\n          class=\"time\"\n          :use-utc=\"true\"\n          :disabled-dates=\"getDisabledDates(data.timeSlot)\"\n          :day-cell-content=\"params => format_date(params)\"\n          :inline=\"true\"\n          @selected=\"params => handleDateSelected(params, data)\"\n        ></datepicker>\n      </div>\n      <div class=\"col-md-6 hidden-sm hidden-xs service_list_customer_timeslot\">\n        <div class=\"offcanvas_timeslot_info\">\n          <h1 v-if=\"displayService != ''\">{{ displayService }}</h1>\n          <form @submit.prevent=\"submitForm\" class=\"form-slot-picker\">\n            <div v-if=\"open_time == false\">\n              <p>Duration: {{ duration }}</p>\n              <p>Available Slot: {{ slot }}</p>\n              <div v-if=\"time == '' && available_timeslot.length > 0\">\n                <p>Available timeslot:</p>\n                <div class=\"scrollable-container\">\n                  <div class=\"scrollable-list\">\n                    <div v-for=\"(timeOption, index) in available_timeslot\" :key=\"index\">\n                      <label class=\"radio-label\">\n                        <input\n                          type=\"radio\"\n                          :value=\"timeOption.value\"\n                          v-model=\"time\"\n                          name=\"timeOption\"\n                          class=\"radio-input\"\n                        />\n                        {{ timeOption.label }}\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div v-else-if=\"time == '' && available_timeslot.length <= 0\">\n                <p v-if=\"maxTime != ''\">No open time slots on this day.</p>\n                <p v-else>Select a date for your appointment.</p>\n              </div>\n              <div v-else>\n                <p @click.prevent=\"changeTime\">Selected Time: {{ time }}</p>\n              </div>\n            </div>\n            <div v-else>\n              <p>Available Slot: {{ slot > 50 ? 50 : slot }}</p>\n              <p v-if=\"minTime != '' && maxTime != ''\">Select time from {{ minTime }} to {{ maxTime }}</p>\n              <vue2-timepicker\n                v-model=\"time\"\n                :hour-range=\"[[startHour(),endHour()]]\"\n                lazy\n                hide-clear-button\n                @change=\"onTimeSelected()\"\n              />\n              <p v-if=\"time != ''\">Selected Time: {{ time }}</p>\n            </div>\n            <input v-if=\"time != ''\" type=\"submit\" value=\"submit\">\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { required, helpers } from '@vuelidate/validators';\nimport { useVuelidate } from '@vuelidate/core'\nimport Datepicker from 'vuejs-datepicker';\nimport Vue2Timepicker from 'vue2-timepicker';\nexport default {\n  name: 'ServiceDetails',\n  setup () { return { v$: useVuelidate() } },\n  components: { \n    Datepicker,\n    Vue2Timepicker,\n  },\n  data() {\n    return {\n      timeslot: [],\n      data: [],\n      date_checked: false,\n      minTime: '',\n      maxTime: '',\n      duration: '',\n      time: '',\n      available_timeslot: [],\n      date: '',\n      service: '',\n      displayService: '',\n      open_time: false,\n      slot: 0,\n      err_message: '',\n      err_notif: false,\n    }\n  }, \n  validations() {\n    const min_time = value => {\n      const selectedTime = new Date(`1970-01-01T${this.convertTo24HourFormat(value)}`);\n      console.log('min_time val: ', value, this.minTime)\n      const mintime = new Date(`1970-01-01T${this.convertTo24HourFormat(this.minTime)}`);\n      console.log('min_time result: ', selectedTime >= mintime)\n      return selectedTime >= mintime;\n    };\n    const max_time = value => {\n      const selectedTime = new Date(`1970-01-01T${this.convertTo24HourFormat(value)}`);\n      console.log('max_time val: ', value, this.maxTime)\n      const maxtime = new Date(`1970-01-01T${this.convertTo24HourFormat(this.maxTime)}`);\n      console.log('max_time result: ', selectedTime <= maxtime)\n      return selectedTime <= maxtime;\n    };\n    return {\n      time: {\n        required,\n        // validTime(value) {\n        //   const timePattern = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n        //   return timePattern.test(value);\n        // },\n        min_time: helpers.withMessage('The min time must be ' + this.minTime, min_time) ,     \n        max_time: helpers.withMessage('The max time must be ' + this.maxTime, max_time) ,     \n      },\n    }\n  },\n  methods: {\n    handleError(errMsg) {\n      this.err_message = errMsg;\n      this.err_notif = true;\n      setTimeout(() => this.err_notif = false, 10000);\n    },\n    isTimeInFormat() {\n      const timePattern = /^(0[1-9]|1[0-2]):[0-5][0-9]:[0-5][0-9] (AM|PM)$/;\n      return timePattern.test(this.time);\n    },\n    onTimeSelected() {\n      this.time = this.convertTo12HourFormat(this.time);\n    },\n    async create_cart_item() {\n      try {\n        const date = this.date;\n        const service_id = this.service.id;\n        const time = this.time;\n        console.log('serviceid is ', service_id)\n        console.log('date ', date);\n        console.log('time ', time)\n\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/CartItemCreate.gql'),\n          variables: {\n            serviceId: service_id,\n            date: date,\n            time: time,\n          },\n        });\n        console.log('response from server create cart item',response);\n        if (response.data.createCartItem.errors.length < 1) {\n          alert('Item added to the cart successfully!');\n          // this.$router.push('/cart')\n        } else {\n          this.handleError(response.data.createCartItem.errors[0]);\n        }\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n        // Handle the error here, e.g., show an error message to the user.\n      }\n    },\n    convertTo24HourFormat(time12) {\n      // Split the input time into hours, minutes, and AM/PM parts\n      const [timePart, ampm] = time12.split(' ');\n      const [hours, minutes, seconds] = timePart.split(':');\n\n      // Parse the hours as an integer\n      let convertedHours = parseInt(hours, 10);\n\n      // Adjust the hours based on AM or PM\n      if (ampm.toUpperCase() === 'PM' && convertedHours !== 12) {\n        convertedHours += 12;\n      } else if (ampm.toUpperCase() === 'AM' && convertedHours === 12) {\n        convertedHours = 0;\n      }\n      // Create the 24-hour format time string\n      const convertedTime = `${String(convertedHours).padStart(2, '0')}:${minutes}:${seconds}`;\n\n      return convertedTime;\n    },\n    convertTo12HourFormat(time24) {\n      const [hours, minutes] = time24.split(\":\");\n      let ampm = \"AM\";\n      let convertedHours = parseInt(hours, 10);\n      if (convertedHours >= 12) {\n        ampm = \"PM\";\n        if (convertedHours > 12) {\n          convertedHours -= 12;\n        }\n      } else if (convertedHours === 0) {\n        convertedHours = 12; // Midnight in 12-hour format is 12:00 AM\n      }\n      const new_time = `${String(convertedHours).padStart(2, \"0\")}:${minutes}:00 ${ampm}`;\n      return new_time;\n    },\n    async submitForm() {\n      this.minTime = this.convertTo12HourFormat(this.minTime);\n      this.maxTime = this.convertTo12HourFormat(this.maxTime);\n      this.v$.time.$touch();\n      if (this.v$.$error) {\n        console.log('error');\n        console.log('error time: ', this.time);\n        console.log('errormsg: ', this.v$.$errors);\n      } else {\n        await this.create_cart_item();\n      }\n      this.minTime = this.convertTo24HourFormat(this.minTime);\n      this.maxTime = this.convertTo24HourFormat(this.maxTime);\n      const time24 = this.time.trim();\n      if (time24.match(/^\\d{2}:\\d{2}$/)) {\n        this.convertedTime = this.convertTo12HourFormat(time24);\n      }\n      console.log('UPDATED TIME: ',this.convertedTime);\n    },\n    startHour(){\n      if (this.date == this.dateToday()) {\n        const hour = this.getCurrentHour();\n        if (hour >= parseInt(this.minTime.split(\":\")[0], 10)) return hour + 1;\n      } else {\n        return parseInt(this.minTime.split(\":\")[0], 10);\n      }\n    },\n    endHour(){\n      return parseInt(this.maxTime.split(\":\")[0], 10);\n    },\n    disable_date_by_slot_func() {\n      // console.log('DISABLE DATE BY SLOT FUNC ')\n      const service_category = [this.data];\n      let disable_date_by_slot = [];\n\n      for (let i = 0; i < service_category.length; i++) {\n        for (let j = 0; j < service_category[i].cartItemTally.length; j++) {\n          // Use findDateRangeIndex to check if the date is in the range\n          let index = this.findDateRangeIndex(service_category[i].timeSlot, service_category[i].cartItemTally[j].date);\n          if (index !== -1) {\n            // console.log('the date: ', service_category[i].cartItemTally[j].date, ' found in ', service_category[i].timeSlot[index].startDate,service_category[i].timeSlot[index].endDate)\n            let capacity = service_category[i].timeSlot[index].capacity;\n            // console.log('capacity >= service_category[i].cartItemTally[j].count',capacity >= service_category[i].cartItemTally[j].count,capacity,service_category[i].cartItemTally[j].count)\n            if (service_category[i].cartItemTally[j].count >= capacity) disable_date_by_slot.push(service_category[i].cartItemTally[j].date);\n          }\n        }\n      }\n      console.log('disable_date_by_slot: ',disable_date_by_slot)\n      return disable_date_by_slot;\n    },\n    format_date(params) {\n      return params.date\n    },\n    formatLongDate(dateString) {\n      const dateObject = new Date(dateString);\n\n      // Get the year, month, and day components\n      const year = dateObject.getFullYear();\n      const month = (dateObject.getMonth() + 1).toString().padStart(2, \"0\"); // Adding 1 because months are 0-based\n      const day = dateObject.getDate().toString().padStart(2, \"0\");\n\n      // Create the \"YYYY-MM-DD\" formatted date string\n      return `${year}-${month}-${day}`;\n    },\n    getCurrentHour() {\n      const currentDate = new Date();\n      const currentHour = currentDate.getHours();\n\n      return parseInt(currentHour);\n    },\n    dateToday() {\n      // Create a Date object with the desired date (e.g., the current date)\n      const currentDate = new Date();\n\n      // Get the day, month, and year components\n      const day = currentDate.getDate(); // 1-31\n      const month = currentDate.getMonth() + 1; // 0-11 (January is 0, so add 1)\n      const year = currentDate.getFullYear(); // 4-digit year\n      const formattedDay = String(day).padStart(2, '0');\n      const formattedMonth = String(month).padStart(2, '0');\n      return `${year}-${formattedMonth}-${formattedDay}`;\n    },\n    parseTime(timeStr) {\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      const date = new Date();\n      date.setHours(hours, minutes, 0, 0);\n      return date;\n    },\n    createAvailableTimeSlot(start_time_str, end_time_str, duration, interval, date_selected, item) {\n      const date_selected_formatted = this.formatLongDate(date_selected);\n      const hour = this.getCurrentHour();\n      let edited_start_time = 0;\n      if (this.dateToday() == date_selected_formatted) {\n        const timeComponents = start_time_str.split(\":\");\n        // Extract the hour component (the first element after splitting)\n        const selectedHour = parseInt(timeComponents[0], 10);\n        if (hour >= selectedHour) {\n          console.log(hour >= start_time_str, 'HOUR')\n          edited_start_time = `${hour + 1}:00:00`;\n        }\n      }\n      console.log('edited_start_time',edited_start_time)\n      console.log(this.dateToday() == date_selected_formatted,this.dateToday(),date_selected_formatted)\n      if (duration == null) duration = 0;\n      const availableTimeSlots = [];\n      const startTime = edited_start_time == 0 ? this.parseTime(start_time_str) : this.parseTime(edited_start_time);\n      console.log('startTime: ', startTime, 'this.parseTime(start_time_str): ', this.parseTime(start_time_str))\n      const endTime = this.parseTime(end_time_str);\n\n      let currentTime = new Date(startTime);\n\n      while (currentTime <= endTime) {\n        availableTimeSlots.push({value: this.formatTime(currentTime), label: this.formatTime(currentTime)});\n        currentTime = this.addMinutes(currentTime, duration); // Increment by duration, not interval\n        currentTime = this.addMinutes(currentTime, interval); // Add the remaining interval\n      }\n      \n      const dateObject = new Date(date_selected);\n      let new_timeslot = [];\n      // Format it as a date string\n      const formattedDate = dateObject.toISOString().split('T')[0];\n      for (let i=0; i<item.length; i++) {\n        if (item[i].date == formattedDate) {\n          const dateObject = new Date(item[i].time);\n\n          // Format it as a time string\n          // Create an Intl.DateTimeFormat object with the desired time zone\n          const formatter = new Intl.DateTimeFormat('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZone: 'UTC' // Set the desired time zone\n          });\n\n          // Format the date object\n          const timeString = formatter.format(dateObject);\n          new_timeslot = availableTimeSlots.filter(item => item.value !== timeString);\n        }\n      }\n      console.log('available timeslot: ', availableTimeSlots);      \n      console.log('new_timeslot',new_timeslot)\n      return new_timeslot.length > 0 ? new_timeslot : availableTimeSlots;\n    },\n    addMinutes(time, minutes) {\n      return new Date(time.getTime() + minutes * 60000);\n    },\n    formatTime(time) {\n      return time.toLocaleTimeString('en-US', { hour12: true });\n    },\n    findDateRangeIndex(dateRanges, targetDate) {\n      const date = new Date(targetDate); // Convert targetDate to a Date object\n      for (let i = 0; i < dateRanges.length; i++) {\n        const { startDate, endDate } = dateRanges[i];\n\n        if (date >= new Date(startDate) && date <= new Date(endDate)) {\n          return i; // Return the index if the date is within the range\n        }\n      }\n      return -1; // Return -1 if the date is not found in any range\n    },\n    handleDateSelected(params, item) {\n      let range = item.timeSlot[this.findDateRangeIndex(item.timeSlot, params)];\n        // console.log('timeslot info is: ', range);\n      this.minTime = range.startTime;\n      this.maxTime = range.endTime;\n      this.duration = range.duration;\n      console.log('range: ',range);\n\n      let booked_counter = 0;\n      for (let i=0; i<item.cartItem.length; i++) {\n        if(this.formatLongDate(params) == item.cartItem[i].date) booked_counter++;\n      }\n      this.slot = range.capacity - booked_counter;\n      console.log('remaining slot for date: ',this.formatLongDate(params), ' is: ', this.slot)\n\n      if (range.duration !== null) {\n        this.open_time = false;\n        this.time = '';\n        this.available_timeslot = this.createAvailableTimeSlot(range.startTime, range.endTime, range.duration, range.interval, params, item.cartItem)\n      } else {\n        this.open_time = true;\n      }\n      // This method will be called when a date is selected\n      this.date = params;\n      this.service = item;\n      console.log('Selected date:', params, item);\n    },\n    getDisabledDates(dates) {\n      if (dates === undefined) return;\n      \n      console.log('the dates: ', dates)\n      let enabledDates = [];\n      const today = new Date(); // Get today's date as a Date object\n\n      for (const date of dates) {\n        const from = new Date(date.startDate); // Convert to Date object\n        const to = new Date(date.endDate); // Convert to Date object\n\n        // Create an array of dates within the 'from' and 'to' range\n        const currentDate = new Date(from);\n        while (currentDate <= to) {\n          enabledDates.push(currentDate.toISOString().split('T')[0]);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      const disable_date_by_slot = this.disable_date_by_slot_func();\n\n      return {\n        customPredictor: date => {\n          const formattedDate = date.toISOString().split('T')[0]; // Convert date to a string\n          // Disable past days\n          if (date < today) return true;\n\n          if (this.date_checked == false) {\n            if (disable_date_by_slot.includes(formattedDate)) {\n              this.date_checked == true;\n              return true;\n            }\n          }\n          // Enable today's date and dates within the specified date range\n          return !enabledDates.includes(formattedDate);\n        },\n      };\n    },\n    async get_service() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/ServiceFind.gql'),\n          variables: { id: parseInt(this.$route.params.serviceId)}\n        });\n        this.data = response.data.service[0];\n        this.displayService = response.data.service[0].name;\n        console.log('service_data', this.data);\n      } catch (error) {\n        console.error('Error creating like:', error);\n      }\n    },\n  },\n  mounted() {\n    this.get_service();\n  }\n}\n</script>\n\n<style>\n.service-image-one {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.pick-date-msg {\n  margin-top: 15px;\n}\n\n.text-content-service-details {\n  color: #ddd;\n  height: 400px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  padding: 20px;\n  background-color: rgba(31, 28, 28, 0.493);\n  z-index: 3;\n}\n\n.vdp-datepicker__calendar {\n  width: 100%;\n}\n\n.day .day-content {\n  border: 1px solid blue;\n  border-radius: 15px;\n  padding: 7px;\n  width: 50px;\n}\n</style>\n"]}]}