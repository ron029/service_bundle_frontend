{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/views/ServiceEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/views/ServiceEdit.vue","mtime":1694904242834},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHVzZVZ1ZWxpZGF0ZSB9IGZyb20gJ0B2dWVsaWRhdGUvY29yZSc7CmltcG9ydCB7IHJlcXVpcmVkLCBpbnRlZ2VyIH0gZnJvbSAnQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZXJ2aWNlRWRpdCcsCiAgICBzZXR1cCAoKSB7IHJldHVybiB7IHYkOiB1c2VWdWVsaWRhdGUoKSB9IH0sCiAgICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlcnZpY2VzOiB7CiAgICAgICAgc2VydmljZV9jYXRlZ29yeTogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcHJpY2U6ICcnLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBzZXJ2aWNlX2NhdGVnb3JpZXM6IFtdLAogICAgICB9LAogICAgICBpZDogJycsCiAgICAgIGltYWdlOiAnJywKICAgICAgdGltZV9zbG90OiBbXSwKICAgICAgdGltZV9zbG90X29uZTogewogICAgICAgIHN0YXJ0X3RpbWU6ICcnLAogICAgICAgIGVuZF90aW1lOiAnJywKICAgICAgICBkYXRlOiAnJywKICAgICAgICBjYXBhY2l0eTogJycsCiAgICAgICAgaWQ6ICcnCiAgICAgIH0sCiAgICAgIHNob3dUaW1lOiBmYWxzZSwKICAgICAgZWRpdF90aW1lOiBmYWxzZSwKICAgICAgZGVsZXRlX3RpbWU6IGZhbHNlLAogICAgICB0aW1lX3Nsb3RfY3JlYXRlOiB0cnVlLAogICAgICBjcmVhdGVUaW1lU2xvdDogZmFsc2UsCiAgICAgIG5ld3RzOiB7CiAgICAgICAgc3RhcnRfdGltZTogJycsCiAgICAgICAgZW5kX3RpbWU6ICcnLAogICAgICAgIGRhdGU6ICcnLAogICAgICAgIGNhcGFjaXR5OiAnJwogICAgICB9LAogICAgICBzaG93X29sZF9pbWFnZTogdHJ1ZSwKICAgIH0KICB9LAogIHZhbGlkYXRpb25zICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlcnZpY2VzOiB7CiAgICAgICAgbmFtZTogeyByZXF1aXJlZCB9LAogICAgICAgIHNlcnZpY2VfY2F0ZWdvcnk6IHsgcmVxdWlyZWQgIH0sCiAgICAgICAgcHJpY2U6IHtyZXF1aXJlZCwgaW50ZWdlciB9LAogICAgICAgIGRlc2NyaXB0aW9uOiB7cmVxdWlyZWR9LAogICAgICAgIHNlcnZpY2VfY2F0ZWdvcmllczoge3JlcXVpcmVkfSwKICAgICAgfQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGlkX3RvX2VkaXQ6IE51bWJlciwKICAgIGluZGV4X3RvX2VkaXQ6IE51bWJlciwKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwbG9hZCgpewogICAgICAgIGNvbnNvbGUubG9nKCd1cGxvYWQnKQogICAgICAgIHZhciBteVdpZGdldCA9IHdpbmRvdy5jbG91ZGluYXJ5LmNyZWF0ZVVwbG9hZFdpZGdldCh7CiAgICAgICAgICAgIGNsb3VkTmFtZTogJ2RvdnhxNWduOScsIAogICAgICAgICAgICBwcm9jZXNzUXVldWU6IGZhbHNlLAogICAgICAgICAgICB1cGxvYWRQcmVzZXQ6ICd1aGpldmVzZyd9LCAoZXJyb3IsIHJlc3VsdCkgPT4gewogICAgICAgICAgICAgICAgaWYgKCFlcnJvciAmJiByZXN1bHQgJiYgcmVzdWx0LmV2ZW50ID09PSAic3VjY2VzcyIpIHsgCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRG9uZSEgSGVyZSBpcyB0aGUgaW1hZ2UgaW5mbzogJywgcmVzdWx0LmluZm8pOyAKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWFnZVVybCA9IHJlc3VsdC5pbmZvLnNlY3VyZV91cmw7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXJ2aWNlcy5pbWFnZSA9IGltYWdlVXJsOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheUltYWdlKGltYWdlVXJsKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICkKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXBsb2FkX3dpZGdldCIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oKXsKICAgICAgICAgICAgbXlXaWRnZXQub3BlbigpOwogICAgICAgIH0sIGZhbHNlKTsgIAogICAgfSwgCiAgICAvLyBGdW5jdGlvbiB0byBkaXNwbGF5IHRoZSB1cGxvYWRlZCBpbWFnZQogICAgZGlzcGxheUltYWdlKGltYWdlVXJsKSB7CiAgICAgICAgdGhpcy5zaG93X29sZF9pbWFnZSA9IGZhbHNlOwogICAgICAgIGNvbnN0IGltYWdlUHJldmlld0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWFnZS1wcmV2aWV3Jyk7CiAgICAgICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsKICAgICAgICBpbWFnZS5zcmMgPSBpbWFnZVVybDsKICAgICAgICBpbWFnZS5jbGFzc0xpc3QuYWRkKCd1cGxvYWRlZC1pbWFnZScpOyAvLyBBZGQgQ1NTIGNsYXNzIGZvciBzdHlsaW5nCiAgICAgICAgaW1hZ2VQcmV2aWV3RGl2LmlubmVySFRNTCA9ICcnOyAvLyBDbGVhciBhbnkgZXhpc3RpbmcgY29udGVudAogICAgICAgIGltYWdlUHJldmlld0Rpdi5hcHBlbmRDaGlsZChpbWFnZSk7CiAgICB9LAogICAgbmV3X3RpbWVfc2xvdCgpewogICAgICB0aGlzLmNyZWF0ZVRpbWVTbG90ID0gdHJ1ZQogICAgfSwKICAgIGFzeW5jIGNyZWF0ZV90aW1lX3Nsb3QoKXsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICBtdXRhdGlvbjogcmVxdWlyZSgnQC9ncmFwaHFsL1RpbWVTbG90Q3JlYXRlLmdxbCcpLAogICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgInNlcnZpY2VJZCI6IHRoaXMuaWRfdG9fZWRpdCwKICAgICAgICAgICJkYXRlIjogdGhpcy5uZXd0cy5kYXRlLAogICAgICAgICAgInN0YXJ0VGltZSI6IHRoaXMubmV3dHMuc3RhcnRfdGltZSwKICAgICAgICAgICJlbmRUaW1lIjogdGhpcy5uZXd0cy5lbmRfdGltZSwKICAgICAgICAgICJjYXBhY2l0eSI6IHRoaXMubmV3dHMuY2FwYWNpdHksCiAgICAgICAgfSwKICAgICAgfSk7CiAgICAgIHRoaXMuY3JlYXRlVGltZVNsb3QgPSBmYWxzZQogICAgICBpZiAocmVzcG9uc2UpIHsKICAgICAgICBhbGVydCgnTkVXIFRJTUVTTE9UIEhBUyBCRUVOIEFEREVEJykKICAgICAgICB0aGlzLnJlbG9hZFBhZ2UoKQogICAgICB9CiAgICAgIHRoaXMuc2hvd190aW1lX3Nsb3RfYnlfc2VydmljZSh0aGlzLmlkX3RvX2VkaXQpCiAgICB9LAogICAgYXN5bmMgZWRpdF90aW1lX3NhdmUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCd0aGUgaWQgb2Ygc3BlY2lmaWMgdGltZXNsb3QgaXMgbm93Jyx0aGlzLnRpbWVfc2xvdF9vbmUuaWQpCiAgICAgIGNvbnNvbGUubG9nKCInaXQgaXMgYSB0eXBlIG9mJywgdCIpCiAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiB0aGlzLnRpbWVfc2xvdF9vbmUuaWQpCiAgICAgIGNvbnN0IHBhcnNlaWQgPSBwYXJzZUludCh0aGlzLnRpbWVfc2xvdF9vbmUuaWQpCiAgICAgIHRoaXMuc2hvd1RpbWUgPSBmYWxzZTsKICAgICAgdGhpcy5lZGl0X3RpbWUgPSBmYWxzZTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgbXV0YXRpb246IHJlcXVpcmUoJ0AvZ3JhcGhxbC9UaW1lU2xvdFVwZGF0ZS5ncWwnKSwKICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAiaWQiOiBwYXJzZWlkLAogICAgICAgICAgICAic2VydmljZUlkIjogdGhpcy5pZF90b19lZGl0LAogICAgICAgICAgICAiZGF0ZSI6IHRoaXMudGltZV9zbG90X29uZS5kYXRlLAogICAgICAgICAgICAic3RhcnRUaW1lIjogdGhpcy50aW1lX3Nsb3Rfb25lLnN0YXJ0X3RpbWUsCiAgICAgICAgICAgICJlbmRUaW1lIjogdGhpcy50aW1lX3Nsb3Rfb25lLmVuZF90aW1lLAogICAgICAgICAgICAiY2FwYWNpdHkiOiBwYXJzZUludCh0aGlzLnRpbWVfc2xvdF9vbmUuY2FwYWNpdHkpLAogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgICB0aGlzLnRpbWVfc2xvdF9vbmUgPSBudWxsOwogICAgICB9IGNhdGNoIChlcnJvcikgeyBjb25zb2xlLmVycm9yKCJHcmFwaHFsIEVycm9yOiIsIGVycm9yKTsgfQogICAgfSwKICAgIGFzeW5jIGRlbGV0ZV90aW1lX3NhdmUoKXsKICAgICAgY29uc29sZS5sb2coJ3RoZSBvYmplY3Qgb2YgdGltZSBzbG90IHRvIGRlbGV0ZSBpcycsdGhpcy50aW1lX3Nsb3Rfb25lLmlkKQogICAgICBjb25zb2xlLmxvZygndGhlIHR5cGUgb2YgaWQgaXMnKQogICAgICBjb25zb2xlLmxvZyh0eXBlb2YgcGFyc2VJbnQodGhpcy50aW1lX3Nsb3Rfb25lLmlkKSkKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgbXV0YXRpb246IHJlcXVpcmUoJ0AvZ3JhcGhxbC9UaW1lU2xvdERlbGV0ZS5ncWwnKSwKICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAiaWQiOiBwYXJzZUludCh0aGlzLnRpbWVfc2xvdF9vbmUuaWQpLAogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgICBpZiAocmVzcG9uc2UpIHsKICAgICAgICAgIGFsZXJ0KCdUSU1FU0xPVCBIQVMgQkVFTiBERUxFVEVELicpCiAgICAgICAgICB0aGlzLnJlbG9hZFBhZ2UoKTsKICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgdGhpcy50aW1lX3Nsb3Rfb25lID0gbnVsbDsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsgY29uc29sZS5lcnJvcigiR3JhcGhxbCBFcnJvcjoiLCBlcnJvcik7IH0KICAgICAgdGhpcy5zaG93VGltZSA9IGZhbHNlOwogICAgICB0aGlzLmRlbGV0ZV90aW1lID0gZmFsc2U7CiAgICAgIHRoaXMudGltZV9zbG90X29uZSA9IG51bGw7CiAgICB9LAogICAgcG9wdXBUaW1lKCl7IHRoaXMuc2hvd1RpbWUgPSB0cnVlOyB9LAogICAgY2xvc2VUaW1lKCl7IHRoaXMuZWRpdF90aW1lID0gdHJ1ZTsgfSwKICAgIGFzeW5jIGVkaXRfdGltZV9zbG90KGl0ZW0pIHsKICAgICAgY29uc29sZS5sb2coJ2VkaXRfdGltZV9zbG90X2lkIGlzIG5vdycsIHBhcnNlSW50KGl0ZW0uaWQpKQogICAgICBjb25zb2xlLmxvZyh0eXBlb2YgaXRlbS5pZCkKICAgICAgYXdhaXQgdGhpcy5zaG93X3RpbWVfc2xvdF9vbmUocGFyc2VJbnQoaXRlbS5pZCkpCiAgICAgIHRoaXMuZWRpdF90aW1lID0gdHJ1ZTsKICAgICAgdGhpcy5zaG93VGltZSA9IHRydWU7CiAgICB9LAogICAgYXN5bmMgZGVsZXRlX3RpbWVfc2xvdChpdGVtKSB7CiAgICAgIGNvbnNvbGUubG9nKCdkZWxldGVfdGltZV9zbG90X2lkIGlzICcscGFyc2VJbnQoaXRlbS5pZCkpCiAgICAgIGF3YWl0IHRoaXMuc2hvd190aW1lX3Nsb3Rfb25lKHBhcnNlSW50KGl0ZW0uaWQpKQogICAgICB0aGlzLmRlbGV0ZV90aW1lID0gdHJ1ZTsKICAgICAgdGhpcy5zaG93VGltZSA9IHRydWU7CiAgICB9LAogICAgYXN5bmMgc3VibWl0Rm9ybSgpIHsKICAgICAgdGhpcy52JC4kdG91Y2goKTsKICAgICAgaWYgKCF0aGlzLnYkLiRlcnJvcikgewogICAgICAgIHRoaXMuc2VydmljZXMuc2VydmljZV9jYXRlZ29yeSA9IHBhcnNlSW50KHRoaXMuc2VydmljZXMuc2VydmljZV9jYXRlZ29yeSk7CiAgICAgICAgdGhpcy5zZXJ2aWNlcy5wcmljZSA9IHBhcnNlSW50KHRoaXMuc2VydmljZXMucHJpY2UpOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VydmljZXMpCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgIG11dGF0aW9uOiByZXF1aXJlKCdAL2dyYXBocWwvU2VydmljZVVwZGF0ZS5ncWwnKSwKICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICBpZDogdGhpcy5zZXJ2aWNlcy5pZCwKICAgICAgICAgICAgc2VydmljZUNhdGVnb3J5SWQ6IHRoaXMuc2VydmljZXMuc2VydmljZV9jYXRlZ29yeSwKICAgICAgICAgICAgbmFtZTogdGhpcy5zZXJ2aWNlcy5uYW1lLAogICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5zZXJ2aWNlcy5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgcHJpY2U6IHRoaXMuc2VydmljZXMucHJpY2UsCiAgICAgICAgICAgIGltYWdlOiB0aGlzLnNlcnZpY2VzLmltYWdlCiAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZVNlcnZpY2VQYWdlJywge2luZGV4X3RvX2VkaXQ6IHRoaXMuaW5kZXhfdG9fZWRpdCwgc2VydmljZV9kZXRhaWxzOiB0aGlzLnNlcnZpY2VzfSkKICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2UgYWZ0ZXIgdXBkYXRlJywgcmVzcG9uc2UpCiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS51cGRhdGVTZXJ2aWNlLmVycm9ycy5sZW5ndGgpCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEudXBkYXRlU2VydmljZS5lcnJvcnMubGVuZ3RoIDwgMSkgewogICAgICAgICAgYWxlcnQgKCdZT1VSIFBST0RVQ1QgSEFTIEJFRU4gVVBEQVRFRCcpCiAgICAgICAgICAvLyB0aGlzLiRyb3V0ZXIucHVzaCgnL3NlcnZpY2VzJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgYXN5bmMgc2hvd19zZXJ2aWNlKGlkKSB7CiAgICAgIGNvbnN0IG5ld19pZCA9IHBhcnNlSW50KGlkKTsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRhcG9sbG8ucXVlcnkoewogICAgICAgIHF1ZXJ5OiByZXF1aXJlKCdAL2dyYXBocWwvQWRtaW5TZXJ2aWNlRmluZC5ncWwnKSwKICAgICAgICB2YXJpYWJsZXM6IHsgImlkIjogbmV3X2lkIH0KICAgICAgfSk7CiAgICAgIHRoaXMuc2VydmljZXMuaWQgPSByZXNwb25zZS5kYXRhLnNlcnZpY2VBZG1pblswXS5pZDsKICAgICAgdGhpcy5zZXJ2aWNlcy5uYW1lID0gcmVzcG9uc2UuZGF0YS5zZXJ2aWNlQWRtaW5bMF0ubmFtZTsKICAgICAgdGhpcy5zZXJ2aWNlcy5wcmljZSA9IHJlc3BvbnNlLmRhdGEuc2VydmljZUFkbWluWzBdLnByaWNlOwogICAgICB0aGlzLnNlcnZpY2VzLmltYWdlID0gcmVzcG9uc2UuZGF0YS5zZXJ2aWNlQWRtaW5bMF0uaW1hZ2U7CiAgICAgIHRoaXMuc2VydmljZXMuZGVzY3JpcHRpb24gPSByZXNwb25zZS5kYXRhLnNlcnZpY2VBZG1pblswXS5kZXNjcmlwdGlvbjsKICAgICAgdGhpcy5zZXJ2aWNlcy5zZXJ2aWNlX2NhdGVnb3JpZXMgPSByZXNwb25zZS5kYXRhLnNlcnZpY2VBZG1pblswXS5zZXJ2aWNlQ2F0ZWdvcmllczsKICAgICAgdGhpcy5zZXJ2aWNlcy5zZXJ2aWNlX2NhdGVnb3J5ID0gcmVzcG9uc2UuZGF0YS5zZXJ2aWNlQWRtaW5bMF0uc2VydmljZUNhdGVnb3J5SWQubmFtZTsKICAgIH0sCiAgICBhc3luYyBzaG93X3RpbWVfc2xvdCgpIHsgfSwKICAgIGFzeW5jIHNob3dfdGltZV9zbG90X29uZShpZCkgewogICAgICBjb25zdCBuZXdfaWQgPSBwYXJzZUludChpZCk7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXBvbGxvLnF1ZXJ5KHsKICAgICAgICBxdWVyeTogcmVxdWlyZSgnQC9ncmFwaHFsL1RpbWVTbG90T25lLmdxbCcpLAogICAgICAgIHZhcmlhYmxlczogeyAiaWQiOiBuZXdfaWQgfQogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coJ3RpbWUgc2xvdCB0byBlZGl0IGlzOiAnLCByZXNwb25zZSkKICAgICAgdGhpcy50aW1lX3Nsb3Rfb25lLmlkID0gcmVzcG9uc2UuZGF0YS50aW1lU2xvdE9uZS5pZDsKICAgICAgdGhpcy50aW1lX3Nsb3Rfb25lLmNhcGFjaXR5ID0gcmVzcG9uc2UuZGF0YS50aW1lU2xvdE9uZS5jYXBhY2l0eQogICAgICB0aGlzLnRpbWVfc2xvdF9vbmUuZGF0ZSA9IHJlc3BvbnNlLmRhdGEudGltZVNsb3RPbmUuZGF0ZTsKICAgICAgdGhpcy50aW1lX3Nsb3Rfb25lLmVuZF90aW1lID0gdGhpcy5mb3JtYXR0ZWRTdGFydFRpbWUocmVzcG9uc2UuZGF0YS50aW1lU2xvdE9uZS5lbmRUaW1lKTsKICAgICAgdGhpcy50aW1lX3Nsb3Rfb25lLnN0YXJ0X3RpbWUgPSB0aGlzLmZvcm1hdHRlZFN0YXJ0VGltZShyZXNwb25zZS5kYXRhLnRpbWVTbG90T25lLnN0YXJ0VGltZSk7CiAgICB9LAogICAgYXN5bmMgc2hvd190aW1lX3Nsb3RfYnlfc2VydmljZShpZCkgewogICAgICBjb25zdCBuZXdfaWQgPSBwYXJzZUludChpZCk7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXBvbGxvLnF1ZXJ5KHsKICAgICAgICBxdWVyeTogcmVxdWlyZSgnQC9ncmFwaHFsL1RpbWVTbG90QnlTZXJ2aWNlLmdxbCcpLAogICAgICAgIHZhcmlhYmxlczogeyAiaWQiOiBuZXdfaWQgfQogICAgICB9KTsKCiAgICAgIHRoaXMudGltZV9zbG90ID0gcmVzcG9uc2UuZGF0YS50aW1lU2xvdEJ5U2VydmljZQogICAgICBjb25zb2xlLmxvZygnVFMgQlkgU0VSVklDRScsIHRoaXMudGltZV9zbG90KQogICAgfSwKICAgIHJlbG9hZFBhZ2UoKSB7CiAgICAgIC8vIFJlbG9hZCB0aGUgY3VycmVudCBwYWdlCiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgIH0sCiAgICBmb3JtYXR0ZWRTdGFydFRpbWUodGltZSkgewogICAgICAvLyBQYXJzZSB0aGUgc3RhcnRfdGltZSBzdHJpbmcgaW50byBhIERhdGUgb2JqZWN0CiAgICAgIGNvbnN0IGRhdGVPYmogPSBuZXcgRGF0ZSh0aW1lKTsKCiAgICAgIC8vIEV4dHJhY3QgdGhlIGhvdXIsIG1pbnV0ZSwgYW5kIHNlY29uZCBwYXJ0cwogICAgICBjb25zdCBob3VyID0gZGF0ZU9iai5nZXRIb3VycygpOwogICAgICBjb25zdCBtaW51dGUgPSBkYXRlT2JqLmdldE1pbnV0ZXMoKTsKICAgICAgY29uc3Qgc2Vjb25kID0gZGF0ZU9iai5nZXRTZWNvbmRzKCk7CgogICAgICAvLyBGb3JtYXQgdGhlIGhvdXIsIG1pbnV0ZSwgYW5kIHNlY29uZCBhcyAiSEg6TU06U1MiCiAgICAgIGNvbnN0IGZvcm1hdHRlZEhvdXIgPSBob3VyLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgY29uc3QgZm9ybWF0dGVkTWludXRlID0gbWludXRlLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgY29uc3QgZm9ybWF0dGVkU2Vjb25kID0gc2Vjb25kLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKCiAgICAgIHJldHVybiBgJHtmb3JtYXR0ZWRIb3VyfToke2Zvcm1hdHRlZE1pbnV0ZX06JHtmb3JtYXR0ZWRTZWNvbmR9YDsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy50aW1lX3Nsb3QKICAgIHRoaXMuc2hvd19zZXJ2aWNlKHRoaXMuaWRfdG9fZWRpdCk7CiAgICB0aGlzLnNob3dfdGltZV9zbG90KHRoaXMuaWRfdG9fZWRpdCk7CiAgICB0aGlzLnNob3dfdGltZV9zbG90X2J5X3NlcnZpY2UodGhpcy5pZF90b19lZGl0KTsKICAgIHRoaXMudXBsb2FkKCk7CiAgICBjb25zb2xlLmxvZygndGhlIHNlcnZpY2UgaWQgdG8gZWRpdCBpczogJywgdGhpcy5pZF90b19lZGl0KTsKICB9Cn0K"},{"version":3,"sources":["ServiceEdit.vue"],"names":[],"mappings":";AAyfile":"ServiceEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-6 col-lg-6 col-sm-6\">\n        <div class=\"d-flex flex-row align-items-center justify-content-center justify-content-lg-start\">\n          <p class=\"login_text lead fw-normal mb-0 me-3\"></p>\n        </div>\n        <form @submit.prevent=\"submitForm\" class=\"row\">\n          <div class=\"col-md-6 col-lg-6\">\n            <div class=\"input-field-signin\">\n              <div :class=\"{ error: v$.services.name.$errors.length }\">\n                <label class=\"form-label\">Service Name\n                  <input v-model=\"services.name\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.name.$errors.length }\">\n                  <div class=\"input-errors\" v-for=\"error of v$.services.name.$errors\" :key=\"error.$uid\">\n                    <div class=\"error-msg\">{{ error.$message }}</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n            <!-- Image -->\n            <div class=\"row input-field-signup mt-3\">\n              <button id=\"upload_widget\" @click.prevent=\"\" class=\"cloudinary-button\">Change Image</button>\n            </div>\n            <div class=\"input-field-signin\">\n              <div>\n                <label class=\"form-label\">\n                  <div id=\"image-preview\" class=\"mt-3\"> <!-- This is where the uploaded image will be displayed --> </div>\n                  <img v-if=\"show_old_image\" :src=\"services.image\" style=\"height:200px; width:200px;\">\n\n                </label>\n              </div>\n            </div> \n          </div>\n          <!-- Service Category -->\n          <div class=\"col-md-3 col-lg-6\">\n            <div class=\"input-field-signin\">\n              <div :class=\"{ error: v$.services.service_category.$errors.length }\">\n                <label class=\"form-label\">name\n                  <select v-model=\"services.service_category\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.service_category.$errors.length }\">\n                    <option v-for=\"category in this.services.service_categories\" :key=\"category.id\" :value=\"category.id\">\n                      {{ category.name }}\n                    </option>\n                  </select>\n                </label>\n              </div>\n            </div>\n            <!-- Description -->\n            <div class=\"input-field-signin\">\n              <div :class=\"{ error: v$.services.description.$errors.length }\">\n                <label class=\"form-label\">Description\n                  <textarea v-model=\"services.description\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.description.$errors.length }\"></textarea>\n                  <div class=\"input-errors\" v-for=\"error of v$.services.description.$errors\" :key=\"error.$uid\">\n                    <div class=\"error-msg\">{{ error.$message }}</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n            <!-- Price -->\n            <div class=\"input-field-signin\">\n              <div :class=\"{ error: v$.services.price.$errors.length }\">\n                <label class=\"form-label\">Price\n                  <input id=\"price\" v-model=\"services.price\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.price.$errors.length }\">\n                  <div class=\"input-errors\" v-for=\"error of v$.services.price.$errors\" :key=\"error.$uid\">\n                    <div class=\"error-msg\">{{ error.$message }}</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary btn-lg input-field-signin\">Update</button>\n        </form>\n      </div>\n      <div class=\"col-md-6 col-lg-6 col-sm-6\">\n        <span @click=\"new_time_slot\" class=\"btn btn-primary\">New Time Slot</span>\n        <table class=\"table\">\n          <tr>\n            <td>Date</td>\n            <td>Start Time</td>\n            <td>End Time</td>\n            <td>Capacity</td>\n            <td>Action</td>\n          </tr>\n          <tr v-for=\"item in this.time_slot\" :key=\"item.id\">\n            <td>{{ item.date }}</td>\n            <td>{{ formattedStartTime(item.startTime) }}</td>\n            <td>{{ formattedStartTime(item.endTime) }}</td>\n            <td>{{ item.capacity }}</td>\n            <td>\n              <span @click=\"edit_time_slot(item)\" class=\"btn btn-warning\">edit</span>\n              <span @click=\"delete_time_slot(item)\" class=\"btn btn-danger\">Delete</span>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"position-relative edit-time\">\n        <div v-if=\"showTime\" class=\"card position-absolute top-50 start-50 translate-middle\">\n          <div class=\"card-body\">\n            <h1></h1>\n            <table class=\"table\">\n              <tr>\n                <td>Date</td>\n                <td>Start Time</td>\n                <td>End Time</td>\n                <td>Capacity</td>\n                <td>Action</td>\n              </tr>\n              <tr v-if=\"delete_time\">\n                <td>{{ this.time_slot_one.date }}</td>\n                <td>{{ formattedStartTime(this.time_slot_one.start_time) }}</td>\n                <td>{{ formattedStartTime(this.time_slot_one.end_time) }}</td>\n                <td>{{ this.time_slot_one.capacity }}</td>\n                <td><span @click=\"this.delete_time_save\" class=\"btn btn-danger\">Delete</span></td>\n              </tr>\n              <tr v-if=\"edit_time\">\n                <td> <input type=\"date\" v-model=\"time_slot_one.date\"> </td> \n                <td> <input type=\"time\" v-model=\"time_slot_one.start_time\"> </td>\n                <td> <input type=\"time\" v-model=\"time_slot_one.end_time\"> </td>\n                <td> <input type=\"number\" v-model=\"time_slot_one.capacity\"> </td>\n                <td><span @click=\"this.edit_time_save\" class=\"btn btn-warning\">edit</span></td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div class=\"position-relative edit-time\">\n        <div v-if=\"createTimeSlot\" class=\"card position-absolute top-50 start-50 translate-middle\">\n          <div class=\"card-body\">\n            <p>please ensure the date is now or in the future</p>\n            <p>please ensure the before and after of time, or else it wont save!</p>\n            <table class=\"table\">\n              <tr>\n                <td>Date</td>\n                <td>Start Time</td>\n                <td>End Time</td>\n                <td>Capacity</td>\n                <td>Action</td>\n              </tr>\n              <tr>\n                <td> <input type=\"date\" v-model=\"newts.date\"> </td>\n                <td> <input type=\"time\" v-model=\"newts.start_time\"> </td>\n                <td> <input type=\"time\" v-model=\"newts.end_time\"> </td>\n                <td> <input type=\"number\" v-model=\"newts.capacity\"> </td>\n                <td><span @click=\"this.create_time_slot\" class=\"btn btn-success\">Create</span></td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useVuelidate } from '@vuelidate/core';\nimport { required, integer } from '@vuelidate/validators';\nexport default {\n  name: 'ServiceEdit',\n    setup () { return { v$: useVuelidate() } },\n    data () {\n    return {\n      services: {\n        service_category: '',\n        name: '',\n        price: '',\n        description: '',\n        service_categories: [],\n      },\n      id: '',\n      image: '',\n      time_slot: [],\n      time_slot_one: {\n        start_time: '',\n        end_time: '',\n        date: '',\n        capacity: '',\n        id: ''\n      },\n      showTime: false,\n      edit_time: false,\n      delete_time: false,\n      time_slot_create: true,\n      createTimeSlot: false,\n      newts: {\n        start_time: '',\n        end_time: '',\n        date: '',\n        capacity: ''\n      },\n      show_old_image: true,\n    }\n  },\n  validations () {\n    return {\n      services: {\n        name: { required },\n        service_category: { required  },\n        price: {required, integer },\n        description: {required},\n        service_categories: {required},\n      }\n    }\n  },\n  props: {\n    id_to_edit: Number,\n    index_to_edit: Number,\n  },\n  methods: {\n    upload(){\n        console.log('upload')\n        var myWidget = window.cloudinary.createUploadWidget({\n            cloudName: 'dovxq5gn9', \n            processQueue: false,\n            uploadPreset: 'uhjevesg'}, (error, result) => {\n                if (!error && result && result.event === \"success\") { \n                console.log('Done! Here is the image info: ', result.info); \n                    const imageUrl = result.info.secure_url;\n                    this.services.image = imageUrl;\n                    this.displayImage(imageUrl);\n                }\n            }\n        )\n        document.getElementById(\"upload_widget\").addEventListener(\"click\", function(){\n            myWidget.open();\n        }, false);  \n    }, \n    // Function to display the uploaded image\n    displayImage(imageUrl) {\n        this.show_old_image = false;\n        const imagePreviewDiv = document.getElementById('image-preview');\n        const image = document.createElement('img');\n        image.src = imageUrl;\n        image.classList.add('uploaded-image'); // Add CSS class for styling\n        imagePreviewDiv.innerHTML = ''; // Clear any existing content\n        imagePreviewDiv.appendChild(image);\n    },\n    new_time_slot(){\n      this.createTimeSlot = true\n    },\n    async create_time_slot(){\n      const response = await this.$apollo.mutate({\n        mutation: require('@/graphql/TimeSlotCreate.gql'),\n        variables: {\n          \"serviceId\": this.id_to_edit,\n          \"date\": this.newts.date,\n          \"startTime\": this.newts.start_time,\n          \"endTime\": this.newts.end_time,\n          \"capacity\": this.newts.capacity,\n        },\n      });\n      this.createTimeSlot = false\n      if (response) {\n        alert('NEW TIMESLOT HAS BEEN ADDED')\n        this.reloadPage()\n      }\n      this.show_time_slot_by_service(this.id_to_edit)\n    },\n    async edit_time_save() {\n      console.log('the id of specific timeslot is now',this.time_slot_one.id)\n      console.log(\"'it is a type of', t\")\n      console.log(typeof this.time_slot_one.id)\n      const parseid = parseInt(this.time_slot_one.id)\n      this.showTime = false;\n      this.edit_time = false;\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/TimeSlotUpdate.gql'),\n          variables: {\n            \"id\": parseid,\n            \"serviceId\": this.id_to_edit,\n            \"date\": this.time_slot_one.date,\n            \"startTime\": this.time_slot_one.start_time,\n            \"endTime\": this.time_slot_one.end_time,\n            \"capacity\": parseInt(this.time_slot_one.capacity),\n          },\n        });\n        console.log(response)\n        this.time_slot_one = null;\n      } catch (error) { console.error(\"Graphql Error:\", error); }\n    },\n    async delete_time_save(){\n      console.log('the object of time slot to delete is',this.time_slot_one.id)\n      console.log('the type of id is')\n      console.log(typeof parseInt(this.time_slot_one.id))\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/TimeSlotDelete.gql'),\n          variables: {\n            \"id\": parseInt(this.time_slot_one.id),\n          },\n        });\n        if (response) {\n          alert('TIMESLOT HAS BEEN DELETED.')\n          this.reloadPage();\n        }\n        console.log(response)\n        this.time_slot_one = null;\n      } catch (error) { console.error(\"Graphql Error:\", error); }\n      this.showTime = false;\n      this.delete_time = false;\n      this.time_slot_one = null;\n    },\n    popupTime(){ this.showTime = true; },\n    closeTime(){ this.edit_time = true; },\n    async edit_time_slot(item) {\n      console.log('edit_time_slot_id is now', parseInt(item.id))\n      console.log(typeof item.id)\n      await this.show_time_slot_one(parseInt(item.id))\n      this.edit_time = true;\n      this.showTime = true;\n    },\n    async delete_time_slot(item) {\n      console.log('delete_time_slot_id is ',parseInt(item.id))\n      await this.show_time_slot_one(parseInt(item.id))\n      this.delete_time = true;\n      this.showTime = true;\n    },\n    async submitForm() {\n      this.v$.$touch();\n      if (!this.v$.$error) {\n        this.services.service_category = parseInt(this.services.service_category);\n        this.services.price = parseInt(this.services.price);\n        console.log(this.services)\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/ServiceUpdate.gql'),\n          variables: {\n            id: this.services.id,\n            serviceCategoryId: this.services.service_category,\n            name: this.services.name,\n            description: this.services.description,\n            price: this.services.price,\n            image: this.services.image\n          },\n        });\n        this.$emit('updateServicePage', {index_to_edit: this.index_to_edit, service_details: this.services})\n        console.log('response after update', response)\n        console.log(response.data.updateService.errors.length)\n        if (response.data.updateService.errors.length < 1) {\n          alert ('YOUR PRODUCT HAS BEEN UPDATED')\n          // this.$router.push('/services');\n        }\n      }\n    },\n    async show_service(id) {\n      const new_id = parseInt(id);\n      const response = await this.$apollo.query({\n        query: require('@/graphql/AdminServiceFind.gql'),\n        variables: { \"id\": new_id }\n      });\n      this.services.id = response.data.serviceAdmin[0].id;\n      this.services.name = response.data.serviceAdmin[0].name;\n      this.services.price = response.data.serviceAdmin[0].price;\n      this.services.image = response.data.serviceAdmin[0].image;\n      this.services.description = response.data.serviceAdmin[0].description;\n      this.services.service_categories = response.data.serviceAdmin[0].serviceCategories;\n      this.services.service_category = response.data.serviceAdmin[0].serviceCategoryId.name;\n    },\n    async show_time_slot() { },\n    async show_time_slot_one(id) {\n      const new_id = parseInt(id);\n      const response = await this.$apollo.query({\n        query: require('@/graphql/TimeSlotOne.gql'),\n        variables: { \"id\": new_id }\n      });\n      console.log('time slot to edit is: ', response)\n      this.time_slot_one.id = response.data.timeSlotOne.id;\n      this.time_slot_one.capacity = response.data.timeSlotOne.capacity\n      this.time_slot_one.date = response.data.timeSlotOne.date;\n      this.time_slot_one.end_time = this.formattedStartTime(response.data.timeSlotOne.endTime);\n      this.time_slot_one.start_time = this.formattedStartTime(response.data.timeSlotOne.startTime);\n    },\n    async show_time_slot_by_service(id) {\n      const new_id = parseInt(id);\n      const response = await this.$apollo.query({\n        query: require('@/graphql/TimeSlotByService.gql'),\n        variables: { \"id\": new_id }\n      });\n\n      this.time_slot = response.data.timeSlotByService\n      console.log('TS BY SERVICE', this.time_slot)\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    },\n    formattedStartTime(time) {\n      // Parse the start_time string into a Date object\n      const dateObj = new Date(time);\n\n      // Extract the hour, minute, and second parts\n      const hour = dateObj.getHours();\n      const minute = dateObj.getMinutes();\n      const second = dateObj.getSeconds();\n\n      // Format the hour, minute, and second as \"HH:MM:SS\"\n      const formattedHour = hour.toString().padStart(2, '0');\n      const formattedMinute = minute.toString().padStart(2, '0');\n      const formattedSecond = second.toString().padStart(2, '0');\n\n      return `${formattedHour}:${formattedMinute}:${formattedSecond}`;\n    },\n  },\n  mounted() {\n    this.time_slot\n    this.show_service(this.id_to_edit);\n    this.show_time_slot(this.id_to_edit);\n    this.show_time_slot_by_service(this.id_to_edit);\n    this.upload();\n    console.log('the service id to edit is: ', this.id_to_edit);\n  }\n}\n</script>\n\n<style>\n.cloudinary-button {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n}\n.cloudinary-button:hover {\n    background-color: #0056b3;\n}\n/* Style the uploaded image */\n.uploaded-image {\n    max-width: 100%;\n    height: auto;\n    margin-top: 10px;\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.link_text {\n    display: inline-block;\n}\n.form-service-edit {\n  display: inline-block;\n}\n.edit-time {\n  margin-top: -390px;\n}\n.error, .error:focus {\n    border-color: red;\n    color: red;\n}\n.input-errors {\n    color: red;\n}\n.form-label {\n    position: relative;\n}\n.error-msg {\n    position: absolute;\n    font-size: 10px;\n    bottom: -13px;\n    left: 0px;\n}\n</style>\n"]}]}