{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/RegisteredPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/RegisteredPage.vue","mtime":1694095867834},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICByZWdpc3RlcmVkOiAnJywKICAgICAgY291bnQ6ICcnCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBjYXJ0X2l0ZW1fY2F0ZWdvcnkoKSB7CiAgICB0cnkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgcXVlcnk6IHJlcXVpcmUoJ0AvZ3JhcGhxbC9Ub3RhbFJlZ2lzdHJhdGlvbi5ncWwnKSwKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKQogICAgICB0aGlzLnJlZ2lzdGVyZWQgPSByZXNwb25zZS5kYXRhLnRvdGFsUmVnaXN0cmF0aW9uLnVzZXJzCiAgICAgIHRoaXMuY291bnQgPSByZXNwb25zZS5kYXRhLnRvdGFsUmVnaXN0cmF0aW9uLmNvdW50CiAgICB9IGNhdGNoIChlcnJvcikgeyAKICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgbGlrZTonLCBlcnJvcik7CiAgICB9CiAgfSwKICB9LAogCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuY2FydF9pdGVtX2NhdGVnb3J5KCk7CiAgfQp9Cg=="},{"version":3,"sources":["RegisteredPage.vue"],"names":[],"mappings":";AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RegisteredPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Registered Page</h1>\n    <p>Currently: {{ this.count }} Users</p>\n    <table class=\"table\">\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Role</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in this.registered\" :key=\"index\">\n              <td>{{ item.firstName }}</td>\n              <td>{{ item.lastName }}</td>\n              <td>{{ item.role }}</td>\n            </tr>\n          </tbody>\n        </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      registered: '',\n      count: ''\n    }\n  },\n  methods: {\n    async cart_item_category() {\n    try {\n      const response = await this.$apollo.query({\n        query: require('@/graphql/TotalRegistration.gql'),\n      });\n      console.log(response)\n      this.registered = response.data.totalRegistration.users\n      this.count = response.data.totalRegistration.count\n    } catch (error) { \n      console.error('Error creating like:', error);\n    }\n  },\n  },\n \n  mounted() {\n    this.cart_item_category();\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}