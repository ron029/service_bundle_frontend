{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/ServiceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/ServiceList.vue","mtime":1695241256782},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlcnZpY2VMaXN0JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzaG93UGFnZTogJ1NlcnZpY2VQYWdlJywgLy8gSW5pdGlhbGl6ZSBzaG93UGFnZSB0byBTZXJ2aWNlUGFnZQogICAgICBuZXdTZXJ2aWNlRGF0YToge30sCiAgICAgIHVwZGF0ZVNlcnZpY2VEYXRhOiB7fSwKICAgICAgc2VydmljZXM6IFtdLAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsgRGF0ZXBpY2tlciwgfSwKICBwcm9wczogewogICAgbmV3X3RpbWVfc2xvdDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICBpZiAodmFsdWUudGltZV9zbG90KSBjb25zb2xlLmxvZygnU2VydmljZUxpc3QsIG5ldyB0aW1lc2xvdCB3aXRoIHZhbHVlOiAnLCB2YWx1ZSk7CiAgICAgICAgLy8gUmV0dXJuIHRydWUgdG8gZGlzYWJsZSB0eXBlIGNoZWNraW5nCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0sCiAgICB9LAogICAgbmV3X3NlcnZpY2U6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICBpZiAodmFsdWUuaWQpIGNvbnNvbGUubG9nKCd0aGlzIGlzIGZyb20gc2VydmljZVBhZ2UgdG8gc2VydmljZUxpc3QsIHRoZSBuZXcgc2VydmljZSBpczogJywgdmFsdWUpOwogICAgICAgIC8vIFJldHVybiB0cnVlIHRvIGRpc2FibGUgdHlwZSBjaGVja2luZwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgfSwKICAgIHVwZGF0ZV9zZXJ2aWNlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbih2YWx1ZSkgewogICAgICAgIGlmICh2YWx1ZS5zZXJ2aWNlX2RldGFpbHMpIGNvbnNvbGUubG9nKCd0aGlzIGlzIGZyb20gc2VydmljZVBhZ2UgdG8gc2VydmljZUxpc3QsIHRoZSB1cGRhdGUgc2VydmljZSBpczogJywgdmFsdWUpOwogICAgICAgIC8vIFJldHVybiB0cnVlIHRvIGRpc2FibGUgdHlwZSBjaGVja2luZwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERpc2FibGVkRGF0ZXMoZGF0ZXMpIHsKICAgICAgbGV0IGVuYWJsZWREYXRlcyA9IFtdOwoKICAgICAgZm9yIChjb25zdCBkYXRlIG9mIGRhdGVzKSB7CiAgICAgICAgY29uc3QgZnJvbSA9IHRoaXMuZm9ybWF0RGF0ZShkYXRlLnN0YXJ0RGF0ZSk7CiAgICAgICAgY29uc3QgdG8gPSB0aGlzLmZvcm1hdERhdGUoZGF0ZS5lbmREYXRlKTsKCiAgICAgICAgLy8gQ3JlYXRlIGFuIGFycmF5IG9mIGRhdGVzIGJldHdlZW4gJ2Zyb20nIGFuZCAndG8nCiAgICAgICAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZShmcm9tKTsKICAgICAgICB3aGlsZSAoY3VycmVudERhdGUgPD0gbmV3IERhdGUodG8pKSB7CiAgICAgICAgICBlbmFibGVkRGF0ZXMucHVzaChjdXJyZW50RGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0pOwogICAgICAgICAgY3VycmVudERhdGUuc2V0RGF0ZShjdXJyZW50RGF0ZS5nZXREYXRlKCkgKyAxKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgY3VzdG9tUHJlZGljdG9yOiBkYXRlID0+IHsKICAgICAgICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBkYXRlLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTsKICAgICAgICAgIHJldHVybiAhZW5hYmxlZERhdGVzLmluY2x1ZGVzKGZvcm1hdHRlZERhdGUpOwogICAgICAgIH0sCiAgICAgIH07CiAgICB9LAogICAgZm9ybWF0RGF0ZShkYXRlVG9QYXJzZSkgewogICAgICBjb25zdCBkYXRlQ29tcG9uZW50cyA9IGRhdGVUb1BhcnNlLnNwbGl0KCctJyk7CiAgICAgIGNvbnN0IHllYXIgPSBwYXJzZUludChkYXRlQ29tcG9uZW50c1swXSk7CiAgICAgIGNvbnN0IG1vbnRoID0gcGFyc2VJbnQoZGF0ZUNvbXBvbmVudHNbMV0pIC0gMTsKICAgICAgY29uc3QgZGF5ID0gcGFyc2VJbnQoZGF0ZUNvbXBvbmVudHNbMl0pOwogICAgICBjb25zdCBqc0RhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KTsKICAgICAgcmV0dXJuIGpzRGF0ZTsKICAgIH0sCiAgICBhc3luYyBnZXRfc2VydmljZXMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRhcG9sbG8ucXVlcnkoeyBxdWVyeTogcmVxdWlyZSgnQC9ncmFwaHFsL0FkbWluU2VydmljZS5ncWwnKSwgfSk7CiAgICAgICAgdGhpcy5zZXJ2aWNlcyA9IHJlc3BvbnNlLmRhdGEuc2VydmljZUFkbWluCiAgICAgICAgY29uc29sZS5sb2coJ2FsbCBzZXJ2aWNlczogJywgcmVzcG9uc2UpOwoKICAgICAgICBpZiAodGhpcy5uZXdTZXJ2aWNlRGF0YS5pZCkgdGhpcy5tZXJnZV9uZXdfc2VydmljZV90b19zZXJ2aWNlcyh0aGlzLnNlcnZpY2VzKQogICAgICAgIGlmICh0aGlzLnVwZGF0ZVNlcnZpY2VEYXRhLnNlcnZpY2VfZGV0YWlscykgdGhpcy51cGRhdGVfc2VydmljZV9saXN0KHRoaXMuc2VydmljZXMpCiAgICAgICAgaWYgKHRoaXMubmV3X3RpbWVfc2xvdC50aW1lX3Nsb3QpIHsKICAgICAgICAgIHRoaXMuc2VydmljZXNbdGhpcy5uZXdfdGltZV9zbG90LmluZGV4X3RvX2VkaXRdLnRpbWVTbG90ID0gdGhpcy5uZXdfdGltZV9zbG90LnRpbWVfc2xvdDsKICAgICAgICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlTGlzdC9nZXRfc2VydmljZXM6MTI0JywgdGhpcy5zZXJ2aWNlc1t0aGlzLm5ld190aW1lX3Nsb3QuaW5kZXhfdG9fZWRpdF0udGltZVNsb3QpOwogICAgICAgIH0gCiAgICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2VMaXN0L2dldF9zZXJ2aWNlczogbmV3X3RpbWVfc2xvdC5pbmRleF90b19lZGl0OiAnLCB0aGlzLm5ld190aW1lX3Nsb3QuaW5kZXhfdG9fZWRpdCwgdGhpcy5uZXdfdGltZV9zbG90LnRpbWVfc2xvdCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIGZyb20gZ2V0X3NlcnZpY2VzOiAnLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVfc2VydmljZV9saXN0KHNlcnZpY2UpIHsKICAgICAgbGV0IHNlcnZpY2Vfb25lID0gc2VydmljZVt0aGlzLnVwZGF0ZVNlcnZpY2VEYXRhLmluZGV4X3RvX2VkaXRdOwogICAgICBjb25zb2xlLmxvZygnc2VydmljZWxpc3Q6IHRoZSBlZGl0ZWQgc2VydmljZSBpczogJywgc2VydmljZV9vbmUpOwogICAgICBzZXJ2aWNlX29uZVsnaW1hZ2UnXSA9IHRoaXMudXBkYXRlU2VydmljZURhdGEuc2VydmljZV9kZXRhaWxzLmltYWdlOwogICAgICBzZXJ2aWNlX29uZVsnbmFtZSddID0gdGhpcy51cGRhdGVTZXJ2aWNlRGF0YS5zZXJ2aWNlX2RldGFpbHMubmFtZTsKICAgICAgc2VydmljZV9vbmVbJ3ByaWNlJ10gPSB0aGlzLnVwZGF0ZVNlcnZpY2VEYXRhLnNlcnZpY2VfZGV0YWlscy5wcmljZTsKICAgIH0sCiAgICBtZXJnZV9uZXdfc2VydmljZV90b19zZXJ2aWNlcyhhbGxfc2VydmljZSkgewogICAgICAvLyBjb25zdCBjYXRlZ29yeSA9IHRoaXMubmV3U2VydmljZURhdGEuc2VydmljZV9jYXRlZ29yaWVzLmZpbmQoCiAgICAgIC8vICAgKGNhdGVnb3J5KSA9PiBjYXRlZ29yeS5pZCA9PT0gdGhpcy5uZXdTZXJ2aWNlRGF0YS5zZXJ2aWNlX2NhdGVnb3J5CiAgICAgIC8vICk7CiAgICAgIGxldCBuZXdzZXJ2aWNlID0gewogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmRlc2NyaXB0aW9uLAogICAgICAgIGlkOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmlkLAogICAgICAgIGltYWdlOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmltYWdlLAogICAgICAgIG5hbWU6IHRoaXMubmV3U2VydmljZURhdGEubmFtZSwKICAgICAgICBzZXJ2aWNlQ2F0ZWdvcnlJZDogewogICAgICAgICAgaWQ6IHRoaXMubmV3U2VydmljZURhdGEuc2VydmljZV9jYXRlZ29yeSwKICAgICAgICAgIG5hbWU6IHRoaXMubmV3U2VydmljZURhdGEuc2VydmljZV9jYXRlZ29yaWVzWzBdLm5hbWUKICAgICAgICB9LAogICAgICAgIHRpbWVTbG90OiBbXSwKICAgICAgfQogICAgICBhbGxfc2VydmljZS5wdXNoKG5ld3NlcnZpY2UpCiAgICB9LAogICAgc2hvd0VkaXRTZXJ2aWNlKHBhcmFtcykgewogICAgICBjb25zb2xlLmxvZygnc2VydmljZUxpc3Q6IHRoZSBzZXJ2aWNlIGlkIHRvIGVkaXQgaXM6ICcsIHBhcmFtc1snaWQnXSkKICAgICAgdGhpcy4kZW1pdCgnc2hvd0VkaXRTZXJ2aWNlJywgcGFyYW1zKTsKICAgIH0sCiAgICBzaG93U2VydmljZU5ldygpIHsKICAgICAgdGhpcy4kZW1pdCgnc2hvd1NlcnZpY2VOZXcnKTsgLy8gRW1pdCBhIGN1c3RvbSBldmVudAogICAgfSwKICB9LAogIG1vdW50ZWQoKXsKICAgIHRoaXMuZ2V0X3NlcnZpY2VzKCk7CiAgICAvLyBBc3NpZ24gdGhlIHByb3AgdmFsdWUgdG8gdGhlIGRhdGEgcHJvcGVydHkKICAgIGlmICh0aGlzLm5ld19zZXJ2aWNlKSB7CiAgICAgIHRoaXMubmV3U2VydmljZURhdGEgPSB0aGlzLm5ld19zZXJ2aWNlOwogICAgICBjb25zb2xlLmxvZygndGhpcyBpcyBmcm9tIHNlcnZpY2VwYWdlIHRvIHNlcnZpY2VsaXN0LCBuZXcgc2VydmljZSBkYXRhIGlzOiAnLCB0aGlzLm5ld1NlcnZpY2VEYXRhKTsKICAgIH0gCiAgICBpZiAodGhpcy51cGRhdGVfc2VydmljZS5zZXJ2aWNlX2RldGFpbHMpIHsKICAgICAgdGhpcy51cGRhdGVTZXJ2aWNlRGF0YSA9IHRoaXMudXBkYXRlX3NlcnZpY2U7CiAgICAgIGNvbnNvbGUubG9nKCd0aGlzIGlzIGZyb20gc2VydmljZXBhZ2UgdG8gc2VydmljZWxpc3QsIHVwZGF0ZSBzZXJ2aWNlIGRhdGEgaXM6ICcsIHRoaXMudXBkYXRlU2VydmljZURhdGEpOwogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLm5ld190aW1lX3Nsb3QuaW5kZXhfdG9fZWRpdCkgewogICAgICBjb25zb2xlLmxvZygnUHJvcHMgcmVjZWl2ZWQ6IG5ld190aW1lX3Nsb3Q6ICcsIHRoaXMubmV3X3RpbWVfc2xvdCk7CiAgICAgIHRoaXMuc2VydmljZXNbdGhpcy5uZXdfdGltZV9zbG90LmluZGV4X3RvX2VkaXRdLnRpbWVTbG90ID0gdGhpcy5uZXdfdGltZV9zbG90LnRpbWVfc2xvdDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["ServiceList.vue"],"names":[],"mappings":";AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ServiceList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h2>Services</h2>\n    <button @click=\"showServiceNew\">Show ServiceNew</button>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Service Name</th>\n            <th>Category Name</th>\n            <th>Price</th>\n            <th>Description</th>\n            <th>Time Slots</th>\n            <th>Image</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in services\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.serviceCategoryId.name }}</td>\n            <td>PHP {{ item.price.toFixed(2) }}</td>\n            <td>{{ item.description }}</td>\n            <td>\n              <template>\n                <div class=\"time\">\n                  <datepicker\n                  :disabled-dates=\"getDisabledDates(item.timeSlot)\"\n                  :inline=\"true\"\n                  ></datepicker>\n                </div>\n              </template>\n            </td>\n            <td><img :src=\"item.image\" :alt=item.category_name style=\"width: 200px; height: 150px;\"></td>\n            <td>\n              <span class=\"btn btn-warning\" @click=\"showEditService({id: item.id, index: index})\">Edit</span>\n              <!-- <router-link :to=\"{ path: '/services/' + item.id + '/edit' }\" class=\"btn btn-warning\"> Edit </router-link> -->\n            </td>\n          </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n<script>\nimport Datepicker from 'vuejs-datepicker';\nexport default {\n  name: 'ServiceList',\n  data(){\n    return {\n      showPage: 'ServicePage', // Initialize showPage to ServicePage\n      newServiceData: {},\n      updateServiceData: {},\n      services: [],\n    };\n  },\n  components: { Datepicker, },\n  props: {\n    new_time_slot: {\n      type: Object,\n      validator: function(value) {\n        if (value.time_slot) console.log('ServiceList, new timeslot with value: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n    new_service: {\n      type: Array,\n      validator: function(value) {\n        if (value.id) console.log('this is from servicePage to serviceList, the new service is: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n    update_service: {\n      type: Object,\n      validator: function(value) {\n        if (value.service_details) console.log('this is from servicePage to serviceList, the update service is: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n  },\n  methods: {\n    getDisabledDates(dates) {\n      let enabledDates = [];\n\n      for (const date of dates) {\n        const from = this.formatDate(date.startDate);\n        const to = this.formatDate(date.endDate);\n\n        // Create an array of dates between 'from' and 'to'\n        const currentDate = new Date(from);\n        while (currentDate <= new Date(to)) {\n          enabledDates.push(currentDate.toISOString().split('T')[0]);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      return {\n        customPredictor: date => {\n          const formattedDate = date.toISOString().split('T')[0];\n          return !enabledDates.includes(formattedDate);\n        },\n      };\n    },\n    formatDate(dateToParse) {\n      const dateComponents = dateToParse.split('-');\n      const year = parseInt(dateComponents[0]);\n      const month = parseInt(dateComponents[1]) - 1;\n      const day = parseInt(dateComponents[2]);\n      const jsDate = new Date(year, month, day);\n      return jsDate;\n    },\n    async get_services() {\n      try {\n        const response = await this.$apollo.query({ query: require('@/graphql/AdminService.gql'), });\n        this.services = response.data.serviceAdmin\n        console.log('all services: ', response);\n\n        if (this.newServiceData.id) this.merge_new_service_to_services(this.services)\n        if (this.updateServiceData.service_details) this.update_service_list(this.services)\n        if (this.new_time_slot.time_slot) {\n          this.services[this.new_time_slot.index_to_edit].timeSlot = this.new_time_slot.time_slot;\n          console.log('ServiceList/get_services:124', this.services[this.new_time_slot.index_to_edit].timeSlot);\n        } \n        console.log('ServiceList/get_services: new_time_slot.index_to_edit: ', this.new_time_slot.index_to_edit, this.new_time_slot.time_slot);\n      } catch (error) {\n        console.log('Error from get_services: ', error);\n      }\n    },\n    update_service_list(service) {\n      let service_one = service[this.updateServiceData.index_to_edit];\n      console.log('servicelist: the edited service is: ', service_one);\n      service_one['image'] = this.updateServiceData.service_details.image;\n      service_one['name'] = this.updateServiceData.service_details.name;\n      service_one['price'] = this.updateServiceData.service_details.price;\n    },\n    merge_new_service_to_services(all_service) {\n      // const category = this.newServiceData.service_categories.find(\n      //   (category) => category.id === this.newServiceData.service_category\n      // );\n      let newservice = {\n        description: this.newServiceData.description,\n        id: this.newServiceData.id,\n        image: this.newServiceData.image,\n        name: this.newServiceData.name,\n        serviceCategoryId: {\n          id: this.newServiceData.service_category,\n          name: this.newServiceData.service_categories[0].name\n        },\n        timeSlot: [],\n      }\n      all_service.push(newservice)\n    },\n    showEditService(params) {\n      console.log('serviceList: the service id to edit is: ', params['id'])\n      this.$emit('showEditService', params);\n    },\n    showServiceNew() {\n      this.$emit('showServiceNew'); // Emit a custom event\n    },\n  },\n  mounted(){\n    this.get_services();\n    // Assign the prop value to the data property\n    if (this.new_service) {\n      this.newServiceData = this.new_service;\n      console.log('this is from servicepage to servicelist, new service data is: ', this.newServiceData);\n    } \n    if (this.update_service.service_details) {\n      this.updateServiceData = this.update_service;\n      console.log('this is from servicepage to servicelist, update service data is: ', this.updateServiceData);\n    }\n  },\n  created() {\n    if (this.new_time_slot.index_to_edit) {\n      console.log('Props received: new_time_slot: ', this.new_time_slot);\n      this.services[this.new_time_slot.index_to_edit].timeSlot = this.new_time_slot.time_slot;\n    }\n  }\n}\n</script>\n\n<style>\n/* @import 'vuejs-datepicker/dist/vuejs-datepicker.css'; */\n@import 'vue2-timepicker/dist/VueTimepicker.css';\n.time {\n  display: inline-block;\n}\n.error, .error:focus, .error input[type=\"radio\"] {\n    border-color: red;\n    color: red;\n}\n.input-errors {\n    color: red;\n}\n.err-card {\n    position: relative;\n}\n.error-msg {\n    position: absolute;\n    font-size: 10px;\n    bottom: -8px;\n    left: 17px;\n}\n</style>"]}]}