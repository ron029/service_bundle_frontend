{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/ServiceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/ServiceList.vue","mtime":1697860571360},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlcnZpY2VMaXN0JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzaG93UGFnZTogJ1NlcnZpY2VQYWdlJywgLy8gSW5pdGlhbGl6ZSBzaG93UGFnZSB0byBTZXJ2aWNlUGFnZQogICAgICBuZXdTZXJ2aWNlRGF0YToge30sCiAgICAgIHVwZGF0ZVNlcnZpY2VEYXRhOiB7fSwKICAgICAgc2VydmljZXM6IFtdLAogICAgICBtb2RhbElkOiAnY3VzdG9tTW9kYWwnLAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsgCiAgICBEYXRlcGlja2VyLAogIH0sCiAgcHJvcHM6IHsKICAgIG5ld190aW1lX3Nsb3Q6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgICAgaWYgKHZhbHVlLnRpbWVfc2xvdCkgY29uc29sZS5sb2coJ1NlcnZpY2VMaXN0LCBuZXcgdGltZXNsb3Qgd2l0aCB2YWx1ZTogJywgdmFsdWUpOwogICAgICAgIC8vIFJldHVybiB0cnVlIHRvIGRpc2FibGUgdHlwZSBjaGVja2luZwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgfSwKICAgIG5ld19zZXJ2aWNlOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgICAgaWYgKHZhbHVlLmlkKSBjb25zb2xlLmxvZygndGhpcyBpcyBmcm9tIHNlcnZpY2VQYWdlIHRvIHNlcnZpY2VMaXN0LCB0aGUgbmV3IHNlcnZpY2UgaXM6ICcsIHZhbHVlKTsKICAgICAgICAvLyBSZXR1cm4gdHJ1ZSB0byBkaXNhYmxlIHR5cGUgY2hlY2tpbmcKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSwKICAgIH0sCiAgICB1cGRhdGVfc2VydmljZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICBpZiAodmFsdWUuc2VydmljZV9kZXRhaWxzKSBjb25zb2xlLmxvZygndGhpcyBpcyBmcm9tIHNlcnZpY2VQYWdlIHRvIHNlcnZpY2VMaXN0LCB0aGUgdXBkYXRlIHNlcnZpY2UgaXM6ICcsIHZhbHVlKTsKICAgICAgICAvLyBSZXR1cm4gdHJ1ZSB0byBkaXNhYmxlIHR5cGUgY2hlY2tpbmcKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSwKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREaXNhYmxlZERhdGVzKGRhdGVzKSB7CiAgICAgIGxldCBlbmFibGVkRGF0ZXMgPSBbXTsKCiAgICAgIGZvciAoY29uc3QgZGF0ZSBvZiBkYXRlcykgewogICAgICAgIGNvbnN0IGZyb20gPSB0aGlzLmZvcm1hdERhdGUoZGF0ZS5zdGFydERhdGUpOwogICAgICAgIGNvbnN0IHRvID0gdGhpcy5mb3JtYXREYXRlKGRhdGUuZW5kRGF0ZSk7CgogICAgICAgIC8vIENyZWF0ZSBhbiBhcnJheSBvZiBkYXRlcyBiZXR3ZWVuICdmcm9tJyBhbmQgJ3RvJwogICAgICAgIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoZnJvbSk7CiAgICAgICAgd2hpbGUgKGN1cnJlbnREYXRlIDw9IG5ldyBEYXRlKHRvKSkgewogICAgICAgICAgZW5hYmxlZERhdGVzLnB1c2goY3VycmVudERhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdKTsKICAgICAgICAgIGN1cnJlbnREYXRlLnNldERhdGUoY3VycmVudERhdGUuZ2V0RGF0ZSgpICsgMSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIGN1c3RvbVByZWRpY3RvcjogZGF0ZSA9PiB7CiAgICAgICAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gZGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07CiAgICAgICAgICByZXR1cm4gIWVuYWJsZWREYXRlcy5pbmNsdWRlcyhmb3JtYXR0ZWREYXRlKTsKICAgICAgICB9LAogICAgICB9OwogICAgfSwKICAgIGZvcm1hdERhdGUoZGF0ZVRvUGFyc2UpIHsKICAgICAgY29uc3QgZGF0ZUNvbXBvbmVudHMgPSBkYXRlVG9QYXJzZS5zcGxpdCgnLScpOwogICAgICBjb25zdCB5ZWFyID0gcGFyc2VJbnQoZGF0ZUNvbXBvbmVudHNbMF0pOwogICAgICBjb25zdCBtb250aCA9IHBhcnNlSW50KGRhdGVDb21wb25lbnRzWzFdKSAtIDE7CiAgICAgIGNvbnN0IGRheSA9IHBhcnNlSW50KGRhdGVDb21wb25lbnRzWzJdKTsKICAgICAgY29uc3QganNEYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSArIDEpOwogICAgICByZXR1cm4ganNEYXRlOwogICAgfSwKICAgIGFzeW5jIGdldF9zZXJ2aWNlcygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7IHF1ZXJ5OiByZXF1aXJlKCdAL2dyYXBocWwvQWRtaW5TZXJ2aWNlLmdxbCcpLCB9KTsKICAgICAgICB0aGlzLnNlcnZpY2VzID0gcmVzcG9uc2UuZGF0YS5zZXJ2aWNlQWRtaW4KICAgICAgICBjb25zb2xlLmxvZygnYWxsIHNlcnZpY2VzOiAnLCByZXNwb25zZSk7CgogICAgICAgIGlmICh0aGlzLm5ld1NlcnZpY2VEYXRhLmlkKSB0aGlzLm1lcmdlX25ld19zZXJ2aWNlX3RvX3NlcnZpY2VzKHRoaXMuc2VydmljZXMpCiAgICAgICAgaWYgKHRoaXMudXBkYXRlU2VydmljZURhdGEuc2VydmljZV9kZXRhaWxzKSB0aGlzLnVwZGF0ZV9zZXJ2aWNlX2xpc3QodGhpcy5zZXJ2aWNlcykKICAgICAgICBpZiAodGhpcy5uZXdfdGltZV9zbG90LnRpbWVfc2xvdCkgewogICAgICAgICAgdGhpcy5zZXJ2aWNlc1t0aGlzLm5ld190aW1lX3Nsb3QuaW5kZXhfdG9fZWRpdF0udGltZVNsb3QgPSB0aGlzLm5ld190aW1lX3Nsb3QudGltZV9zbG90OwogICAgICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2VMaXN0L2dldF9zZXJ2aWNlczoxMjQnLCB0aGlzLnNlcnZpY2VzW3RoaXMubmV3X3RpbWVfc2xvdC5pbmRleF90b19lZGl0XS50aW1lU2xvdCk7CiAgICAgICAgfSAKICAgICAgICBjb25zb2xlLmxvZygnU2VydmljZUxpc3QvZ2V0X3NlcnZpY2VzOiBuZXdfdGltZV9zbG90LmluZGV4X3RvX2VkaXQ6ICcsIHRoaXMubmV3X3RpbWVfc2xvdC5pbmRleF90b19lZGl0LCB0aGlzLm5ld190aW1lX3Nsb3QudGltZV9zbG90KTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgZnJvbSBnZXRfc2VydmljZXM6ICcsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZV9zZXJ2aWNlX2xpc3Qoc2VydmljZSkgewogICAgICBsZXQgc2VydmljZV9vbmUgPSBzZXJ2aWNlW3RoaXMudXBkYXRlU2VydmljZURhdGEuaW5kZXhfdG9fZWRpdF07CiAgICAgIGNvbnNvbGUubG9nKCdzZXJ2aWNlbGlzdDogdGhlIGVkaXRlZCBzZXJ2aWNlIGlzOiAnLCBzZXJ2aWNlX29uZSk7CiAgICAgIHNlcnZpY2Vfb25lWydpbWFnZSddID0gdGhpcy51cGRhdGVTZXJ2aWNlRGF0YS5zZXJ2aWNlX2RldGFpbHMuaW1hZ2U7CiAgICAgIHNlcnZpY2Vfb25lWyduYW1lJ10gPSB0aGlzLnVwZGF0ZVNlcnZpY2VEYXRhLnNlcnZpY2VfZGV0YWlscy5uYW1lOwogICAgICBzZXJ2aWNlX29uZVsncHJpY2UnXSA9IHRoaXMudXBkYXRlU2VydmljZURhdGEuc2VydmljZV9kZXRhaWxzLnByaWNlOwogICAgfSwKICAgIG1lcmdlX25ld19zZXJ2aWNlX3RvX3NlcnZpY2VzKGFsbF9zZXJ2aWNlKSB7CiAgICAgIGxldCBuZXdzZXJ2aWNlID0gewogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmRlc2NyaXB0aW9uLAogICAgICAgIGlkOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmlkLAogICAgICAgIGltYWdlOiB0aGlzLm5ld1NlcnZpY2VEYXRhLmltYWdlLAogICAgICAgIG5hbWU6IHRoaXMubmV3U2VydmljZURhdGEubmFtZSwKICAgICAgICBzZXJ2aWNlQ2F0ZWdvcnlJZDogewogICAgICAgICAgaWQ6IHRoaXMubmV3U2VydmljZURhdGEuc2VydmljZV9jYXRlZ29yeSwKICAgICAgICAgIG5hbWU6IHRoaXMubmV3U2VydmljZURhdGEuc2VydmljZV9jYXRlZ29yaWVzWzBdLm5hbWUKICAgICAgICB9LAogICAgICAgIHRpbWVTbG90OiBbXSwKICAgICAgfQogICAgICBhbGxfc2VydmljZS5wdXNoKG5ld3NlcnZpY2UpCiAgICB9LAogICAgc2hvd0VkaXRTZXJ2aWNlKHBhcmFtcykgewogICAgICBjb25zb2xlLmxvZygnc2VydmljZUxpc3Q6IHRoZSBzZXJ2aWNlIGlkIHRvIGVkaXQgaXM6ICcsIHBhcmFtc1snaWQnXSkKICAgICAgdGhpcy4kZW1pdCgnc2hvd0VkaXRTZXJ2aWNlJywgcGFyYW1zKTsKICAgIH0sCiAgICBzaG93U2VydmljZU5ldygpIHsKICAgICAgdGhpcy4kZW1pdCgnc2hvd1NlcnZpY2VOZXcnKTsgLy8gRW1pdCBhIGN1c3RvbSBldmVudAogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldF9zZXJ2aWNlcygpOwogICAgLy8gQXNzaWduIHRoZSBwcm9wIHZhbHVlIHRvIHRoZSBkYXRhIHByb3BlcnR5CiAgICBpZiAodGhpcy5uZXdfc2VydmljZSkgewogICAgICB0aGlzLm5ld1NlcnZpY2VEYXRhID0gdGhpcy5uZXdfc2VydmljZTsKICAgICAgY29uc29sZS5sb2coJ3RoaXMgaXMgZnJvbSBzZXJ2aWNlcGFnZSB0byBzZXJ2aWNlbGlzdCwgbmV3IHNlcnZpY2UgZGF0YSBpczogJywgdGhpcy5uZXdTZXJ2aWNlRGF0YSk7CiAgICB9IAogICAgaWYgKHRoaXMudXBkYXRlX3NlcnZpY2UpIHsKICAgICAgaWYgKHRoaXMudXBkYXRlX3NlcnZpY2Uuc2VydmljZV9kZXRhaWxzKSB7CiAgICAgICAgdGhpcy51cGRhdGVTZXJ2aWNlRGF0YSA9IHRoaXMudXBkYXRlX3NlcnZpY2U7CiAgICAgICAgY29uc29sZS5sb2coJ3RoaXMgaXMgZnJvbSBzZXJ2aWNlcGFnZSB0byBzZXJ2aWNlbGlzdCwgdXBkYXRlIHNlcnZpY2UgZGF0YSBpczogJywgdGhpcy51cGRhdGVTZXJ2aWNlRGF0YSk7CiAgICAgIH0KICAgIH0KICB9LCAgCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLm5ld190aW1lX3Nsb3QpIHsKICAgICAgaWYgKHRoaXMubmV3X3RpbWVfc2xvdC5pbmRleF90b19lZGl0KSB7CiAgICAgICAgY29uc29sZS5sb2coJ1Byb3BzIHJlY2VpdmVkOiBuZXdfdGltZV9zbG90OiAnLCB0aGlzLm5ld190aW1lX3Nsb3QpOwogICAgICAgIHRoaXMuc2VydmljZXNbdGhpcy5uZXdfdGltZV9zbG90LmluZGV4X3RvX2VkaXRdLnRpbWVTbG90ID0gdGhpcy5uZXdfdGltZV9zbG90LnRpbWVfc2xvdDsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["ServiceList.vue"],"names":[],"mappings":";AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ServiceList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"service_category_header\">\n      <h2 class=\"service_category_title\">Manage <span class=\"service_category_title_name\">Services</span></h2>\n      <span @click=\"showServiceNew\" class=\"btn btn-success service_category_add_btn\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-circle-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\n        </svg>\n        Add New Service\n      </span>\n    </div>\n    <div class=\"table-responsive table-container\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th class=\"no-wrap\">Service Name</th>\n            <th class=\"no-wrap\">Category Name</th>\n            <th>Price</th>\n            <th>Description</th>\n            <th class=\"no-wrap\">Time Slots</th>\n            <th>Image</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody v-if=\"services.length > 0\">\n          <tr v-for=\"(item, index) in services\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.serviceCategoryId.name }}</td>\n            <td class=\"no-wrap\">PHP {{ item.price.toFixed(2) }}</td>\n            <td>{{ item.description }}</td>\n            <td>\n              <template>\n                <div class=\"time\">\n                  <datepicker\n                  :use-utc=\"true\"\n                  :disabled-dates=\"getDisabledDates(item.timeSlot)\"\n                  :inline=\"true\"\n                  ></datepicker>\n                </div>\n              </template>\n            </td>\n            <td><img :src=\"item.image\" :alt=item.category_name style=\"width: 200px; height: 150px;\"></td>\n            <td>\n              <span @click=\"showEditService({id: item.id, index: index})\" class=\"btn btn-warning service_category_edit_btn\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-pen-fill\" viewBox=\"0 0 16 16\">\n                  <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\"/>\n                </svg>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n        <tbody v-else>\n          <tr><td colspan=\"8\">There is nothing to show in this table.</td></tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Datepicker from 'vuejs-datepicker';\nexport default {\n  name: 'ServiceList',\n  data(){\n    return {\n      showPage: 'ServicePage', // Initialize showPage to ServicePage\n      newServiceData: {},\n      updateServiceData: {},\n      services: [],\n      modalId: 'customModal',\n    };\n  },\n  components: { \n    Datepicker,\n  },\n  props: {\n    new_time_slot: {\n      type: Object,\n      validator: function(value) {\n        if (value.time_slot) console.log('ServiceList, new timeslot with value: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n    new_service: {\n      type: Array,\n      validator: function(value) {\n        if (value.id) console.log('this is from servicePage to serviceList, the new service is: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n    update_service: {\n      type: Object,\n      validator: function(value) {\n        if (value.service_details) console.log('this is from servicePage to serviceList, the update service is: ', value);\n        // Return true to disable type checking\n        return true;\n      },\n    },\n  },\n  methods: {\n    getDisabledDates(dates) {\n      let enabledDates = [];\n\n      for (const date of dates) {\n        const from = this.formatDate(date.startDate);\n        const to = this.formatDate(date.endDate);\n\n        // Create an array of dates between 'from' and 'to'\n        const currentDate = new Date(from);\n        while (currentDate <= new Date(to)) {\n          enabledDates.push(currentDate.toISOString().split('T')[0]);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      return {\n        customPredictor: date => {\n          const formattedDate = date.toISOString().split('T')[0];\n          return !enabledDates.includes(formattedDate);\n        },\n      };\n    },\n    formatDate(dateToParse) {\n      const dateComponents = dateToParse.split('-');\n      const year = parseInt(dateComponents[0]);\n      const month = parseInt(dateComponents[1]) - 1;\n      const day = parseInt(dateComponents[2]);\n      const jsDate = new Date(year, month, day + 1);\n      return jsDate;\n    },\n    async get_services() {\n      try {\n        const response = await this.$apollo.query({ query: require('@/graphql/AdminService.gql'), });\n        this.services = response.data.serviceAdmin\n        console.log('all services: ', response);\n\n        if (this.newServiceData.id) this.merge_new_service_to_services(this.services)\n        if (this.updateServiceData.service_details) this.update_service_list(this.services)\n        if (this.new_time_slot.time_slot) {\n          this.services[this.new_time_slot.index_to_edit].timeSlot = this.new_time_slot.time_slot;\n          console.log('ServiceList/get_services:124', this.services[this.new_time_slot.index_to_edit].timeSlot);\n        } \n        console.log('ServiceList/get_services: new_time_slot.index_to_edit: ', this.new_time_slot.index_to_edit, this.new_time_slot.time_slot);\n      } catch (error) {\n        console.log('Error from get_services: ', error);\n      }\n    },\n    update_service_list(service) {\n      let service_one = service[this.updateServiceData.index_to_edit];\n      console.log('servicelist: the edited service is: ', service_one);\n      service_one['image'] = this.updateServiceData.service_details.image;\n      service_one['name'] = this.updateServiceData.service_details.name;\n      service_one['price'] = this.updateServiceData.service_details.price;\n    },\n    merge_new_service_to_services(all_service) {\n      let newservice = {\n        description: this.newServiceData.description,\n        id: this.newServiceData.id,\n        image: this.newServiceData.image,\n        name: this.newServiceData.name,\n        serviceCategoryId: {\n          id: this.newServiceData.service_category,\n          name: this.newServiceData.service_categories[0].name\n        },\n        timeSlot: [],\n      }\n      all_service.push(newservice)\n    },\n    showEditService(params) {\n      console.log('serviceList: the service id to edit is: ', params['id'])\n      this.$emit('showEditService', params);\n    },\n    showServiceNew() {\n      this.$emit('showServiceNew'); // Emit a custom event\n    },\n  },\n  mounted() {\n    this.get_services();\n    // Assign the prop value to the data property\n    if (this.new_service) {\n      this.newServiceData = this.new_service;\n      console.log('this is from servicepage to servicelist, new service data is: ', this.newServiceData);\n    } \n    if (this.update_service) {\n      if (this.update_service.service_details) {\n        this.updateServiceData = this.update_service;\n        console.log('this is from servicepage to servicelist, update service data is: ', this.updateServiceData);\n      }\n    }\n  },  \n  created() {\n    if (this.new_time_slot) {\n      if (this.new_time_slot.index_to_edit) {\n        console.log('Props received: new_time_slot: ', this.new_time_slot);\n        this.services[this.new_time_slot.index_to_edit].timeSlot = this.new_time_slot.time_slot;\n      }\n    }\n  }\n}\n</script>\n\n<style>\n@import 'vue2-timepicker/dist/VueTimepicker.css';\n.time {\n  display: inline-block;\n  white-space: wrap; \n}\n\n.error, .error:focus, .error input[type=\"radio\"] {\n    border-color: red;\n    color: red;\n}\n\n.input-errors {\n    color: red;\n}\n\n.err-card {\n    position: relative;\n}\n\n.error-msg {\n    position: absolute;\n    font-size: 10px;\n    bottom: -8px;\n    left: 17px;\n}\n</style>"]}]}