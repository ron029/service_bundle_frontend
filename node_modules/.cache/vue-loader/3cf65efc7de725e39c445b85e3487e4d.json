{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/views/ServiceNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/views/ServiceNew.vue","mtime":1695241256792},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHJlcXVpcmVkLCBpbnRlZ2VyIH0gZnJvbSAnQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzJwppbXBvcnQgeyB1c2VWdWVsaWRhdGUgfSBmcm9tICdAdnVlbGlkYXRlL2NvcmUnOwpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXAgKCkgeyByZXR1cm4geyB2JDogdXNlVnVlbGlkYXRlKCkgfSB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VydmljZXM6IHsKICAgICAgICBzZXJ2aWNlX2NhdGVnb3J5OiAnJywKICAgICAgICBuYW1lOiAnJywKICAgICAgICBwcmljZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIHNlcnZpY2VfY2F0ZWdvcmllczogW10sCgogICAgICB9LAogICAgfQogIH0sCiAgdmFsaWRhdGlvbnMgKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VydmljZXM6IHsKICAgICAgICBuYW1lOiB7IHJlcXVpcmVkIH0sCiAgICAgICAgc2VydmljZV9jYXRlZ29yeTogeyByZXF1aXJlZCAgfSwKICAgICAgICBwcmljZToge3JlcXVpcmVkLCBpbnRlZ2VyIH0sCiAgICAgICAgZGVzY3JpcHRpb246IHtyZXF1aXJlZH0sCiAgICAgIH0sCiAgICAgIGltYWdlOiAnJywKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwbG9hZCgpewogICAgICAgIGNvbnNvbGUubG9nKCd1cGxvYWQnKQogICAgICAgIHZhciBteVdpZGdldCA9IHdpbmRvdy5jbG91ZGluYXJ5LmNyZWF0ZVVwbG9hZFdpZGdldCh7CiAgICAgICAgICAgIGNsb3VkTmFtZTogJ2RvdnhxNWduOScsIAogICAgICAgICAgICBwcm9jZXNzUXVldWU6IGZhbHNlLAogICAgICAgICAgICB1cGxvYWRQcmVzZXQ6ICd1aGpldmVzZyd9LCAoZXJyb3IsIHJlc3VsdCkgPT4geyAKICAgICAgICAgICAgICAgIGlmICghZXJyb3IgJiYgcmVzdWx0ICYmIHJlc3VsdC5ldmVudCA9PT0gInN1Y2Nlc3MiKSB7IAogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RvbmUhIEhlcmUgaXMgdGhlIGltYWdlIGluZm86ICcsIHJlc3VsdC5pbmZvKTsgCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1hZ2VVcmwgPSByZXN1bHQuaW5mby5zZWN1cmVfdXJsOwogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2UgPSBpbWFnZVVybDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlJbWFnZShpbWFnZVVybCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICApCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInVwbG9hZF93aWRnZXQiKS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIG15V2lkZ2V0Lm9wZW4oKTsKICAgICAgICB9LCBmYWxzZSk7ICAKICAgIH0sIAogICAgLy8gRnVuY3Rpb24gdG8gZGlzcGxheSB0aGUgdXBsb2FkZWQgaW1hZ2UKICAgIGRpc3BsYXlJbWFnZShpbWFnZVVybCkgewogICAgICAgIGNvbnN0IGltYWdlUHJldmlld0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWFnZS1wcmV2aWV3Jyk7CiAgICAgICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsKICAgICAgICBpbWFnZS5zcmMgPSBpbWFnZVVybDsKICAgICAgICBpbWFnZS5jbGFzc0xpc3QuYWRkKCd1cGxvYWRlZC1pbWFnZScpOyAvLyBBZGQgQ1NTIGNsYXNzIGZvciBzdHlsaW5nCiAgICAgICAgaW1hZ2VQcmV2aWV3RGl2LmlubmVySFRNTCA9ICcnOyAvLyBDbGVhciBhbnkgZXhpc3RpbmcgY29udGVudAogICAgICAgIGltYWdlUHJldmlld0Rpdi5hcHBlbmRDaGlsZChpbWFnZSk7CiAgICB9LAogICAgYXN5bmMgc2hvd19jYXRlZ29yaWVzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXBvbGxvLnF1ZXJ5KHsKICAgICAgICAgIHF1ZXJ5OiByZXF1aXJlKCdAL2dyYXBocWwvQ2F0ZWdvcnkuZ3FsJyksCiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2coJ3RoZSBzZXJ2aWNlIGNhdGVnb3J5IGlzIGhlcmUnLCByZXNwb25zZSkKICAgICAgICAgdGhpcy5zZXJ2aWNlcy5zZXJ2aWNlX2NhdGVnb3JpZXMgPSByZXNwb25zZS5kYXRhLmNhdGVnb3JpZXM7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2dnaW5nIG91dDonLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBzdWJtaXRGb3JtKCkgewogICAgICB0aGlzLnYkLiR0b3VjaCgpOwogICAgICBpZighdGhpcy52JC4kdG91Y2goKSkgewogICAgICAgIGNvbnNvbGUubG9nKCkKICAgICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICBtdXRhdGlvbjogcmVxdWlyZSgnQC9ncmFwaHFsL1NlcnZpY2VDcmVhdGUuZ3FsJyksCiAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgc2VydmljZUNhdGVnb3J5SWQ6IHRoaXMuc2VydmljZXMuc2VydmljZV9jYXRlZ29yeSwKICAgICAgICAgICAgbmFtZTogdGhpcy5zZXJ2aWNlcy5uYW1lLAogICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5zZXJ2aWNlcy5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgcHJpY2U6IHBhcnNlSW50KHRoaXMuc2VydmljZXMucHJpY2UpLAogICAgICAgICAgICBpbWFnZTogdGhpcy5pbWFnZQogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgICBsZXQgZGF0YSA9IHRoaXMuc2VydmljZXM7CiAgICAgICAgZGF0YVsnaW1hZ2UnXSA9IHRoaXMuaW1hZ2U7CiAgICAgICAgZGF0YVsnaWQnXSA9IHJlc3BvbnNlLmRhdGEuY3JlYXRlU2VydmljZS5zZXJ2aWNlLmlkOwogICAgICAgIGNvbnNvbGUubG9nKCd0aGUgZGF0YSBvZiBuZXcgc2VydmljZXMgaXM6ICcsIGRhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKCdyZXBseSBmcm9tIHNlcnZpY2UgaXM6ICcsIHJlc3BvbnNlKQogICAgICAgIGlmKHJlc3BvbnNlKSB7IGFsZXJ0KCJTVUNDRVNTLCBuZXcgc2VydmljZSBoYXMgYmVlbiByZWNvcmRlZCIpIH0KICAgICAgICB0aGlzLiRlbWl0KCduZXdTZXJ2aWNlQWRkZWQnLCBkYXRhKTsKICAgICAgICB0aGlzLnRpbWVfc2xvdF9vbmUgPSBudWxsOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7IGNvbnNvbGUuZXJyb3IoIkdyYXBocWwgRXJyb3I6IiwgZXJyb3IpOyB9CiAgICAgIH0KICAgIH0sCiAgICByZWxvYWRQYWdlKCkgewogICAgICAvLyBSZWxvYWQgdGhlIGN1cnJlbnQgcGFnZQogICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICB9LAogIH0sCiAgY29tcG9uZW50czogewoKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNob3dfY2F0ZWdvcmllcygpCiAgICB0aGlzLnVwbG9hZCgpCiAgfSwKCn0K"},{"version":3,"sources":["ServiceNew.vue"],"names":[],"mappings":";AAufile":"ServiceNew.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>New Service</h1>\n    <form @submit.prevent=\"submitForm\" class=\"centered-form\">\n      <div class=\"input-field-signin\">\n        <div :class=\"{ error: v$.services.name.$errors.length }\">\n          <label class=\"form-label\">Service Name\n            <input v-model=\"services.name\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.name.$errors.length }\">\n            <div class=\"input-errors\" v-for=\"error of v$.services.name.$errors\" :key=\"error.$uid\">\n              <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div class=\"input-field-signin\">Service Category\n        <div :class=\"{ error: v$.services.service_category.$errors.length }\">\n          <select v-model=\"services.service_category\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.service_category.$errors.length }\">\n            <option v-for=\"category in this.services.service_categories\" :key=\"category.id\" :value=\"category.id\">\n              {{ category.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"input-field-signin\">\n        <div :class=\"{ error: v$.services.description.$errors.length }\">\n          <label class=\"form-label\">Description\n            <textarea v-model=\"services.description\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.description.$errors.length }\"></textarea>\n            <div class=\"input-errors\" v-for=\"error of v$.services.description.$errors\" :key=\"error.$uid\">\n              <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div class=\"input-field-signin\">\n        <div :class=\"{ error: v$.services.price.$errors.length }\">\n          <label class=\"form-label\">Price\n            <input id=\"price\" v-model=\"services.price\" class=\"form-control form-control-l\" :class=\"{ error: v$.services.price.$errors.length }\">\n            <div class=\"input-errors\" v-for=\"error of v$.services.price.$errors\" :key=\"error.$uid\">\n              <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div class=\"input-field-signin\">\n        <div class=\"row input-field-signup mt-3\">\n          <button id=\"upload_widget\" @click.prevent=\"\" class=\"cloudinary-button\">Upload files</button>\n        </div>\n        <div id=\"image-preview\" class=\"mt-3\"></div>\n        <button type=\"submit\" class=\"btn btn-primary btn-lg input-field-signin\">Create</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { required, integer } from '@vuelidate/validators'\nimport { useVuelidate } from '@vuelidate/core';\nexport default {\n  setup () { return { v$: useVuelidate() } },\n  data () {\n    return {\n      services: {\n        service_category: '',\n        name: '',\n        price: '',\n        description: '',\n        service_categories: [],\n\n      },\n    }\n  },\n  validations () {\n    return {\n      services: {\n        name: { required },\n        service_category: { required  },\n        price: {required, integer },\n        description: {required},\n      },\n      image: '',\n    }\n  },\n  methods: {\n    upload(){\n        console.log('upload')\n        var myWidget = window.cloudinary.createUploadWidget({\n            cloudName: 'dovxq5gn9', \n            processQueue: false,\n            uploadPreset: 'uhjevesg'}, (error, result) => { \n                if (!error && result && result.event === \"success\") { \n                console.log('Done! Here is the image info: ', result.info); \n                    const imageUrl = result.info.secure_url;\n                    this.image = imageUrl;\n                    this.displayImage(imageUrl);\n                }\n            }\n        )\n        document.getElementById(\"upload_widget\").addEventListener(\"click\", function(){\n            myWidget.open();\n        }, false);  \n    }, \n    // Function to display the uploaded image\n    displayImage(imageUrl) {\n        const imagePreviewDiv = document.getElementById('image-preview');\n        const image = document.createElement('img');\n        image.src = imageUrl;\n        image.classList.add('uploaded-image'); // Add CSS class for styling\n        imagePreviewDiv.innerHTML = ''; // Clear any existing content\n        imagePreviewDiv.appendChild(image);\n    },\n    async show_categories() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/Category.gql'),\n        });\n        console.log('the service category is here', response)\n         this.services.service_categories = response.data.categories;\n      } catch (error) {\n          console.error('Error logging out:', error);\n      }\n    },\n    async submitForm() {\n      this.v$.$touch();\n      if(!this.v$.$touch()) {\n        console.log()\n        try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/ServiceCreate.gql'),\n          variables: {\n            serviceCategoryId: this.services.service_category,\n            name: this.services.name,\n            description: this.services.description,\n            price: parseInt(this.services.price),\n            image: this.image\n          },\n        });\n        let data = this.services;\n        data['image'] = this.image;\n        data['id'] = response.data.createService.service.id;\n        console.log('the data of new services is: ', data);\n        console.log('reply from service is: ', response)\n        if(response) { alert(\"SUCCESS, new service has been recorded\") }\n        this.$emit('newServiceAdded', data);\n        this.time_slot_one = null;\n        } catch (error) { console.error(\"Graphql Error:\", error); }\n      }\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    },\n  },\n  components: {\n\n  },\n  mounted() {\n    this.show_categories()\n    this.upload()\n  },\n\n}\n</script>\n\n<style>\n.centered-form {\n  width: 230px;\n  margin: 0 auto;\n}\n.cloudinary-button {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n}\n.cloudinary-button:hover {\n    background-color: #0056b3;\n}\n/* Style the uploaded image */\n.uploaded-image {\n    max-width: 100%;\n    height: auto;\n    margin-top: 10px;\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>"]}]}