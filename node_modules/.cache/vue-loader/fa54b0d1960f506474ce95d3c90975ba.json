{"remainingRequest":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js??vue-loader-options!/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bonifacio/code/service_bundle_frontend/src/components/CustomerPage.vue","mtime":1694243568546},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/babel-loader/lib/index.js","mtime":1692833949708},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1692838039149},{"path":"/home/bonifacio/code/service_bundle_frontend/node_modules/@vue/cli-service/lib/config/vue-loader-v15-resolve-compat/vue-loader.js","mtime":1692833961693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3VzdG9tZXJQYWdlJywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzZXJ2aWNlX2NhdGVnb3JpZXM6IFtdLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0X3NlcnZpY2VfY2F0ZWdvcmllcygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgICBxdWVyeTogcmVxdWlyZSgnQC9ncmFwaHFsL0NhdGVnb3J5LmdxbCcpLAogICAgICAgIH0pOwogICAgICAgIHRoaXMuc2VydmljZV9jYXRlZ29yaWVzID0gcmVzcG9uc2UuZGF0YS5jYXRlZ29yaWVzOwogICAgICB9IGNhdGNoIChlcnJvcikgeyAKICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBsaWtlOicsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGdldFNlcnZpY2VDYXRlZ29yeVVSTChpdGVtKSB7CiAgICAgIHJldHVybiBgL3NlcnZpY2VfY2F0ZWdvcmllcy8ke2l0ZW0uaWR9YDsKICAgICAgLy8gcmV0dXJuIGAvc2VydmljZV9jYXRlZ29yaWVzLzpjYXRlZ29yeUlkL3NlcnZpY2VzLzpzZXJ2aWNlSWRgCiAgICB9CiAgfSwgCiAgbW91bnRlZCgpewogICAgdGhpcy5nZXRfc2VydmljZV9jYXRlZ29yaWVzKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICB9Cn0K"},{"version":3,"sources":["CustomerPage.vue"],"names":[],"mappings":";AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CustomerPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Customer Dashboard</h1>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div v-for=\"(item, index) in this.service_categories\" :key=\"index\" class=\"col-md-4 mb-3\">\n          <a :href=\"getServiceCategoryURL(item)\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <!-- Display the content of each box here -->\n                {{ item.name }}\n              </div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerPage',\n  data(){\n    return {\n      service_categories: [],\n    }\n  },\n  methods: {\n    async get_service_categories() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/Category.gql'),\n        });\n        this.service_categories = response.data.categories;\n      } catch (error) { \n        console.error('Error creating like:', error);\n      }\n    },\n    getServiceCategoryURL(item) {\n      return `/service_categories/${item.id}`;\n      // return `/service_categories/:categoryId/services/:serviceId`\n    }\n  }, \n  mounted(){\n    this.get_service_categories(this.$route.params.id)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}