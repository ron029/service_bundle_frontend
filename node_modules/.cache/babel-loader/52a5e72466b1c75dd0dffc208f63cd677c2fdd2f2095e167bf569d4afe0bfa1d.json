{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.graphql = void 0;\nvar tslib_1 = require(\"tslib\");\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nvar graphql_1 = require(\"./graphql\");\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n  if (execOptions === void 0) {\n    execOptions = {};\n  }\n  var mainDefinition = (0, apollo_utilities_1.getMainDefinition)(document);\n  var fragments = (0, apollo_utilities_1.getFragmentDefinitions)(document);\n  var fragmentMap = (0, apollo_utilities_1.createFragmentMap)(fragments);\n  var resultMapper = execOptions.resultMapper;\n  var fragmentMatcher = execOptions.fragmentMatcher || function () {\n    return true;\n  };\n  var execContext = {\n    fragmentMap: fragmentMap,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    resultMapper: resultMapper,\n    resolver: resolver,\n    fragmentMatcher: fragmentMatcher\n  };\n  return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\nexports.graphql = graphql;\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var fragmentMap, contextValue, variables, result, execute;\n    var _this = this;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n          result = {};\n          execute = function (selection) {\n            return tslib_1.__awaiter(_this, void 0, void 0, function () {\n              var fieldResult, resultFieldKey, fragment, typeCondition, fragmentResult;\n              return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(0, apollo_utilities_1.shouldInclude)(selection, variables)) {\n                      return [2];\n                    }\n                    if (!(0, apollo_utilities_1.isField)(selection)) return [3, 2];\n                    return [4, executeField(selection, rootValue, execContext)];\n                  case 1:\n                    fieldResult = _a.sent();\n                    resultFieldKey = (0, apollo_utilities_1.resultKeyNameFromField)(selection);\n                    if (fieldResult !== undefined) {\n                      if (result[resultFieldKey] === undefined) {\n                        result[resultFieldKey] = fieldResult;\n                      } else {\n                        (0, graphql_1.merge)(result[resultFieldKey], fieldResult);\n                      }\n                    }\n                    return [2];\n                  case 2:\n                    if ((0, apollo_utilities_1.isInlineFragment)(selection)) {\n                      fragment = selection;\n                    } else {\n                      fragment = fragmentMap[selection.name.value];\n                      if (!fragment) {\n                        throw new Error(\"No fragment named \".concat(selection.name.value));\n                      }\n                    }\n                    typeCondition = fragment.typeCondition.name.value;\n                    if (!execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) return [3, 4];\n                    return [4, executeSelectionSet(fragment.selectionSet, rootValue, execContext)];\n                  case 3:\n                    fragmentResult = _a.sent();\n                    (0, graphql_1.merge)(result, fragmentResult);\n                    _a.label = 4;\n                  case 4:\n                    return [2];\n                }\n              });\n            });\n          };\n          return [4, Promise.all(selectionSet.selections.map(execute))];\n        case 1:\n          _a.sent();\n          if (execContext.resultMapper) {\n            return [2, execContext.resultMapper(result, rootValue)];\n          }\n          return [2, result];\n      }\n    });\n  });\n}\nfunction executeField(field, rootValue, execContext) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var variables, contextValue, resolver, fieldName, args, info, result;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n          fieldName = field.name.value;\n          args = (0, apollo_utilities_1.argumentsObjectFromField)(field, variables);\n          info = {\n            isLeaf: !field.selectionSet,\n            resultKey: (0, apollo_utilities_1.resultKeyNameFromField)(field),\n            directives: (0, apollo_utilities_1.getDirectiveInfoFromField)(field, variables),\n            field: field\n          };\n          return [4, resolver(fieldName, rootValue, args, contextValue, info)];\n        case 1:\n          result = _a.sent();\n          if (!field.selectionSet) {\n            return [2, result];\n          }\n          if (result == null) {\n            return [2, result];\n          }\n          if (Array.isArray(result)) {\n            return [2, executeSubSelectedArray(field, result, execContext)];\n          }\n          return [2, executeSelectionSet(field.selectionSet, result, execContext)];\n      }\n    });\n  });\n}\nfunction executeSubSelectedArray(field, result, execContext) {\n  return Promise.all(result.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  }));\n}","map":{"version":3,"names":["apollo_utilities_1","require","graphql_1","graphql","resolver","document","rootValue","contextValue","variableValues","execOptions","mainDefinition","getMainDefinition","fragments","getFragmentDefinitions","fragmentMap","createFragmentMap","resultMapper","fragmentMatcher","execContext","executeSelectionSet","selectionSet","exports","variables","result","execute","selection","tslib_1","__awaiter","_this","shouldInclude","isField","executeField","fieldResult","_a","sent","resultFieldKey","resultKeyNameFromField","undefined","merge","isInlineFragment","fragment","name","value","Error","concat","typeCondition","fragmentResult","Promise","all","selections","map","field","fieldName","args","argumentsObjectFromField","info","isLeaf","resultKey","directives","getDirectiveInfoFromField","Array","isArray","executeSubSelectedArray","item"],"sources":["../src/async.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}