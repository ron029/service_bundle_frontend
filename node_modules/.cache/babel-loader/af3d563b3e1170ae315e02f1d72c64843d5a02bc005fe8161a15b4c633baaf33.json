{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { hasDirectives, getMainDefinition } from 'apollo-utilities';\nimport * as Async from 'graphql-anywhere/lib/async';\nvar graphql = Async.graphql;\nimport { removeClientSetsFromDocument, normalizeTypeDefs } from './utils';\nvar capitalizeFirstLetter = function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nexport var withClientState = function (clientStateConfig) {\n  if (clientStateConfig === void 0) {\n    clientStateConfig = {\n      resolvers: {},\n      defaults: {}\n    };\n  }\n  var defaults = clientStateConfig.defaults,\n    cache = clientStateConfig.cache,\n    typeDefs = clientStateConfig.typeDefs,\n    fragmentMatcher = clientStateConfig.fragmentMatcher;\n  if (cache && defaults) {\n    cache.writeData({\n      data: defaults\n    });\n  }\n  return new (function (_super) {\n    __extends(StateLink, _super);\n    function StateLink() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StateLink.prototype.writeDefaults = function () {\n      if (cache && defaults) {\n        cache.writeData({\n          data: defaults\n        });\n      }\n    };\n    StateLink.prototype.request = function (operation, forward) {\n      if (forward === void 0) {\n        forward = function () {\n          return Observable.of({\n            data: {}\n          });\n        };\n      }\n      if (typeDefs) {\n        var directives_1 = 'directive @client on FIELD';\n        var definition_1 = normalizeTypeDefs(typeDefs);\n        operation.setContext(function (_a) {\n          var _b = _a.schemas,\n            schemas = _b === void 0 ? [] : _b;\n          return {\n            schemas: schemas.concat([{\n              definition: definition_1,\n              directives: directives_1\n            }])\n          };\n        });\n      }\n      var isClient = hasDirectives(['client'], operation.query);\n      if (!isClient) return forward(operation);\n      var resolvers = typeof clientStateConfig.resolvers === 'function' ? clientStateConfig.resolvers() : clientStateConfig.resolvers;\n      var server = removeClientSetsFromDocument(operation.query);\n      var query = operation.query;\n      var type = capitalizeFirstLetter((getMainDefinition(query) || {}).operation) || 'Query';\n      var resolver = function (fieldName, rootValue, args, context, info) {\n        if (rootValue === void 0) {\n          rootValue = {};\n        }\n        var resultKey = info.resultKey;\n        var aliasedNode = rootValue[resultKey];\n        var preAliasingNode = rootValue[fieldName];\n        var aliasNeeded = resultKey !== fieldName;\n        if (aliasedNode !== undefined || preAliasingNode !== undefined) {\n          return aliasedNode || preAliasingNode;\n        }\n        var resolverMap = resolvers[rootValue.__typename || type];\n        if (resolverMap) {\n          var resolve = resolverMap[fieldName];\n          if (resolve) return resolve(rootValue, args, context, info);\n        }\n        return (aliasNeeded ? aliasedNode : preAliasingNode) || (defaults || {})[fieldName];\n      };\n      if (server) operation.query = server;\n      var obs = server && forward ? forward(operation) : Observable.of({\n        data: {}\n      });\n      return new Observable(function (observer) {\n        var complete = false;\n        var handlingNext = false;\n        obs.subscribe({\n          next: function (_a) {\n            var data = _a.data,\n              errors = _a.errors;\n            var observerErrorHandler = observer.error.bind(observer);\n            var context = operation.getContext();\n            handlingNext = true;\n            graphql(resolver, query, data, context, operation.variables, {\n              fragmentMatcher: fragmentMatcher\n            }).then(function (nextData) {\n              observer.next({\n                data: nextData,\n                errors: errors\n              });\n              if (complete) {\n                observer.complete();\n              }\n              handlingNext = false;\n            }).catch(observerErrorHandler);\n          },\n          error: observer.error.bind(observer),\n          complete: function () {\n            if (!handlingNext) {\n              observer.complete();\n            }\n            complete = true;\n          }\n        });\n      });\n    };\n    return StateLink;\n  }(ApolloLink))();\n};","map":{"version":3,"names":["ApolloLink","Observable","hasDirectives","getMainDefinition","Async","graphql","removeClientSetsFromDocument","normalizeTypeDefs","capitalizeFirstLetter","str","charAt","toUpperCase","slice","withClientState","clientStateConfig","resolvers","defaults","cache","typeDefs","fragmentMatcher","writeData","data","_super","__extends","StateLink","prototype","writeDefaults","request","operation","forward","of","directives_1","definition_1","setContext","_a","_b","schemas","concat","definition","directives","isClient","query","server","type","resolver","fieldName","rootValue","args","context","info","resultKey","aliasedNode","preAliasingNode","aliasNeeded","undefined","resolverMap","__typename","resolve","obs","observer","complete","handlingNext","subscribe","next","errors","observerErrorHandler","error","bind","getContext","variables","then","nextData","catch"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}