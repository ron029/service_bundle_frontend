{"ast":null,"code":"import { ApolloLink, Observable } from 'apollo-link';\nvar sha256 = require('hash.js/lib/hash/sha/256');\nimport { print } from 'graphql/language/printer';\nexport var VERSION = 1;\nexport var defaultGenerateHash = function (query) {\n  return sha256().update(print(query)).digest('hex');\n};\nexport var defaultOptions = {\n  generateHash: defaultGenerateHash,\n  disable: function (_a) {\n    var graphQLErrors = _a.graphQLErrors,\n      operation = _a.operation;\n    if (graphQLErrors && graphQLErrors.some(function (_a) {\n      var message = _a.message;\n      return message === 'PersistedQueryNotSupported';\n    })) {\n      return true;\n    }\n    var response = operation.getContext().response;\n    if (response && response.status && (response.status === 400 || response.status === 500)) {\n      return true;\n    }\n    return false;\n  },\n  useGETForHashedQueries: false\n};\nfunction definitionIsMutation(d) {\n  return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n}\nfunction operationIsQuery(operation) {\n  return !operation.query.definitions.some(definitionIsMutation);\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hashesKeyString = '__createPersistedQueryLink_hashes';\nvar hashesKey = typeof Symbol === 'function' ? Symbol.for(hashesKeyString) : hashesKeyString;\nvar nextHashesChildKey = 0;\nexport var createPersistedQueryLink = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = Object.assign({}, defaultOptions, options),\n    generateHash = _a.generateHash,\n    disable = _a.disable,\n    useGETForHashedQueries = _a.useGETForHashedQueries;\n  var supportsPersistedQueries = true;\n  var hashesChildKey = 'forLink' + nextHashesChildKey++;\n  function getQueryHash(query) {\n    if (!query || typeof query !== 'object') {\n      return generateHash(query);\n    }\n    if (!hasOwnProperty.call(query, hashesKey)) {\n      Object.defineProperty(query, hashesKey, {\n        value: Object.create(null),\n        enumerable: false\n      });\n    }\n    var hashes = query[hashesKey];\n    return hasOwnProperty.call(hashes, hashesChildKey) ? hashes[hashesChildKey] : hashes[hashesChildKey] = generateHash(query);\n  }\n  return new ApolloLink(function (operation, forward) {\n    if (!forward) {\n      throw new Error('PersistedQueryLink cannot be the last link in the chain.');\n    }\n    var query = operation.query;\n    var hashError;\n    if (supportsPersistedQueries) {\n      try {\n        operation.extensions.persistedQuery = {\n          version: VERSION,\n          sha256Hash: getQueryHash(query)\n        };\n      } catch (e) {\n        hashError = e;\n      }\n    }\n    return new Observable(function (observer) {\n      if (hashError) {\n        observer.error(hashError);\n        return;\n      }\n      var subscription;\n      var retried = false;\n      var originalFetchOptions;\n      var setFetchOptions = false;\n      var retry = function (_a, cb) {\n        var response = _a.response,\n          networkError = _a.networkError;\n        if (!retried && (response && response.errors || networkError)) {\n          retried = true;\n          supportsPersistedQueries = !disable({\n            response: response,\n            networkError: networkError,\n            operation: operation,\n            graphQLErrors: response && response.errors || void 0\n          });\n          if (response && response.errors && response.errors.some(function (_a) {\n            var message = _a.message;\n            return message === 'PersistedQueryNotFound';\n          }) || !supportsPersistedQueries) {\n            if (subscription) subscription.unsubscribe();\n            operation.setContext({\n              http: {\n                includeQuery: true,\n                includeExtensions: supportsPersistedQueries\n              }\n            });\n            if (setFetchOptions) {\n              operation.setContext({\n                fetchOptions: originalFetchOptions\n              });\n            }\n            subscription = forward(operation).subscribe(handler);\n            return;\n          }\n        }\n        cb();\n      };\n      var handler = {\n        next: function (response) {\n          retry({\n            response: response\n          }, function () {\n            return observer.next(response);\n          });\n        },\n        error: function (networkError) {\n          retry({\n            networkError: networkError\n          }, function () {\n            return observer.error(networkError);\n          });\n        },\n        complete: observer.complete.bind(observer)\n      };\n      operation.setContext({\n        http: {\n          includeQuery: !supportsPersistedQueries,\n          includeExtensions: supportsPersistedQueries\n        }\n      });\n      if (useGETForHashedQueries && supportsPersistedQueries && operationIsQuery(operation)) {\n        operation.setContext(function (_a) {\n          var _b = _a.fetchOptions,\n            fetchOptions = _b === void 0 ? {} : _b;\n          originalFetchOptions = fetchOptions;\n          return {\n            fetchOptions: Object.assign({}, fetchOptions, {\n              method: 'GET'\n            })\n          };\n        });\n        setFetchOptions = true;\n      }\n      subscription = forward(operation).subscribe(handler);\n      return function () {\n        if (subscription) subscription.unsubscribe();\n      };\n    });\n  });\n};","map":{"version":3,"names":["ApolloLink","Observable","sha256","require","print","VERSION","defaultGenerateHash","query","update","digest","defaultOptions","generateHash","disable","_a","graphQLErrors","operation","some","message","response","getContext","status","useGETForHashedQueries","definitionIsMutation","d","kind","operationIsQuery","definitions","hasOwnProperty","Object","prototype","hashesKeyString","hashesKey","Symbol","for","nextHashesChildKey","createPersistedQueryLink","options","assign","supportsPersistedQueries","hashesChildKey","getQueryHash","call","defineProperty","value","create","enumerable","hashes","forward","Error","hashError","extensions","persistedQuery","version","sha256Hash","e","observer","error","subscription","retried","originalFetchOptions","setFetchOptions","retry","cb","networkError","errors","unsubscribe","setContext","http","includeQuery","includeExtensions","fetchOptions","subscribe","handler","next","complete","bind","_b","method"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}