{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      cart: {\n        first_name: '',\n        last_name: '',\n        contact_number: '',\n        email: '',\n        payment_option: ''\n      },\n      cart_content: []\n    };\n  },\n  methods: {\n    async submitForm() {\n      console.log(this.cart);\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/CartHistoryCreate.gql'),\n          variables: {\n            paymentOptionId: 1,\n            firstName: this.cart.first_name,\n            lastName: this.cart.last_name,\n            contactNumber: this.cart.contact_number,\n            email: this.cart.email\n          }\n        });\n        console.log(response);\n        if (response) {\n          this.reloadPage();\n          this.$router.push('/checkout');\n        }\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n      }\n    },\n    async cart_items() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/CartItemCategoryCustomer.gql')\n        });\n        this.cart_content = response.data.pending;\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n      }\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    }\n  },\n  mounted() {\n    this.cart_items();\n  }\n};","map":{"version":3,"names":["data","cart","first_name","last_name","contact_number","email","payment_option","cart_content","methods","submitForm","console","log","response","$apollo","mutate","mutation","require","variables","paymentOptionId","firstName","lastName","contactNumber","reloadPage","$router","push","error","cart_items","query","pending","window","location","reload","mounted"],"sources":["src/components/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Cart Page</h1>\n    <div class=\"form-container\">\n      <form @submit.prevent=\"submitForm\">\n        <p>Your official Checkout form</p>\n        <div class=\"mb-3\">\n          <input type=\"text\" class=\"form-control\" v-model=\"cart.first_name\" placeholder=\"First Name\" required>\n        </div>\n        <div class=\"mb-3\">\n          <input type=\"text\" class=\"form-control\" v-model=\"cart.last_name\" placeholder=\"Last Name\" required>\n        </div>\n        <div class=\"mb-3\">\n          <input type=\"text\" class=\"form-control\" v-model=\"cart.contact_number\" placeholder=\"Contact Number\" required>\n        </div>\n        <div class=\"mb-3\">\n          <input type=\"text\" class=\"form-control\" v-model=\"cart.email\" placeholder=\"Email\" required>\n        </div>\n        <div class=\"mb-3\">\n          <select class=\"form-select\" v-model=\"cart.payment_option\">\n            <option value=\"1\">Over the Counter</option>\n            <option value=\"2\">Bank Deposit</option>\n          </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n      </form>\n    </div>\n\n    <!-- Table container -->\n    <div class=\"table-container\" v-if=\"cart_content.length > 0\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Service Name</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in cart_content\" :key=\"index\">\n            <td>{{ item.service.name }}</td>\n            <td>{{ item.date }}</td>\n            <td>{{ item.time }}</td>\n            <td>{{ item.status }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cart: {\n        first_name: '',\n        last_name: '',\n        contact_number: '',\n        email: '',\n        payment_option: ''\n      },\n      cart_content: []\n    }\n  },\n  methods: {\n    async submitForm() {\n      console.log(this.cart)\n      try {\n        const response = await this.$apollo.mutate({\n          mutation: require('@/graphql/CartHistoryCreate.gql'),\n          variables: {\n            paymentOptionId: 1,\n            firstName: this.cart.first_name,\n            lastName: this.cart.last_name,\n            contactNumber: this.cart.contact_number,\n            email: this.cart.email\n          },\n        });\n        console.log(response)\n\n        if (response) { \n          this.reloadPage()\n          this.$router.push('/checkout') \n        }\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n      }\n    },\n    async cart_items() {\n      try {\n        const response = await this.$apollo.query({\n          query: require('@/graphql/CartItemCategoryCustomer.gql'),\n        });\n        this.cart_content = response.data.pending;\n      } catch (error) {\n        console.error('Error in create_cart_item:', error);\n      }\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    },\n  },\n  mounted(){\n    this.cart_items()\n  }\n}\n</script>\n\n<style>\n/* Style the form container */\n.form-container {\n    max-width: 400px; /* Adjust the maximum width as needed */\n    margin: 0 auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  }\n\n  /* Center the text within the form */\n  .form-container p {\n    text-align: center;\n  }\n\n  /* Style form inputs and select */\n  .form-control {\n    margin-bottom: 10px;\n  }\n\n  /* Style the submit button */\n  .btn-primary {\n    background-color: #007bff; /* Primary button color */\n    color: #fff;\n    border: none;\n  }\n\n  /* Style the submit button on hover */\n  .btn-primary:hover {\n    background-color: #0056b3; /* Darker shade of primary color */\n  }\n\n  /* Style the table */\n  .table-container {\n    margin-top: 20px; /* Add spacing between form and table */\n  }\n\n  /* Style table headers */\n  .table th {\n    background-color: #007bff;\n    color: #fff;\n  }\n\n  /* Style table rows */\n  .table tbody tr:nth-child(even) {\n    background-color: #f2f2f2;\n  }\n</style>\n"],"mappings":";AAqDA;EACAA,KAAA;IACA;MACAC,IAAA;QACAC,UAAA;QACAC,SAAA;QACAC,cAAA;QACAC,KAAA;QACAC,cAAA;MACA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACAC,OAAA,CAAAC,GAAA,MAAAV,IAAA;MACA;QACA,MAAAW,QAAA,cAAAC,OAAA,CAAAC,MAAA;UACAC,QAAA,EAAAC,OAAA;UACAC,SAAA;YACAC,eAAA;YACAC,SAAA,OAAAlB,IAAA,CAAAC,UAAA;YACAkB,QAAA,OAAAnB,IAAA,CAAAE,SAAA;YACAkB,aAAA,OAAApB,IAAA,CAAAG,cAAA;YACAC,KAAA,OAAAJ,IAAA,CAAAI;UACA;QACA;QACAK,OAAA,CAAAC,GAAA,CAAAC,QAAA;QAEA,IAAAA,QAAA;UACA,KAAAU,UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;MACA,SAAAC,KAAA;QACAf,OAAA,CAAAe,KAAA,+BAAAA,KAAA;MACA;IACA;IACA,MAAAC,WAAA;MACA;QACA,MAAAd,QAAA,cAAAC,OAAA,CAAAc,KAAA;UACAA,KAAA,EAAAX,OAAA;QACA;QACA,KAAAT,YAAA,GAAAK,QAAA,CAAAZ,IAAA,CAAA4B,OAAA;MACA,SAAAH,KAAA;QACAf,OAAA,CAAAe,KAAA,+BAAAA,KAAA;MACA;IACA;IACAH,WAAA;MACA;MACAO,MAAA,CAAAC,QAAA,CAAAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAN,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}