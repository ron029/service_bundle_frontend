{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BookingPage from '@/views/BookingPage.vue';\nimport ServicePage from '@/views/ServicePage.vue';\nimport ServiceCategoryPage from '@/views/ServiceCategoryPage.vue';\nimport ServiceNew from '@/views/ServiceNew.vue';\nimport ServiceEdit from '@/views/ServiceEdit.vue';\nimport { mapState, mapMutations } from 'vuex';\nimport { createProvider, onLogout } from '@/vue-apollo';\nimport logout from '@/graphql/Logout.gql';\nimport store from '@/store';\nexport default {\n  name: 'AppNavbar',\n  data() {\n    return {\n      currentPage: 'service',\n      // Initial page\n      // showServiceNew: false, // Flag to control the visibility of ServiceNew,\n      showNew: false,\n      showedit: false,\n      serviceId: null\n    };\n  },\n  components: {\n    ServicePage,\n    BookingPage,\n    ServiceCategoryPage,\n    ServiceNew,\n    ServiceEdit\n  },\n  computed: {\n    ...mapState(['isAuthenticated', 'userRole'])\n  },\n  methods: {\n    showServiceEdit(id) {\n      console.log('this is app nav, the service id to edit is: ', id);\n      this.showNew = false;\n      this.currentPage = '';\n      this.showEdit = true;\n    },\n    showServiceNewPage() {\n      this.showNew = true;\n      this.currentPage = '';\n      this.showEdit = false;\n    },\n    get_role() {\n      const userRole = localStorage.getItem('userRole');\n      return userRole;\n    },\n    ...mapMutations(['clearAuthentication', 'setAuthenticated']),\n    async logout() {\n      try {\n        await this.$apollo.mutate({\n          mutation: logout\n        });\n        await onLogout(createProvider);\n        this.setAuthenticated(false);\n        this.clearAuthentication();\n        store.commit('clearUserRole');\n        if (this.$route.path !== '/login') this.$router.push('/login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    }\n  },\n  mounted() {\n    console.log('the role in navbar is now', this.get_role());\n    console.log('the role is now', this.userRole);\n  }\n};","map":{"version":3,"names":["BookingPage","ServicePage","ServiceCategoryPage","ServiceNew","ServiceEdit","mapState","mapMutations","createProvider","onLogout","logout","store","name","data","currentPage","showNew","showedit","serviceId","components","computed","methods","showServiceEdit","id","console","log","showEdit","showServiceNewPage","get_role","userRole","localStorage","getItem","$apollo","mutate","mutation","setAuthenticated","clearAuthentication","commit","$route","path","$router","push","error","mounted"],"sources":["src/components/AppNavbar.vue"],"sourcesContent":["<template>\n    <div>\n        <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            <div class=\"container-fluid\">\n                <router-link to=\"/\" class=\"navbar-brand\">ServiceBundle</router-link>\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'admin'\">\n                        <span @click=\"currentPage='bookings'\">Bookings &nbsp;&nbsp;</span>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'admin'\">\n                        <span @click=\"currentPage='services'\">Services &nbsp;&nbsp;</span>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'admin'\">\n                        <span @click=\"currentPage='serviceCategories'\">Service Categories &nbsp;&nbsp;</span>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'customer'\">\n                        <router-link class=\"nav-link\" to=\"/cart\">Cart</router-link>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'customer'\">\n                        <a class=\"nav-link\" href=\"/customer/booking\">Bookings</a>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'manager'\">\n                        <router-link class=\"nav-link\" to=\"/registered\">Registered</router-link>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'manager'\">\n                        <a href=\"/services\" class=\"nav-link\">Services</a>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'manager'\">\n                        <router-link class=\"nav-link\" to=\"/service_categories\">Service_Categories</router-link>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'manager'\">\n                        <router-link class=\"nav-link\" to=\"/booking\">Bookings1</router-link>\n                    </li>\n                    <li class=\"nav-item\" v-if=\"isAuthenticated && this.get_role() == 'manager'\">\n                        <router-link class=\"nav-link\" to=\"/booking_manager\">Bookings2</router-link>\n                    </li>\n                    <!-- <li class=\"nav-item dropdown\"> -->\n                        <!-- <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> Dropdown </a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                            <li><hr class=\"dropdown-divider\"></li>\n                            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                        </ul> -->\n                    <!-- </li> -->\n                        <!-- <li class=\"nav-item d-flex\"> -->\n                        <!-- <a class=\"nav-link disabled \" aria-disabled=\"true\">Disabled</a> -->\n                    <!-- </li> -->\n                </ul>\n                <ul class=\"navbar-nav\" v-if=\"!isAuthenticated\">\n                    <li class=\"nav-item\"><router-link class=\"nav-link\" to=\"/login\">Log in</router-link></li>\n                    <li class=\"nav-item\"><router-link class=\"nav-link\" to=\"/signup\">Sign up</router-link></li>\n                </ul>\n                <ul class=\"navbar-nav\" v-else>\n                    <li class=\"nav-item\"><span @click=\"logout\" class=\"nav-link logout\" to=\"logout\">Log out</span></li>\n                </ul>\n                </div>\n            </div>\n        </nav>\n        <div>\n            <ServicePage \n            v-if=\"currentPage === 'services'\" \n            v-on:showServiceNew=\"showServiceNewPage()\" \n            v-on:showEditPage=\"showServiceEdit($event)\"\n            />\n            <BookingPage v-else-if=\"currentPage === 'bookings'\" />\n            <ServiceCategoryPage v-else-if=\"currentPage === 'serviceCategories'\" />\n            <ServiceNew v-else-if=\"showNew\" />\n            <ServiceEdit :id=\"serviceId\" v-if=\"showedit\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport BookingPage from '@/views/BookingPage.vue';\nimport ServicePage from '@/views/ServicePage.vue';\nimport ServiceCategoryPage from '@/views/ServiceCategoryPage.vue';\nimport ServiceNew from '@/views/ServiceNew.vue';\nimport ServiceEdit from '@/views/ServiceEdit.vue';\n\nimport { mapState, mapMutations } from 'vuex';\nimport { createProvider, onLogout } from '@/vue-apollo';\nimport logout from '@/graphql/Logout.gql';\nimport store from '@/store';\n\nexport default {\n    name: 'AppNavbar',\n    data(){\n        return {\n            currentPage: 'service', // Initial page\n            // showServiceNew: false, // Flag to control the visibility of ServiceNew,\n            showNew: false,\n            showedit: false,\n            serviceId: null,\n        }\n    },\n    components: {\n        ServicePage,\n        BookingPage,\n        ServiceCategoryPage,\n        ServiceNew,\n        ServiceEdit\n    },\n    computed: {\n        ...mapState(['isAuthenticated', 'userRole']),\n    },\n    methods: {\n        showServiceEdit(id) {\n            console.log('this is app nav, the service id to edit is: ', id)\n            this.showNew=false;\n            this.currentPage='';\n            this.showEdit=true;\n        },\n        showServiceNewPage() {\n            this.showNew=true;\n            this.currentPage='';\n            this.showEdit=false;\n        },\n        get_role() {\n            const userRole = localStorage.getItem('userRole');\n            return userRole;\n        },\n        ...mapMutations(['clearAuthentication', 'setAuthenticated']),\n        async logout() {\n            try {\n                await this.$apollo.mutate({\n                    mutation: logout,\n                });\n                await onLogout(createProvider);\n                this.setAuthenticated(false);\n                this.clearAuthentication();\n                store.commit('clearUserRole');\n\n                if (this.$route.path !== '/login') this.$router.push('/login');\n            } catch (error) {\n                console.error('Error logging out:', error);\n            }\n        },\n    },\n    mounted(){\n        console.log('the role in navbar is now', this.get_role())\n        console.log('the role is now', this.userRole)\n    }\n}\n</script>\n\n<style>\n.logout {\n    cursor: pointer;\n}\n</style>"],"mappings":";AA8EA,OAAAA,WAAA;AACA,OAAAC,WAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AAEA,SAAAC,QAAA,EAAAC,YAAA;AACA,SAAAC,cAAA,EAAAC,QAAA;AACA,OAAAC,MAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,SAAA;IACA;EACA;EACAC,UAAA;IACAhB,WAAA;IACAD,WAAA;IACAE,mBAAA;IACAC,UAAA;IACAC;EACA;EACAc,QAAA;IACA,GAAAb,QAAA;EACA;EACAc,OAAA;IACAC,gBAAAC,EAAA;MACAC,OAAA,CAAAC,GAAA,iDAAAF,EAAA;MACA,KAAAP,OAAA;MACA,KAAAD,WAAA;MACA,KAAAW,QAAA;IACA;IACAC,mBAAA;MACA,KAAAX,OAAA;MACA,KAAAD,WAAA;MACA,KAAAW,QAAA;IACA;IACAE,SAAA;MACA,MAAAC,QAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,OAAAF,QAAA;IACA;IACA,GAAArB,YAAA;IACA,MAAAG,OAAA;MACA;QACA,WAAAqB,OAAA,CAAAC,MAAA;UACAC,QAAA,EAAAvB;QACA;QACA,MAAAD,QAAA,CAAAD,cAAA;QACA,KAAA0B,gBAAA;QACA,KAAAC,mBAAA;QACAxB,KAAA,CAAAyB,MAAA;QAEA,SAAAC,MAAA,CAAAC,IAAA,oBAAAC,OAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACAlB,OAAA,CAAAkB,KAAA,uBAAAA,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACAnB,OAAA,CAAAC,GAAA,mCAAAG,QAAA;IACAJ,OAAA,CAAAC,GAAA,yBAAAI,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}