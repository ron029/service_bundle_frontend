{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapMutations } from 'vuex';\nimport { createProvider, onLogout } from '@/vue-apollo';\nimport logout from '@/graphql/Logout.gql';\nimport store from '@/store';\nexport default {\n  data() {\n    return {\n      showPage: ''\n    };\n  },\n  name: 'MerchantPage',\n  computed: {\n    ...mapState(['isAuthenticated', 'userRole'])\n  },\n  methods: {\n    get_role() {\n      const userRole = localStorage.getItem('userRole');\n      return userRole;\n    },\n    ...mapMutations(['clearAuthentication', 'setAuthenticated', 'clearUserRole']),\n    async logout() {\n      try {\n        await this.$apollo.mutate({\n          mutation: logout\n        });\n        await onLogout(createProvider);\n        this.setAuthenticated(false);\n        this.clearAuthentication();\n        store.commit('clearUserRole');\n        if (this.$route.path !== '/login') this.$router.push('/login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    }\n  },\n  mounted() {\n    console.log('the role in navbar is now', this.get_role());\n    console.log('the role is now', this.userRole);\n  }\n};","map":{"version":3,"names":["mapState","mapMutations","createProvider","onLogout","logout","store","data","showPage","name","computed","methods","get_role","userRole","localStorage","getItem","$apollo","mutate","mutation","setAuthenticated","clearAuthentication","commit","$route","path","$router","push","error","console","mounted","log"],"sources":["src/views/MerchantPage.vue"],"sourcesContent":["<template>\n\t<div class=\"\"> </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport { createProvider, onLogout } from '@/vue-apollo';\nimport logout from '@/graphql/Logout.gql';\nimport store from '@/store';\nexport default {\n  data() {\n    return {\n\t\tshowPage: '',\n    }\n  },\n  name: 'MerchantPage',\n  computed: {\n        ...mapState(['isAuthenticated', 'userRole']),\n    },\n    methods: {\n        get_role(){\n            const userRole = localStorage.getItem('userRole');\n            return userRole;\n        },\n        ...mapMutations(['clearAuthentication', 'setAuthenticated', 'clearUserRole']),\n        async logout() {\n            try {\n                await this.$apollo.mutate({\n                    mutation: logout,\n                });\n                await onLogout(createProvider);\n                this.setAuthenticated(false);\n                this.clearAuthentication();\n                store.commit('clearUserRole');\n\n                if (this.$route.path !== '/login') this.$router.push('/login');\n            } catch (error) {\n                console.error('Error logging out:', error);\n            }\n        },\n    },\n  mounted(){\n    console.log('the role in navbar is now', this.get_role())\n    console.log('the role is now', this.userRole)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AAKA,SAAAA,QAAA,EAAAC,YAAA;AACA,SAAAC,cAAA,EAAAC,QAAA;AACA,OAAAC,MAAA;AACA,OAAAC,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,IAAA;EACAC,QAAA;IACA,GAAAT,QAAA;EACA;EACAU,OAAA;IACAC,SAAA;MACA,MAAAC,QAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,OAAAF,QAAA;IACA;IACA,GAAAX,YAAA;IACA,MAAAG,OAAA;MACA;QACA,WAAAW,OAAA,CAAAC,MAAA;UACAC,QAAA,EAAAb;QACA;QACA,MAAAD,QAAA,CAAAD,cAAA;QACA,KAAAgB,gBAAA;QACA,KAAAC,mBAAA;QACAd,KAAA,CAAAe,MAAA;QAEA,SAAAC,MAAA,CAAAC,IAAA,oBAAAC,OAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,uBAAAA,KAAA;MACA;IACA;EACA;EACAE,QAAA;IACAD,OAAA,CAAAE,GAAA,mCAAAjB,QAAA;IACAe,OAAA,CAAAE,GAAA,yBAAAhB,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}