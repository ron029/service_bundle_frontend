{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');\nvar _extends2 = _interopRequireDefault(require('@babel/runtime/helpers/extends'));\nvar _require = require('apollo-link'),\n  ApolloLink = _require.ApolloLink,\n  Observable = _require.Observable;\nvar _require2 = require('apollo-link-http-common'),\n  selectURI = _require2.selectURI,\n  selectHttpOptionsAndBody = _require2.selectHttpOptionsAndBody,\n  fallbackHttpConfig = _require2.fallbackHttpConfig,\n  serializeFetchParameter = _require2.serializeFetchParameter,\n  createSignalIfSupported = _require2.createSignalIfSupported,\n  parseAndCheckHttpResponse = _require2.parseAndCheckHttpResponse;\nvar _require3 = require('extract-files'),\n  extractFiles = _require3.extractFiles,\n  isExtractableFile = _require3.isExtractableFile,\n  ReactNativeFile = _require3.ReactNativeFile;\nexports.ReactNativeFile = ReactNativeFile;\nexports.isExtractableFile = isExtractableFile;\nfunction formDataAppendFile(formData, fieldName, file) {\n  formData.append(fieldName, file, file.name);\n}\nexports.formDataAppendFile = formDataAppendFile;\nexports.createUploadLink = function (_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$uri = _ref.uri,\n    fetchUri = _ref$uri === void 0 ? '/graphql' : _ref$uri,\n    _ref$isExtractableFil = _ref.isExtractableFile,\n    customIsExtractableFile = _ref$isExtractableFil === void 0 ? isExtractableFile : _ref$isExtractableFil,\n    CustomFormData = _ref.FormData,\n    _ref$formDataAppendFi = _ref.formDataAppendFile,\n    customFormDataAppendFile = _ref$formDataAppendFi === void 0 ? formDataAppendFile : _ref$formDataAppendFi,\n    customFetch = _ref.fetch,\n    fetchOptions = _ref.fetchOptions,\n    credentials = _ref.credentials,\n    headers = _ref.headers,\n    includeExtensions = _ref.includeExtensions;\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions\n    },\n    options: fetchOptions,\n    credentials: credentials,\n    headers: headers\n  };\n  return new ApolloLink(function (operation) {\n    var uri = selectURI(operation, fetchUri);\n    var context = operation.getContext();\n    var _context$clientAwaren = context.clientAwareness;\n    _context$clientAwaren = _context$clientAwaren === void 0 ? {} : _context$clientAwaren;\n    var name = _context$clientAwaren.name,\n      version = _context$clientAwaren.version,\n      headers = context.headers;\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: (0, _extends2.default)({}, name && {\n        'apollographql-client-name': name\n      }, {}, version && {\n        'apollographql-client-version': version\n      }, {}, headers)\n    };\n    var _selectHttpOptionsAnd = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig),\n      options = _selectHttpOptionsAnd.options,\n      body = _selectHttpOptionsAnd.body;\n    var _extractFiles = extractFiles(body, '', customIsExtractableFile),\n      clone = _extractFiles.clone,\n      files = _extractFiles.files;\n    var payload = serializeFetchParameter(clone, 'Payload');\n    if (files.size) {\n      delete options.headers['content-type'];\n      var RuntimeFormData = CustomFormData || FormData;\n      var form = new RuntimeFormData();\n      form.append('operations', payload);\n      var map = {};\n      var i = 0;\n      files.forEach(function (paths) {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n      i = 0;\n      files.forEach(function (paths, file) {\n        customFormDataAppendFile(form, ++i, file);\n      });\n      options.body = form;\n    } else options.body = payload;\n    return new Observable(function (observer) {\n      var abortController;\n      if (!options.signal) {\n        var _createSignalIfSuppor = createSignalIfSupported(),\n          controller = _createSignalIfSuppor.controller;\n        if (controller) {\n          abortController = controller;\n          options.signal = abortController.signal;\n        }\n      }\n      var runtimeFetch = customFetch || fetch;\n      runtimeFetch(uri, options).then(function (response) {\n        operation.setContext({\n          response: response\n        });\n        return response;\n      }).then(parseAndCheckHttpResponse(operation)).then(function (result) {\n        observer.next(result);\n        observer.complete();\n      }).catch(function (error) {\n        if (error.name === 'AbortError') return;\n        if (error.result && error.result.errors && error.result.data) observer.next(error.result);\n        observer.error(error);\n      });\n      return function () {\n        if (abortController) abortController.abort();\n      };\n    });\n  });\n};","map":{"version":3,"names":["_interopRequireDefault","require","_extends2","_require","ApolloLink","Observable","_require2","selectURI","selectHttpOptionsAndBody","fallbackHttpConfig","serializeFetchParameter","createSignalIfSupported","parseAndCheckHttpResponse","_require3","extractFiles","isExtractableFile","ReactNativeFile","exports","formDataAppendFile","formData","fieldName","file","append","name","createUploadLink","_temp","_ref","_ref$uri","uri","fetchUri","_ref$isExtractableFil","customIsExtractableFile","CustomFormData","FormData","_ref$formDataAppendFi","customFormDataAppendFile","customFetch","fetch","fetchOptions","credentials","headers","includeExtensions","linkConfig","http","options","operation","context","getContext","_context$clientAwaren","clientAwareness","version","contextConfig","default","_selectHttpOptionsAnd","body","_extractFiles","clone","files","payload","size","RuntimeFormData","form","map","i","forEach","paths","JSON","stringify","observer","abortController","signal","_createSignalIfSuppor","controller","runtimeFetch","then","response","setContext","result","next","complete","catch","error","errors","data","abort"],"sources":["/home/bonifacio/code/service_bundle_frontend/node_modules/apollo-upload-client/lib/index.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');\n\nvar _extends2 = _interopRequireDefault(\n  require('@babel/runtime/helpers/extends')\n);\n\nvar _require = require('apollo-link'),\n  ApolloLink = _require.ApolloLink,\n  Observable = _require.Observable;\n\nvar _require2 = require('apollo-link-http-common'),\n  selectURI = _require2.selectURI,\n  selectHttpOptionsAndBody = _require2.selectHttpOptionsAndBody,\n  fallbackHttpConfig = _require2.fallbackHttpConfig,\n  serializeFetchParameter = _require2.serializeFetchParameter,\n  createSignalIfSupported = _require2.createSignalIfSupported,\n  parseAndCheckHttpResponse = _require2.parseAndCheckHttpResponse;\n\nvar _require3 = require('extract-files'),\n  extractFiles = _require3.extractFiles,\n  isExtractableFile = _require3.isExtractableFile,\n  ReactNativeFile = _require3.ReactNativeFile;\n\nexports.ReactNativeFile = ReactNativeFile;\nexports.isExtractableFile = isExtractableFile;\n\nfunction formDataAppendFile(formData, fieldName, file) {\n  formData.append(fieldName, file, file.name);\n}\n\nexports.formDataAppendFile = formDataAppendFile;\n\nexports.createUploadLink = function (_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$uri = _ref.uri,\n    fetchUri = _ref$uri === void 0 ? '/graphql' : _ref$uri,\n    _ref$isExtractableFil = _ref.isExtractableFile,\n    customIsExtractableFile =\n      _ref$isExtractableFil === void 0\n        ? isExtractableFile\n        : _ref$isExtractableFil,\n    CustomFormData = _ref.FormData,\n    _ref$formDataAppendFi = _ref.formDataAppendFile,\n    customFormDataAppendFile =\n      _ref$formDataAppendFi === void 0\n        ? formDataAppendFile\n        : _ref$formDataAppendFi,\n    customFetch = _ref.fetch,\n    fetchOptions = _ref.fetchOptions,\n    credentials = _ref.credentials,\n    headers = _ref.headers,\n    includeExtensions = _ref.includeExtensions;\n\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions,\n    },\n    options: fetchOptions,\n    credentials: credentials,\n    headers: headers,\n  };\n  return new ApolloLink(function (operation) {\n    var uri = selectURI(operation, fetchUri);\n    var context = operation.getContext();\n    var _context$clientAwaren = context.clientAwareness;\n    _context$clientAwaren =\n      _context$clientAwaren === void 0 ? {} : _context$clientAwaren;\n    var name = _context$clientAwaren.name,\n      version = _context$clientAwaren.version,\n      headers = context.headers;\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: (0, _extends2.default)(\n        {},\n        name && {\n          'apollographql-client-name': name,\n        },\n        {},\n        version && {\n          'apollographql-client-version': version,\n        },\n        {},\n        headers\n      ),\n    };\n\n    var _selectHttpOptionsAnd = selectHttpOptionsAndBody(\n        operation,\n        fallbackHttpConfig,\n        linkConfig,\n        contextConfig\n      ),\n      options = _selectHttpOptionsAnd.options,\n      body = _selectHttpOptionsAnd.body;\n\n    var _extractFiles = extractFiles(body, '', customIsExtractableFile),\n      clone = _extractFiles.clone,\n      files = _extractFiles.files;\n\n    var payload = serializeFetchParameter(clone, 'Payload');\n\n    if (files.size) {\n      delete options.headers['content-type'];\n      var RuntimeFormData = CustomFormData || FormData;\n      var form = new RuntimeFormData();\n      form.append('operations', payload);\n      var map = {};\n      var i = 0;\n      files.forEach(function (paths) {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n      i = 0;\n      files.forEach(function (paths, file) {\n        customFormDataAppendFile(form, ++i, file);\n      });\n      options.body = form;\n    } else options.body = payload;\n\n    return new Observable(function (observer) {\n      var abortController;\n\n      if (!options.signal) {\n        var _createSignalIfSuppor = createSignalIfSupported(),\n          controller = _createSignalIfSuppor.controller;\n\n        if (controller) {\n          abortController = controller;\n          options.signal = abortController.signal;\n        }\n      }\n\n      var runtimeFetch = customFetch || fetch;\n      runtimeFetch(uri, options)\n        .then(function (response) {\n          operation.setContext({\n            response: response,\n          });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(function (result) {\n          observer.next(result);\n          observer.complete();\n        })\n        .catch(function (error) {\n          if (error.name === 'AbortError') return;\n          if (error.result && error.result.errors && error.result.data)\n            observer.next(error.result);\n          observer.error(error);\n        });\n      return function () {\n        if (abortController) abortController.abort();\n      };\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}