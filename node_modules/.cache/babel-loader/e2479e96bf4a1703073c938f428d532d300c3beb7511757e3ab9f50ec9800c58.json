{"ast":null,"code":"import UPDATE_STATUS_ADMIN_CART_ITEM from '@/graphql/UpdateStatusAdminCartItem.gql';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'BookList',\n  computed: {\n    ...mapState(['userRole'])\n  },\n  // mounted(){\n  //   console.log('oksdf')\n  //     console.log(this.get_role());\n  // },\n  methods: {\n    // get_role() {\n    //   const userRole = localStorage.getItem('userRole');\n    //   console.log('asdfasdf', userRole);\n    //   return userRole;\n    // },\n    async action_item(item, action) {\n      console.log(item, action);\n      let status = 0;\n      if (action == 'cancelled') status = 3;\n      if (action == 'completed') status = 4;\n      const response = await this.$apollo.mutate({\n        mutation: UPDATE_STATUS_ADMIN_CART_ITEM,\n        variables: {\n          id: parseInt(item.id),\n          status: status\n        }\n      });\n      if (response) {\n        alert('The item id: ' + item.id + ' has been completed.');\n        this.reloadPage();\n      }\n      console.log(response);\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    }\n  }\n};\nconsole.log('asdf');","map":{"version":3,"names":["UPDATE_STATUS_ADMIN_CART_ITEM","mapState","name","computed","methods","action_item","item","action","console","log","status","response","$apollo","mutate","mutation","variables","id","parseInt","alert","reloadPage","window","location","reload"],"sources":["src/components/BookList.vue"],"sourcesContent":["<template>\n  <div>\n    <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n      <li class=\"nav-item\" role=\"presentation\">\n        <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"home-tab-pane\" aria-selected=\"true\">All</button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"profile-tab-pane\" aria-selected=\"false\">Upcoming</button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button class=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#contact-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"contact-tab-pane\" aria-selected=\"false\">Completed</button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button class=\"nav-link\" id=\"disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#disabled-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"disabled-tab-pane\" aria-selected=\"false\">Cancelled</button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button class=\"nav-link\" id=\"mostbook-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#mostbook-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"disabled-tab-pane\" aria-selected=\"false\">Most Booked</button>\n      </li>\n    </ul>\n    <div class=\"tab-content\" id=\"myTabContent\">\n      <div class=\"tab-pane fade show active\" id=\"home-tab-pane\" role=\"tabpanel\" aria-labelledby=\"home-tab\" tabindex=\"0\">\n        <ApolloQuery :query=\"require('../graphql/AdminCartItemAll.gql')\">\n          <template v-slot=\"{ result: { data, loading } }\">\n            <div v-if=\"loading\">Loading...</div>\n            <div v-else>\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>serviceName</th>\n                    <th>userName</th>\n                    <th>userLastname</th>\n                    <th>date</th>\n                    <th>time</th>\n                    <th>status</th>\n                  </tr>\n                </thead>\n                <tbody v-if=\"data && data.adminCartItem.length > 0\">\n                  <tr v-for=\"item in data.adminCartItem\" :key=\"item.id\">\n                    <td>{{ item.id }}</td>\n                    <td>{{ item.serviceName }}</td>\n                    <td>{{ item.userName }}</td>\n                    <td>{{ item.userLastname }}</td>\n                    <td>{{ item.date }}</td>\n                    <td>{{ item.time }}</td>\n                    <td>{{ item.status }}</td>\n                  </tr>\n                </tbody>\n                <tbody v-else>\n                  <tr><td colspan=\"7\">No record found.</td></tr>\n                </tbody>\n              </table>\n            </div>\n          </template>\n        </ApolloQuery>\n      </div>\n      <div class=\"tab-pane fade\" id=\"profile-tab-pane\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" tabindex=\"0\">\n        <ApolloQuery :query=\"require('../graphql/AdminCartItemUpcoming.gql')\">\n          <template v-slot=\"{ result: { data, loading } }\">\n            <div v-if=\"loading\">Loading...</div>\n            <div v-else>\n              <!-- Check if there are zero records -->\n              <!-- <div v-if=\"data.adminCartItem.length === 0\">\n                <p>No records found.</p>\n              </div> -->\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>id</th>\n                      <th>serviceName</th>\n                      <th>userName</th>\n                      <th>userLastname</th>\n                      <th>date</th>\n                      <th>time</th>\n                      <th>status</th>\n                      <th\n                      >\n                       <!-- v-if=\"get_role !== 'manager'\" -->\n                      action</th>\n                    </tr>\n                  </thead>\n                  <tbody v-if=\"data && data.adminCartItem\">\n                    <tr v-for=\"item in data.adminCartItem\" :key=\"item.id\">\n                      <td>{{ item.id }}</td>\n                      <td>{{ item.serviceName }}</td>\n                      <td>{{ item.userName }}</td>\n                      <td>{{ item.userLastname }}</td>\n                      <td>{{ item.date }}</td>\n                      <td>{{ item.time }}</td>\n                      <td>{{ item.status }}</td>\n                      <td \n                      >\n                      <!-- v-if=\"this.get_role() != 'manager'\" --> \n                        <span @click=\"action_item(item, 'completed')\" class=\"btn btn-success\">complete</span>\n                        <span @click=\"action_item(item, 'cancelled')\" class=\"btn btn-danger\">cancelled</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </template>\n        </ApolloQuery>\n      </div>\n      <div class=\"tab-pane fade\" id=\"contact-tab-pane\" role=\"tabpanel\" aria-labelledby=\"contact-tab\" tabindex=\"0\">\n        <ApolloQuery :query=\"require('../graphql/AdminCartItemCompleted.gql')\">\n          <template v-slot=\"{ result: { data, loading } }\">\n            <div v-if=\"loading\">Loading...</div>\n            <div v-else>\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>serviceName</th>\n                    <th>userName</th>\n                    <th>userLastname</th>\n                    <th>date</th>\n                    <th>time</th>\n                    <th>status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <template v-if=\"data && data.adminCartItemCountService\">\n                    <tr>\n                      <td colspan=\"7\">No records found.</td>\n                    </tr>\n                  </template>\n                  <template v-else>\n                    <tr v-for=\"item in data.adminCartItem\" :key=\"item.id\">\n                      <td>{{ item.id }}</td>\n                      <td>{{ item.serviceName }}</td>\n                      <td>{{ item.userName }}</td>\n                      <td>{{ item.userLastname }}</td>\n                      <td>{{ item.date }}</td>\n                      <td>{{ item.time }}</td>\n                      <td>{{ item.status }}</td>\n                    </tr>\n                  </template>\n                </tbody>\n              </table>\n            </div>\n          </template>\n        </ApolloQuery>\n      </div>\n      <div class=\"tab-pane fade\" id=\"disabled-tab-pane\" role=\"tabpanel\" aria-labelledby=\"disabled-tab\" tabindex=\"0\">\n        <ApolloQuery :query=\"require('../graphql/AdminCartItemCancelled.gql')\">\n          <template v-slot=\"{ result: { data, loading } }\">\n            <div v-if=\"loading\">Loading...</div>\n            <div v-else>\n              <!-- Check if there are zero records -->\n              <!-- <div v-if=\"data.adminCartItem.length === 0\">\n                <p>No records found.</p>\n              </div> -->\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>id</th>\n                      <th>serviceName</th>\n                      <th>userName</th>\n                      <th>userLastname</th>\n                      <th>date</th>\n                      <th>time</th>\n                      <th>status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <template v-if=\"data.adminCartItem\">\n                      <tr v-for=\"item in data.adminCartItem\" :key=\"item.id\">\n                        <td>{{ item.id }}</td>\n                        <td>{{ item.serviceName }}</td>\n                        <td>{{ item.userName }}</td>\n                        <td>{{ item.userLastname }}</td>\n                        <td>{{ item.date }}</td>\n                        <td>{{ item.time }}</td>\n                        <td>{{ item.status }}</td>\n                      </tr>\n                    </template>\n                    <template v-else><tr><td colspan=\"7\">No items available.</td></tr></template>\n                  </tbody>\n                </table>\n              </div>\n            </template>\n        </ApolloQuery>\n      </div>\n      <div class=\"tab-pane fade\" id=\"mostbook-tab-pane\" role=\"tabpanel\" aria-labelledby=\"disabled-tab\" tabindex=\"0\">\n        <ApolloQuery :query=\"require('../graphql/AdminCartItemCountService.gql')\">\n          <template v-slot=\"{ result: { data, loading } }\">\n            <div v-if=\"loading\">Loading...</div>\n            <div v-else>\n              <!-- Check if there are zero records -->\n              <!-- <div v-if=\"data.adminCartItem.length === 0\">\n                <p>No records found.</p>\n              </div> -->\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>count</th>\n                      <th>serviceName</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <template v-if=\"data && data.adminCartItemCountService\">\n                      <tr>\n                        <td colspan=\"2\">No records found.</td>\n                      </tr>\n                    </template>\n                    <template v-else>\n                      <tr v-for=\"item in data.adminCartItemCountService\" :key=\"item.id\">\n                        <td>{{ item.count }}</td>\n                        <td>{{ item.service.name }}</td>\n                      </tr>\n                    </template>\n                  </tbody>\n                </table>\n              </div>\n            </template>\n        </ApolloQuery>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UPDATE_STATUS_ADMIN_CART_ITEM from '@/graphql/UpdateStatusAdminCartItem.gql';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'BookList',\n  computed: {\n    ...mapState(['userRole']),\n  },\n  // mounted(){\n  //   console.log('oksdf')\n  //     console.log(this.get_role());\n  // },\n  methods: {\n    // get_role() {\n    //   const userRole = localStorage.getItem('userRole');\n    //   console.log('asdfasdf', userRole);\n    //   return userRole;\n    // },\n    async action_item(item, action) {\n      console.log(item, action)\n      let status = 0;\n      if (action == 'cancelled') status = 3\n      if (action == 'completed') status = 4\n      const response = await this.$apollo.mutate({\n        mutation: UPDATE_STATUS_ADMIN_CART_ITEM,\n        variables: {\n          id: parseInt(item.id),\n          status: status\n        }\n      })\n      if (response) {\n        alert('The item id: ' + item.id + ' has been completed.' )\n        this.reloadPage()\n      }\n      console.log(response)\n    },\n    reloadPage() {\n      // Reload the current page\n      window.location.reload();\n    },\n  }\n}\nconsole.log('asdf')\n</script>\n\n<style>\n\n</style>"],"mappings":"AA8NA,OAAAA,6BAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,QAAA;IACA,GAAAF,QAAA;EACA;EACA;EACA;EACA;EACA;EACAG,OAAA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAC,YAAAC,IAAA,EAAAC,MAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,IAAA,EAAAC,MAAA;MACA,IAAAG,MAAA;MACA,IAAAH,MAAA,iBAAAG,MAAA;MACA,IAAAH,MAAA,iBAAAG,MAAA;MACA,MAAAC,QAAA,cAAAC,OAAA,CAAAC,MAAA;QACAC,QAAA,EAAAd,6BAAA;QACAe,SAAA;UACAC,EAAA,EAAAC,QAAA,CAAAX,IAAA,CAAAU,EAAA;UACAN,MAAA,EAAAA;QACA;MACA;MACA,IAAAC,QAAA;QACAO,KAAA,mBAAAZ,IAAA,CAAAU,EAAA;QACA,KAAAG,UAAA;MACA;MACAX,OAAA,CAAAC,GAAA,CAAAE,QAAA;IACA;IACAQ,WAAA;MACA;MACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;IACA;EACA;AACA;AACAd,OAAA,CAAAC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}